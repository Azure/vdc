{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "deployment-prefix": {
            "type": "string",
            "metadata": {
                 "description": ""
             }
        },
        "sas-key":{  
            "type":"string",
            "metadata":{  
                "description":""
            }
        },
        "output-params-storage-key":{  
            "type":"string",
            "metadata":{  
                "description":"Default storage account Key. Storage account that contains output parameters and common scripts"
            }
        },
        "output-params-storage-account-name":{  
            "type":"string",
            "metadata":{  
                "description":""
            }
        },
        "vnet-id": {
            "type": "string",
            "metadata": {
                "description": "Name of the Shared services virtual network."
            }
        },
        "vnet-resourceGroup": {
            "type": "string",
            "metadata": {
                "description": "Resource group name of the Shared services virtual network."
            }
        },
        "data-asg-name": {
            "type": "string",
            "metadata": {
                "description": "Data ASG name."
            }
        },
        "default-subnet-name": {
            "type": "string",
            "defaultValue": "default",
            "metadata": {
                "description": "Name of the management subnet inside the workload virtual network."
            }
        },
        "extension-name": {
            "type": "string",
            "metadata": {
                "description": "Name of the extension deployment."
            }
        },
        "admin-username": {
            "type": "string",
            "metadata": {
                "description": "The username used to establish management VMs."
            }
        },
        "admin-password": {
            "type": "securestring",
            "metadata": {
                "description": "The password given to the admin user."
            }
        },
        "virtualMachine-size": {
            "type": "string",
            "defaultValue": "Standard_DS1_v2",
            "metadata": {
                "description": "Size of the management VMs."
            }
        },
        "virtualMachine-count": {
            "type": "int",
            "defaultValue": 1,
            "metadata": {
                "description": "Number of management VMs to be created."
            }
        },
        "os-type": {
            "type": "string",
            "defaultValue": "Windows",
            "allowedValues": [
                "Windows",
                "Linux"
            ],
            "metadata": {
                "description": "OS platform of the management VM image."
            }
        },
        "os-image": {
            "type": "object",
            "metadata": {
                "description": "OS image used for the management VMs."
            }
        },
        "domain-name": {
            "type": "string",
            "metadata": {
                "description": "AD Domain name"
            }
        },
        "domain-admin-user": {
            "type": "string",
            "metadata": {
                "description": "Domain user that has privileges to join a VM into a Domain"
            }
        },
        "domain-admin-password": {
            "type": "securestring",
            "metadata": {
                "description": "Domain user that has privileges to join a VM into a Domain"
            }
        },
        "sql-backend-pool-name": {
            "type": "string",
            "defaultValue": "sql-backend-pool",
            "metadata": {
                 "description": "Specifies the name of the Load Balancer backend pool"
             }
         },
         "default-subnet-address-prefix": {
            "type": "string",
            "metadata": {
                 "description": "Specifies the subnet address prefix"
             }
         },
         "cluster-name": {
            "type": "string",
            "metadata": {
                "description": "SQL Server AlwaysOn Cluster name"
            }
        },
        "sql-server-start-ip-address": {
            "type": "string",
            "metadata": {
                "description": "SQL Server Start IP Address, it will increment +1 on each VM loop"
            }
        },
        "sql-server-ilb-ip-address": {
            "type": "string",
            "metadata": {
                "description": "SQL Server Internal Load Balancer IP Address"
            }
        },
        "sql-server-cluster-ip-address": {
            "type": "string",
            "metadata": {
                "description": "SQL Server Cluster IP Address, SQL Server AlwaysOn uses two IP addresses"
            }
        }
    },
    "variables": {
        "resource-prefix": "[concat(parameters('deployment-prefix'), '-', parameters('extension-name'))]",
        "sql-lb-name": "[concat(variables('resource-prefix'), '-lb')]",
        "configuration-url-sasToken": "[concat('?', parameters('sas-key'))]",
        "availabilitySet-name": "[concat(parameters('extension-name'), '-as')]",
        "virtualMachine-name-prefix": "[concat(variables('resource-prefix'), '-vm')]",
        "subnet-id": "[concat(parameters('vnet-id'), '/subnets/', parameters('default-subnet-name'))]",
        "uniqueString": "[uniqueString(subscription().id, parameters('deployment-prefix'), 'sql')]",
        "diagnostic-storageAccount-prefix": "[concat(parameters('extension-name'), 'diag')]",
        "diagnostic-storageAccount-name": "[toLower(substring(replace(concat(variables('diagnostic-storageAccount-prefix'), variables('uniqueString'), variables('uniqueString')), '-', ''), 0, 23) )]",
        "antimalware-extension-name": "IaaSAntimalware",
        "diagnostics-extension-name": "IaaSDiagnostics",
        "networkWatcher-extension-name": "NetworkWatcher",
        "encryption-extension-name": "AzureDiskEncryption",
        "encryption-operation": "EnableEncryption",
        "key-encryptionAlgorithm": "RSA-OAEP",
        "diagnostic-storageAccount-id": "[resourceId('Microsoft.Storage/storageAccounts/', variables('diagnostic-storageAccount-name'))]",
        "wad-logs": "<WadCfg> <DiagnosticMonitorConfiguration overallQuotaInMB=\"4096\" xmlns=\"http://schemas.microsoft.com/ServiceHosting/2010/10/DiagnosticsConfiguration\"> <DiagnosticInfrastructureLogs scheduledTransferLogLevelFilter=\"Error\"/> <WindowsEventLog scheduledTransferPeriod=\"PT1M\" > <DataSource name=\"Application!*[System[(Level = 1 or Level = 2)]]\" /> <DataSource name=\"Security!*[System[(Level = 1 or Level = 2)]]\" /> <DataSource name=\"System!*[System[(Level = 1 or Level = 2)]]\" /></WindowsEventLog>",
        "wad-perf-counters1": "<PerformanceCounters scheduledTransferPeriod=\"PT1M\"><PerformanceCounterConfiguration counterSpecifier=\"\\Processor(_Total)\\% Processor Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU utilization\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor(_Total)\\% Privileged Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU privileged time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor(_Total)\\% User Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU user time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor Information(_Total)\\Processor Frequency\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"CPU frequency\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\System\\Processes\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"Processes\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Process(_Total)\\Thread Count\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"Threads\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Process(_Total)\\Handle Count\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"Handles\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\% Committed Bytes In Use\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Memory usage\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\Available Bytes\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Memory available\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\Committed Bytes\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Memory committed\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\Commit Limit\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Memory commit limit\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\% Disk Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Disk active time\" locale=\"en-us\"/></PerformanceCounterConfiguration>",
        "wad-perf-counters2": "<PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\% Disk Read Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Disk active read time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\% Disk Write Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Disk active write time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Transfers/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Disk operations\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Reads/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Disk read operations\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Writes/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Disk write operations\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Bytes/sec\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"Disk speed\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Read Bytes/sec\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"Disk read speed\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Write Bytes/sec\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"Disk write speed\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\LogicalDisk(_Total)\\% Free Space\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Disk free space (percentage)\" locale=\"en-us\"/></PerformanceCounterConfiguration></PerformanceCounters>",
        "wad-cfgx-start": "[concat(variables('wad-logs'), variables('wad-perf-counters1'), variables('wad-perf-counters2'), '<Metrics resourceId=\"')]",
        "wad-metrics-resource-id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name , '/providers/', 'Microsoft.Compute/virtualMachines/')]",
        "wad-cfgx-end": "\"><MetricAggregation scheduledTransferPeriod=\"PT1H\"/><MetricAggregation scheduledTransferPeriod=\"PT1M\"/></Metrics></DiagnosticMonitorConfiguration></WadCfg>",
        "lb-ID": "[resourceId('Microsoft.Network/loadBalancers',variables('sql-lb-name'))]",
        "sql-frontendIP-config-id": "[concat(variables('lb-ID'),'/frontendIPConfigurations/LoadBalancerFrontEnd')]",
        "lb-pool-id": "[concat(variables('lb-ID'),'/backendAddressPools/', parameters('sql-backend-pool-name'))]",
        "lb-probe-id": "[concat(variables('lb-ID'),'/probes/tcpProbe')]",
        "data-asg-id": "[resourceId(parameters('vnet-resourceGroup'), 'Microsoft.Network/applicationSecurityGroups', concat(parameters('deployment-prefix'), '-', parameters('data-asg-name'), '-asg'))]",
        "cloud-witness-storageAccount-prefix": "[concat(parameters('extension-name'), 'cw')]",
        "cloud-witness-storageAccount-name": "[toLower(substring(replace(concat(variables('cloud-witness-storageAccount-prefix'), variables('uniqueString'), variables('uniqueString')), '-', ''), 0, 23) )]",
        "cloud-witness-storageAccount-id": "[resourceId('Microsoft.Storage/storageAccounts/', variables('cloud-witness-storageAccount-name'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Compute/availabilitySets",
            "apiVersion": "2016-04-30-preview",
            "location": "[resourceGroup().location]",
            "name": "[variables('availabilitySet-name')]",
            "properties": {
                "platformFaultDomainCount": 2,
                "platformUpdateDomainCount": 5,
                "managed": true
            },
            "sku": {
                "name": "Aligned"
            }
        },
        {
            "apiVersion": "2017-08-01",
            "name": "[variables('sql-lb-name')]",
            "type": "Microsoft.Network/loadBalancers",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "[variables('sql-lb-name')]"
            },            
            "sku": {
                "name": "Basic"
            },
            "properties": {
              "frontendIPConfigurations": [
                {
                  "name": "LoadBalancerFrontEnd",
                  "properties": {
                    "subnet": {
                        "id": "[variables('subnet-id')]"
                    },
                    "privateIPAllocationMethod": "Static",
                    "privateIPAddress": "[parameters('sql-server-ilb-ip-address')]"
                  }
                }
              ],
              "backendAddressPools": [
                {
                  "name": "[parameters('sql-backend-pool-name')]"
                }
              ],
              "inboundNatRules": [
                
              ],
              "loadBalancingRules": [
                {
                  "name": "LBRule",
                  "properties": {
                    "frontendIPConfiguration": {
                      "id": "[variables('sql-frontendIP-config-id')]"
                    },
                    "backendAddressPool": {
                      "id": "[variables('lb-pool-id')]"
                    },
                    "protocol": "Tcp",
                    "frontendPort": 1433,
                    "backendPort": 1433,
                    "enableFloatingIP": false,
                    "idleTimeoutInMinutes": 5,
                    "probe": {
                      "id": "[variables('lb-probe-id')]"
                    }
                  }
                }
              ],
              "probes": [
                {
                  "name": "tcpProbe",
                  "properties": {
                    "protocol": "Tcp",
                    "port": 1433,
                    "intervalInSeconds": 5,
                    "numberOfProbes": 2
                  }
                }
              ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2017-09-01",
            "location": "[resourceGroup().location]",
            "name": "[concat(variables('virtualMachine-name-prefix'), copyindex(1), '-nic')]",
            "copy": {
                "name": "nicLoop",
                "count": "[parameters('virtualMachine-count')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/loadBalancers', variables('sql-lb-name'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[vdc.nextIP(parameters('sql-server-start-ip-address'), copyIndex())]",
                            "subnet": {
                                "id": "[variables('subnet-id')]"
                            },
                            "applicationSecurityGroups": [
                                {
                                    "id": "[variables('data-asg-id')]"
                                }
                            ],
                            "loadBalancerBackendAddressPools": [{
                                "id": "[concat(variables('lb-ID'), '/backendAddressPools/', parameters('sql-backend-pool-name'))]"
                            }]
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('diagnostic-storageAccount-name')]",
            "apiVersion": "2018-02-01",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "StorageV2",
            "tags": {
                "displayName": "Management Diagnostic Storage Account"
            },
            "properties": {
                "encryption": {
                    "keySource": "Microsoft.Storage",
                    "services": {
                        "blob": {
                            "enabled": true
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('cloud-witness-storageAccount-name')]",
            "apiVersion": "2018-02-01",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "StorageV2",
            "tags": {
                "displayName": "Cloud Witness Storage account"
            },
            "properties": {
                "encryption": {
                    "keySource": "Microsoft.Storage",
                    "services": {
                        "blob": {
                            "enabled": true
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2017-03-30",
            "location": "[resourceGroup().location]",
            "name": "[concat(variables('virtualMachine-name-prefix'), copyindex(1))]",
            "copy": {
                "name": "vmLoop",
                "count": "[parameters('virtualMachine-count')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySet-name'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('virtualMachine-name-prefix'), copyindex(1), '-nic'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('diagnostic-storageAccount-name'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('cloud-witness-storageAccount-name'))]"
            ],
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySet-name'))]"
                },
                "osProfile": {
                    "computerName": "[concat(parameters('extension-name'), '-vm',copyindex(1))]",
                    "adminUsername": "[parameters('admin-username')]",
                    "adminPassword": "[parameters('admin-password')]"
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachine-size')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[parameters('os-image').publisher]",
                        "offer": "[parameters('os-image').offer]",
                        "sku": "[parameters('os-image').sku]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[replace(toLower(substring(concat(parameters('extension-name'), copyindex(1), '-osdisk', '-', replace(concat(variables('uniqueString'), variables('uniqueString')), '-', '')), 0, 36)), '-', '')]",                        
                        "osType": "[parameters('os-type')]",
                        "createOption": "FromImage"
                    },
                    "dataDisks": [
                        {
                            "lun": 0,
                            "name": "[replace(toLower(substring(concat(parameters('extension-name'), copyindex(1), '-datadisk1', '-', replace(concat(variables('uniqueString'), variables('uniqueString')), '-', '')), 0, 36)), '-', '')]", 
                            "diskSizeGB": 1023,
                            "createOption": "Empty",
                            "caching": "ReadOnly",
                            "managedDisk": {
                                "storageAccountType": "Premium_LRS"
                            }
                        },
                        {
                            "lun": 1,
                            "name": "[replace(toLower(substring(concat(parameters('extension-name'), copyindex(1), '-datadisk2', '-', replace(concat(variables('uniqueString'), variables('uniqueString')), '-', '')), 0, 40)), '-', '')]", 
                            "diskSizeGB": 1023,
                            "createOption": "Empty",
                            "caching": "ReadOnly",
                            "managedDisk": {
                                "storageAccountType": "Premium_LRS"
                            }
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('virtualMachine-name-prefix'), copyindex(1), '-nic'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('diagnostic-storageAccount-name')), '2016-12-01').primaryEndpoints.blob)]"
                    }
                }
            },
            "resources": [
                {
                    "type": "extensions",
                    "name": "DSCSetupSQLAndJoinDomain",
                    "apiVersion": "2017-03-30",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', concat(variables('virtualMachine-name-prefix'), copyindex(1)))]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Powershell",
                        "type": "DSC",
                        "typeHandlerVersion": "2.9",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "configuration": {
                                "url": "[concat('https://', parameters('output-params-storage-account-name'), '.blob.core.windows.net/scripts/windows/joinComputerToDomain.zip')]",
                                "script": "joinComputerToDomain.ps1",
                                "function": "JoinComputerToDomain"
                            },
                            "configurationArguments": {
                                "DomainName": "[parameters('domain-name')]",
                                "ServerName": "[concat(parameters('extension-name'), '-vm',copyindex(1))]"
                            }
                        },
                        "protectedSettings": { 
                            "configurationUrlSasToken": "[variables('configuration-url-sasToken')]",
                            "configurationArguments": {
                                "AdminCreds": {
                                    "UserName": "[parameters('domain-admin-user')]",
                                    "Password": "[parameters('domain-admin-password')]"
                                }
                            }
                        }
                    }
                },
                {
                    "type": "extensions",
                    "name": "[variables('antimalware-extension-name')]",
                    "apiVersion": "2017-03-30",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', concat(variables('virtualMachine-name-prefix'), copyindex(1)))]",
                        "[resourceId('Microsoft.Compute/virtualMachines/extensions', concat(variables('virtualMachine-name-prefix'), copyindex(1)), 'DSCSetupSQLAndJoinDomain')]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Azure.Security",
                        "type": "IaaSAntimalware",
                        "typeHandlerVersion": "1.5",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "AntimalwareEnabled": true,
                            "RealtimeProtectionEnabled": "true",
                            "ScheduledScanSettings": {
                                "isEnabled": "true",
                                "scanType": "Quick",
                                "day": "7",
                                "time": "120"
                            }
                        }
                    }
                },
                {
                    "type": "extensions",
                    "name": "[variables('diagnostics-extension-name')]",
                    "location": "[resourceGroup().location]",
                    "apiVersion": "2017-03-30",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', concat(variables('virtualMachine-name-prefix'), copyindex(1)))]",
                        "[resourceId('Microsoft.Compute/virtualMachines/extensions', concat(variables('virtualMachine-name-prefix'), copyindex(1)), 'DSCSetupSQLAndJoinDomain')]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Azure.Diagnostics",
                        "type": "IaaSDiagnostics",
                        "typeHandlerVersion": "1.5",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "xmlCfg": "[base64(concat(variables('wad-cfgx-start'), variables('wad-metrics-resource-id'), variables('virtualMachine-name-prefix'), copyindex(1), variables('wad-cfgx-end')))]",
                            "storageAccount": "[variables('diagnostic-storageAccount-name')]"
                        },
                        "protectedSettings": {
                            "storageAccountName": "[variables('diagnostic-storageAccount-name')]",
                            "storageAccountKey": "[listkeys(variables('diagnostic-storageAccount-id'), '2016-12-01').keys[0].value]",
                            "storageAccountEndPoint": "https://core.windows.net"
                        }
                    }
                },
                {
                    "type": "extensions",
                    "name": "[variables('networkWatcher-extension-name')]",
                    "apiVersion": "2017-03-30",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', concat(variables('virtualMachine-name-prefix'), copyindex(1)))]",
                        "[resourceId('Microsoft.Compute/virtualMachines/extensions', concat(variables('virtualMachine-name-prefix'), copyindex(1)), 'DSCSetupSQLAndJoinDomain')]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Azure.NetworkWatcher",
                        "type": "NetworkWatcherAgentWindows",
                        "typeHandlerVersion": "1.4",
                        "autoUpgradeMinorVersion": true
                    }
                }            
            ]
        },
        {
            "name": "[concat('NestedDeploymentSetupDSCRequiredModules-vm', copyIndex(1))]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2016-09-01",
            "copy": {
                "name": "vmInstallDSCModulesLoop",
                "count": "[parameters('virtualMachine-count')]"
            },
            "dependsOn": [
                "vmLoop"
            ],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "resources": [
                        {
                            "apiVersion": "2017-03-30",
                            "type": "Microsoft.Compute/virtualMachines",
                            "name": "[concat(variables('virtualMachine-name-prefix'), copyIndex(1))]",
                            "location": "[resourceGroup().location]",
                            "resources": [
                                {
                                    "type": "extensions",
                                    "name": "PSInstallDSCModules",
                                    "apiVersion": "2017-03-30",
                                    "location": "[resourceGroup().location]",
                                    "dependsOn": [
                                        "[resourceId('Microsoft.Compute/virtualMachines', concat(variables('virtualMachine-name-prefix'), copyIndex(1)))]"
                                    ],
                                    "properties": {
                                        "publisher": "Microsoft.Compute",
                                        "type": "CustomScriptExtension",
                                        "typeHandlerVersion": "1.8",
                                        "autoUpgradeMinorVersion": true,
                                        "settings": {
                                            "fileUris": [
                                                "[concat('https://', parameters('output-params-storage-account-name'), '.blob.core.windows.net/scripts/windows/PrepareSQLServer_Install_Modules.ps1')]"
                                            ]
                                        },
                                        "protectedSettings": { 
                                            "storageAccountName": "[parameters('output-params-storage-account-name')]",
                                            "storageAccountKey": "[parameters('output-params-storage-key')]",
                                            "commandToExecute": "powershell -ExecutionPolicy Unrestricted -File ./windows/PrepareSQLServer_Install_Modules.ps1"
                                        }
                                    }
                                }
                            ]
                        }
                    ]
                },
                "parameters": {}
            }
        },
        {
            "name": "vm1NestedDeploymentSetupSQL",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2016-09-01",
            "dependsOn": [
                "vmInstallDSCModulesLoop"
            ],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "resources": [
                        {
                            "apiVersion": "2017-03-30",
                            "type": "Microsoft.Compute/virtualMachines",
                            "name": "[concat(variables('virtualMachine-name-prefix'), '1')]",
                            "location": "[resourceGroup().location]",
                            "resources":[
                                {
                                    "type": "extensions",
                                    "name": "DSCSetupSQLAndJoinDomain",
                                    "apiVersion": "2017-03-30",
                                    "location": "[resourceGroup().location]",
                                    "dependsOn": [
                                        "[resourceId('Microsoft.Compute/virtualMachines', concat(variables('virtualMachine-name-prefix'), '1'))]"
                                    ],
                                    "properties": {
                                            "publisher": "Microsoft.Powershell",
                                            "type": "DSC",
                                            "typeHandlerVersion": "2.7",
                                            "autoUpgradeMinorVersion": true,
                                            "settings": {
                                                "configuration": {
                                                    "url": "[concat('https://', parameters('output-params-storage-account-name'), '.blob.core.windows.net/scripts/windows/PrepareSQLServer.ps1.zip')]",
                                                    "script": "PrepareSqlServer.ps1",
                                                    "function": "SqlServerPrepareDsc"
                                                },
                                                "configurationArguments": {
                                                    "DomainName": "[parameters('domain-name')]",
                                                    "ClusterName": "[parameters('cluster-name')]",
                                                    "ClusterOwnerNode": "[concat(parameters('extension-name'), '-vm1')]",
                                                    "ClusterIP": "[parameters('sql-server-cluster-ip-address')]",
                                                    "witnessStorageBlobEndPoint": "[concat('https://', variables('cloud-witness-storageAccount-name'), '.blob.core.windows.net')]",
                                                    "witnessStorageAccountKey": "[listkeys(variables('cloud-witness-storageAccount-id'), '2016-12-01').keys[0].value]"
                                                }
                                            },
                                            "protectedSettings": { 
                                                "configurationUrlSasToken": "[variables('configuration-url-sasToken')]",
                                                "configurationArguments": {
                                                    "AdminCreds": {
                                                        "UserName": "[parameters('domain-admin-user')]",
                                                        "Password": "[parameters('domain-admin-password')]"
                                                    },
                                                    "sqlServiceCreds": {
                                                        "UserName": "[parameters('admin-username')]",
                                                        "Password": "[parameters('admin-password')]"
                                                }
                                            }
                                        }
                                    }
                                }                             
                            ]
                        }
                    ]
                },
                "parameters": {}
            }
        },
        {
            "name": "NestedDeploymentSleep",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2016-09-01",
            "dependsOn": [
                "vm1NestedDeploymentSetupSQL"
            ],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "resources": [
                        {
                            "apiVersion": "2017-03-30",
                            "type": "Microsoft.Compute/virtualMachines",
                            "name": "[concat(variables('virtualMachine-name-prefix'), '1')]",
                            "location": "[resourceGroup().location]",
                            "resources":[
                                {
                                    "type": "extensions",
                                    "name": "PSInstallDSCModules",
                                    "apiVersion": "2017-03-30",
                                    "location": "[resourceGroup().location]",
                                    "dependsOn": [
                                        "[resourceId('Microsoft.Compute/virtualMachines', concat(variables('virtualMachine-name-prefix'), '1'))]"
                                    ],
                                    "properties": {
                                        "publisher": "Microsoft.Compute",
                                        "type": "CustomScriptExtension",
                                        "typeHandlerVersion": "1.8",
                                        "autoUpgradeMinorVersion": true,
                                        "settings": {
                                            "fileUris": [
                                                "[concat('https://', parameters('output-params-storage-account-name'), '.blob.core.windows.net/scripts/windows/sleep.ps1')]"
                                            ]
                                        },
                                        "protectedSettings": { 
                                            "storageAccountName": "[parameters('output-params-storage-account-name')]",
                                            "storageAccountKey": "[parameters('output-params-storage-key')]",
                                            "commandToExecute": "powershell -ExecutionPolicy Unrestricted -File ./windows/sleep.ps1 -Sleep 600"
                                        }
                                    }
                                }                            
                            ]
                        }
                    ]
                },
                "parameters": {}
            }
        },
        {
            "name": "vm2NestedDeploymentSetupSQL",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2016-09-01",
            "dependsOn": [
                "NestedDeploymentSleep"
            ],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "resources": [
                        {
                            "apiVersion": "2017-03-30",
                            "type": "Microsoft.Compute/virtualMachines",
                            "name": "[concat(variables('virtualMachine-name-prefix'), '2')]",
                            "location": "[resourceGroup().location]",
                            "resources":[
                                {
                                    "type": "extensions",
                                    "name": "DSCSetupSQLAndJoinDomain",
                                    "apiVersion": "2017-03-30",
                                    "location": "[resourceGroup().location]",
                                    "dependsOn": [
                                        "[resourceId('Microsoft.Compute/virtualMachines', concat(variables('virtualMachine-name-prefix'), '2'))]"
                                    ],
                                    "properties": {
                                            "publisher": "Microsoft.Powershell",
                                            "type": "DSC",
                                            "typeHandlerVersion": "2.7",
                                            "autoUpgradeMinorVersion": true,
                                            "settings": {
                                                "configuration": {
                                                    "url": "[concat('https://', parameters('output-params-storage-account-name'), '.blob.core.windows.net/scripts/windows/PrepareSQLServer.ps1.zip')]",
                                                    "script": "PrepareSqlServer.ps1",
                                                    "function": "SqlServerPrepareDsc"
                                                },
                                                "configurationArguments": {
                                                    "DomainName": "[parameters('domain-name')]",
                                                    "ClusterName": "[parameters('cluster-name')]",
                                                    "ClusterOwnerNode": "[concat(parameters('extension-name'), '-vm1')]",
                                                    "ClusterIP": "[parameters('sql-server-cluster-ip-address')]",
                                                    "witnessStorageBlobEndPoint": "[concat('https://', variables('cloud-witness-storageAccount-name'), '.blob.core.windows.net')]",
                                                    "witnessStorageAccountKey": "[listkeys(variables('cloud-witness-storageAccount-id'), '2016-12-01').keys[0].value]"
                                                }
                                            },
                                            "protectedSettings": { 
                                                "configurationUrlSasToken": "[variables('configuration-url-sasToken')]",
                                                "configurationArguments": {
                                                    "AdminCreds": {
                                                        "UserName": "[parameters('domain-admin-user')]",
                                                        "Password": "[parameters('domain-admin-password')]"
                                                    },
                                                    "sqlServiceCreds": {
                                                        "UserName": "[parameters('admin-username')]",
                                                        "Password": "[parameters('admin-password')]"
                                                }
                                            }
                                        }
                                    }
                                }                             
                            ]
                        }
                    ]
                },
                "parameters": {}
            }
        },
        {
            "name": "vm1NestedDeploymentSetupSQLAG",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2016-09-01",
            "dependsOn": [
                "vm2NestedDeploymentSetupSQL"
            ],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "resources": [
                        {
                            "apiVersion": "2017-03-30",
                            "type": "Microsoft.Compute/virtualMachines",
                            "name": "[concat(variables('virtualMachine-name-prefix'), '1')]",
                            "location": "[resourceGroup().location]",
                            "resources":[
                                {
                                    "type": "extensions",
                                    "name": "DSCSetupSQLAndJoinDomain",
                                    "apiVersion": "2017-03-30",
                                    "location": "[resourceGroup().location]",
                                    "dependsOn": [
                                        "[resourceId('Microsoft.Compute/virtualMachines', concat(variables('virtualMachine-name-prefix'), '1'))]"
                                    ],
                                    "properties": {
                                            "publisher": "Microsoft.Powershell",
                                            "type": "DSC",
                                            "typeHandlerVersion": "2.7",
                                            "autoUpgradeMinorVersion": true,
                                            "settings": {
                                                "configuration": {
                                                    "url": "[concat('https://', parameters('output-params-storage-account-name'), '.blob.core.windows.net/scripts/windows/CreateHADB.ps1.zip')]",
                                                    "script": "agdb.ps1",
                                                    "function": "SQLServerDBDsc"
                                                },
                                                "configurationArguments": {
                                                    "DomainName": "[parameters('domain-name')]",
                                                    "ClusterName": "[parameters('cluster-name')]",
                                                    "ClusterOwnerNode": "[concat(parameters('extension-name'), '-vm1')]",
                                                    "ClusterIP": "[parameters('sql-server-cluster-ip-address')]",
                                                    "witnessStorageBlobEndPoint": "[concat('https://', variables('cloud-witness-storageAccount-name'), '.blob.core.windows.net')]",
                                                    "witnessStorageAccountKey": "[listkeys(variables('cloud-witness-storageAccount-id'), '2016-12-01').keys[0].value]"
                                                }
                                            },
                                            "protectedSettings": { 
                                                "configurationUrlSasToken": "[variables('configuration-url-sasToken')]",
                                                "configurationArguments": {
                                                    "AdminCreds": {
                                                        "UserName": "[parameters('domain-admin-user')]",
                                                        "Password": "[parameters('domain-admin-password')]"
                                                    },
                                                    "sqlServiceCreds": {
                                                        "UserName": "[parameters('admin-username')]",
                                                        "Password": "[parameters('admin-password')]"
                                                }
                                            }
                                        }
                                    }
                                }                             
                            ]
                        }
                    ]
                },
                "parameters": {}
            }
        }
    ],
    "functions":[
        {
            "namespace": "vdc",
            "members": {
                "nextIP": {
                    "parameters": [
                        {
                            "name": "ip",
                            "type": "string"
                        },
                        {
                            "name": "operand",
                            "type": "int"
                        }
                    ],
                    "output": {
                        "type": "string",
                        "value": "[concat(split(parameters('ip'), '.')[0], '.' ,split(parameters('ip'), '.')[1], '.' ,split(parameters('ip'), '.')[2], '.', add(int(split(parameters('ip'), '.')[3]), parameters('operand')))]"
                    }
                },
                "splitIP": {
                    "parameters": [
                        {
                            "name": "initialIP",
                            "type": "string"
                        }
                    ],
                    "output": {
                        "type": "array",
                        "value": "[split(parameters('initialIP'), '.')]"
                    }
                },
                "removeAddressRange":{
                    "parameters": [
                        {
                            "name": "ip",
                            "type": "string"
                        }
                    ],
                    "output": {
                        "type": "string",
                        "value": "[if(greater(indexOf(parameters('ip'), '/'), 0), substring(parameters('ip'), 0, add(indexOf(parameters('ip'), '/'), 0)), parameters('ip'))]"
                    }
                }
            }
        }
    ],
    "outputs": {}
}