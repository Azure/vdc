{
  "$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "administratorLogin": {
      "type": "string",
      "metadata": {
        "description": "Administrator username for the server."
      }
    },
    "administratorLoginPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password given to the admin user."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Azure region where the database will be deployed."
      }
    },
    "serverName": {
      "type": "string",
      "metadata": {
        "description": "The name of the SQL server on which the database will be created."
      }
    },
    "allowAzureIps": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Whether the database is accessible by the Azure services."
      }
    },
    "diagnosticStorageAccountPrimaryBlobEndpoint": {
      "type": "string",
      "metadata": {
        "description": "The primary endpoint of the storage account where the vulnerability assesments scan results will be stored."
      }
    },
    "diagnosticStorageAccountAccessKey": {
      "type": "string",
      "metadata": {
        "description": "The key of the storage account where the vulnerability assesments scan results will be stored."
      }
    },
    "virtualNetworkList": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "List of service endpoints to be enabled for the server."
      }
    }
  },
  "variables": {
    "workaround": {
      "true": "[parameters('virtualNetworkList')]",
      "false": [
        {
          "resourceGroupName": "workaround",
          "vNetName": "",
          "subnetName": ""
        }
      ]
    },
    "vnets": "[variables('workaround')[string(greater(length(parameters('virtualNetworkList')), 0))]]"
  },
  "resources": [
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Sql/servers",
      "location": "[parameters('location')]",
      "name": "[parameters('serverName')]",
      "properties": {
        "administratorLogin": "[parameters('administratorLogin')]",
        "administratorLoginPassword": "[parameters('administratorLoginPassword')]",
        "version": "12.0"
      },
      "resources": [
        {
          "condition": "[parameters('allowAzureIps')]",
          "apiVersion": "2014-04-01-preview",
          "dependsOn": [
            "[concat('Microsoft.Sql/servers/', parameters('serverName'))]"
          ],
          "location": "[parameters('location')]",
          "name": "AllowAllWindowsAzureIps",
          "properties": {
            "endIpAddress": "0.0.0.0",
            "startIpAddress": "0.0.0.0"
          },
          "type": "firewallrules"
        },
        {
          "apiVersion": "2017-03-01-preview",
          "type": "securityAlertPolicies",
          "name": "Default",
          "dependsOn": [
            "[concat('Microsoft.Sql/servers/', parameters('serverName'))]"
          ],
          "properties": {
            "state": "Enabled",
            "disabledAlerts": [],
            "emailAddresses": [],
            "emailAccountAdmins": true
          }
        },
        {
          "apiVersion": "2018-06-01-preview",
          "type": "vulnerabilityAssessments",
          "name": "Default",
          "properties": {
            "storageContainerPath": "[concat(parameters('diagnosticStorageAccountPrimaryBlobEndpoint'), 'vulnerability-assessment')]",
            "storageAccountAccessKey": "[parameters('diagnosticStorageAccountAccessKey')]",
            "recurringScans": {
              "isEnabled": true,
              "emailSubscriptionAdmins": true,
              "emails": []
            }
          },
          "dependsOn": [
            "[concat('Microsoft.Sql/servers/', parameters('serverName'))]",
            "[concat('Microsoft.Sql/servers/', parameters('serverName'), '/securityAlertPolicies/Default')]"
          ]
        }
      ]
    },
    {
      "condition": "[greater(length(parameters('virtualNetworkList')),0)]",
      "type": "Microsoft.Sql/servers/virtualNetworkRules",
      "name": "[concat(parameters('serverName'), '/', variables('vnets')[copyIndex('virtualNetworkCopy')].vNetName, '-', variables('vnets')[copyIndex('virtualNetworkCopy')].subnetName, '-vse')]",
      "apiVersion": "2015-05-01-preview",
      "scale": null,
      "copy": {
        "name": "virtualNetworkCopy",
        "count": "[length(variables('vnets'))]"
      },
      "properties": {
        "virtualNetworkSubnetId": "[resourceId(variables('vnets')[copyIndex('virtualNetworkCopy')].resourceGroupName, 'Microsoft.Network/virtualNetworks/subnets', variables('vnets')[copyIndex('virtualNetworkCopy')].vNetName, variables('vnets')[copyIndex('virtualNetworkCopy')].subnetName)]"
      },
      "dependsOn": [
        "[concat('Microsoft.Sql/servers/', parameters('serverName'))]"
      ]
    }
  ]
}