{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "deployment-prefix": {
            "type": "string",
            "metadata": {
                 "description": "Deployment prefix. E.g. Organization-DeploymentType"
             }
        },
        "output-params-storage-key":{  
            "type":"string",
            "metadata":{  
                "description":"Default storage account Key. Storage account that contains output parameters and common scripts"
            }
        },
        "output-params-storage-account-name":{  
            "type":"string",
            "metadata":{  
                "description":"Default storage account name. Storage account that contains output parameters and common scripts"
            }
        },
        "vnet-id": {
            "type": "string",
            "metadata": {
                "description": "Shared services Virtual Network resource Id"
            }
        },
        "vnet-resourceGroup": {
            "type": "string",
            "metadata": {
                "description": "Shared services Virtual Network resource group name"
            }
        },
        "nva-jb-asg-id": {
            "type": "string",
            "metadata": {
                "description": "ASG associated to the Virtual Appliance (Jumpbox Nic)"
            }
        },
        "nva-dmz-asg-id": {
            "type": "string",
            "metadata": {
                "description": "ASG associated to the Virtual Appliance (DMZ Nic)"
            }
        },
        "shared-services-udr-name": {
            "type": "string",
            "metadata": {
                "description": "Name of the shared services UDR"
            }
        },
        "shared-services-routes":{
            "type": "array",
            "metadata": {
                 "description": "Specifies the shared services UDR"
             }
        },
        "shared-services-subnet-name": {
            "type": "string",
            "metadata": {
                "description": "Name of Shared Services Subnet, this name is used to get the SubnetId"
            }
        },
        "dmz-subnet-name": {
            "type": "string",
            "metadata": {
                "description": "Name of DMZ Subnet, this name is used to get the SubnetId"
            }
        },
        "dmz-subnet-address-prefix": {
            "type": "string",
            "metadata": {
                "description": "DMZ Subnet address prefix, this value is used in custom script that enables NVA routing and forces symmetric routing"
            }
        },
        "ubuntu-nva-address-start": {
            "type": "string",
            "metadata": {
                 "description": "IP address to be used as the NIC of an NVA, depending on the number of NVAs to be created, this value will get incremented by 1"
             }
        },
        "extension-name": {
            "type": "string",
            "metadata": {
                "description": "Name of the extension deployment."
            }
        },        
        "admin-username": {
            "type": "string",
            "metadata": {
                "description": "The username used to establish jumpbox VMs."
            }
        },
        "admin-password": {
            "type":"securestring",
            "metadata": {
                "description": "The password given to the admin user."
            }
        },
        "virtualMachine-count": {
            "type": "int",
            "defaultValue": 2,
            "metadata": {
                "description": "Number of NVA VMs to be created."
            }
        },
        "virtualMachine-size": {
            "type": "string",
            "defaultValue": "Standard_DS2_v2",
            "metadata": {
                "description": "Size of the NVA VMs."
            }
        },
        "os-type": {
            "type": "string",
            "defaultValue": "Windows",
            "allowedValues": [
                "Windows",
                "Linux"
            ],
            "metadata": {
                "description": "OS platform of the NVA VM image."
            }
        },
        "os-image": {
            "type": "object",
            "metadata": {
                "description": "OS image used for the NVA VMs."
            }
        },
        "nva-backend-pool-name": {
           "type": "string",
           "defaultValue": "nva-backend-pool",
           "metadata": {
                "description": "Specifies the name of the Load Balancer backend pool"
            }
        },
        "ubuntu-nva-lb-ip-address": {
            "type": "string",
            "metadata": {
                 "description": "Specifies a static private IP associated to the NVA Load Balancer"
             }
        }
    },
    "variables": {
        "resource-prefix": "[concat(parameters('deployment-prefix'), '-', parameters('extension-name'))]",
        "nva-lb-name": "[concat(variables('resource-prefix'), '-', parameters('extension-name'), '-lb')]",
        "availabilitySet-name": "[concat(variables('resource-prefix'), '-as')]",
        "virtualMachine-name-prefix": "[concat(variables('resource-prefix'), '-vm')]",
        "shared-services-subnet-ID": "[concat(parameters('vnet-id'), '/subnets/', parameters('shared-services-subnet-name'))]",
        "dmz-subnet-ID": "[concat(parameters('vnet-id'), '/subnets/', parameters('dmz-subnet-name'))]",
        "uniqueString": "[uniqueString(subscription().id, resourceGroup().id)]",
        "diagnostic-storageAccount-prefix": "[concat(variables('resource-prefix'), 'diag')]",
        "diagnostic-storageAccount-name": "[replace(toLower(substring(replace(concat(variables('diagnostic-storageAccount-prefix'), variables('uniqueString'), variables('uniqueString')), '-', ''), 0, 23) ), '-', '')]",
        "networkWatcher-extension-name": "NetworkWatcher",
        "lb-ID": "[resourceId('Microsoft.Network/loadBalancers',variables('nva-lb-name'))]",
        "dmz-endIP-config-id": "[concat(variables('lb-ID'),'/frontendIPConfigurations/LoadBalancerFrontEnd')]",
        "lb-pool-id": "[concat(variables('lb-ID'),'/backendAddressPools/', parameters('nva-backend-pool-name'))]",
        "lb-probe-id": "[concat(variables('lb-ID'),'/probes/tcpProbe')]",
        "dmz-address-prefix-ip": "[vdc.removeAddressRange(parameters('dmz-subnet-address-prefix'))]",
        "dmz-default-gateway-ip": "[vdc.nextIP(variables('dmz-address-prefix-ip'), 1)]",
        "encryption-extension-name": "AzureDiskEncryption",
        "encryption-operation": "EnableEncryption",
        "key-encryptionAlgorithm": "RSA-OAEP"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('diagnostic-storageAccount-name')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "Storage",
            "tags": {
                "displayName": "Management Diagnostic Storage Account"
            },
            "properties": {
                "encryption": {
                    "keySource": "Microsoft.Storage",
                    "services": {
                        "blob": {
                            "enabled": true
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/availabilitySets",
            "apiVersion": "2016-04-30-preview",
            "location": "[resourceGroup().location]",
            "name": "[variables('availabilitySet-name')]",
            "tags": {
                "displayName": "[variables('availabilitySet-name')]"
            },
            "properties": {
                "platformFaultDomainCount": 2,
                "platformUpdateDomainCount": 5,
                "managed": true
            },
            "sku": {
                "name": "Aligned"
            }
        },
        {
            "apiVersion": "2017-08-01",
            "name": "[variables('nva-lb-name')]",
            "type": "Microsoft.Network/loadBalancers",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "[variables('nva-lb-name')]"
            },
            "sku": {
                "name": "Standard"
            },
            "properties": {
              "frontendIPConfigurations": [
                {
                  "name": "LoadBalancerFrontEnd",
                  "properties": {
                    "subnet": {
                        "id": "[variables('dmz-subnet-ID')]"
                    },
                    "privateIPAddress": "[parameters('ubuntu-nva-lb-ip-address')]",
                    "privateIPAllocationMethod": "Static"
                  }
                }
              ],
              "backendAddressPools": [
                {
                  "name": "[parameters('nva-backend-pool-name')]"
                }
              ],
              "inboundNatRules": [
                
              ],
              "loadBalancingRules": [
                {
                  "name": "LBRule",
                  "properties": {
                    "frontendIPConfiguration": {
                      "id": "[variables('dmz-endIP-config-id')]"
                    },
                    "backendAddressPool": {
                      "id": "[variables('lb-pool-id')]"
                    },
                    "protocol": "All",
                    "frontendPort": 0,
                    "backendPort": 0,
                    "enableFloatingIP": false,
                    "idleTimeoutInMinutes": 5,
                    "probe": {
                      "id": "[variables('lb-probe-id')]"
                    }
                  }
                }
              ],
              "probes": [
                {
                  "name": "tcpProbe",
                  "properties": {
                    "protocol": "Tcp",
                    "port": 22,
                    "intervalInSeconds": 5,
                    "numberOfProbes": 2
                  }
                }
              ]
            }
        },
        {
            "apiVersion": "2017-08-01",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[concat(variables('virtualMachine-name-prefix'), copyindex(1), '-nic1-pip')]",
            "location": "[resourceGroup().location]",
            "sku":{
                "name": "Standard"
            },
            "copy": {
                "name": "nicPipLoop",
                "count": "[parameters('virtualMachine-count')]"
            },
            "tags": {
                "displayName": "[concat(variables('virtualMachine-name-prefix'), copyindex(1), '-nic1-pip')]"
            },
            "properties": {
                "publicIPAllocationMethod": "Static"  ,
                "publicIPAddressVersion": "IPv4"              
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2017-09-01",
            "location": "[resourceGroup().location]",
            "name": "[concat(variables('virtualMachine-name-prefix'), copyindex(1), '-nic1')]",
            "tags": {
                "displayName": "[concat(variables('virtualMachine-name-prefix'), copyindex(1), '-nic1')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/loadBalancers/', variables('nva-lb-name'))]",
                "nicPipLoop"
            ],
            "copy": {
                "name": "nic1Loop",
                "count": "[parameters('virtualMachine-count')]"
            },
            "properties": {
                "enableIPForwarding":true,
                "enableAcceleratedNetworking":true,
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "publicIPAddress":{
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('virtualMachine-name-prefix'), copyindex(1), '-nic1-pip'))]"
                            },
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[vdc.nextIP(parameters('ubuntu-nva-address-start'), copyIndex())]",
                            "subnet": {
                                "id": "[variables('dmz-subnet-id')]"
                            },
                            "applicationSecurityGroups": [
                                {
                                    "id": "[parameters('nva-dmz-asg-id')]"
                                }
                            ],
                            "loadBalancerBackendAddressPools": [{
                                "id": "[concat(variables('lb-ID'), '/backendAddressPools/', parameters('nva-backend-pool-name'))]"
                            }]
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2017-09-01",
            "location": "[resourceGroup().location]",
            "name": "[concat(variables('virtualMachine-name-prefix'), copyindex(1), '-nic2')]",
            "tags": {
                "displayName": "[concat(variables('virtualMachine-name-prefix'), copyindex(1), '-nic2')]"
            },
            "copy": {
                "name": "nic2Loop",
                "count": "[parameters('virtualMachine-count')]"
            },
            "properties": {
                "enableIPForwarding":true,
                "enableAcceleratedNetworking":true,
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('shared-services-subnet-id')]"
                            },
                            "applicationSecurityGroups": [
                                {
                                    "id": "[parameters('nva-jb-asg-id')]"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2017-03-30",
            "location": "[resourceGroup().location]",
            "name": "[concat(variables('virtualMachine-name-prefix'), copyindex(1))]",
            "tags": {
                "displayName": "[concat(variables('virtualMachine-name-prefix'), copyindex(1))]"
            },
            "copy": {
                "name": "vmLoop",
                "count": "[parameters('virtualMachine-count')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySet-name'))]",
                "[concat('Microsoft.Network/networkInterfaces/', concat(variables('virtualMachine-name-prefix'), copyindex(1), '-nic1'))]",
                "[concat('Microsoft.Network/networkInterfaces/', concat(variables('virtualMachine-name-prefix'), copyindex(1), '-nic2'))]",
                "[resourceId('Microsoft.Storage/storageAccounts',variables('diagnostic-storageAccount-name'))]"
            ],
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySet-name'))]"
                },
                "osProfile": {
                    "computerName": "[concat(parameters('extension-name'), '-vm',copyindex(1))]",
                    "adminUsername": "[parameters('admin-username')]",
                    "adminPassword": "[parameters('admin-password')]"
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachine-size')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[parameters('os-image').publisher]",
                        "offer": "[parameters('os-image').offer]",
                        "sku": "[parameters('os-image').sku]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[replace(toLower(substring(concat(variables('virtualMachine-name-prefix'), copyindex(1), '-osdisk', '-', replace(concat(variables('uniqueString'), variables('uniqueString')), '-', '')), 0, 40)), '-', '')]",                        
                        "osType": "[parameters('os-type')]",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('virtualMachine-name-prefix'), copyindex(1), '-nic1'))]",
                            "properties":{
                                "primary": true
                            }
                        },
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('virtualMachine-name-prefix'), copyindex(1), '-nic2'))]",
                            "properties":{
                                "primary": false
                            }
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('diagnostic-storageAccount-name')), '2016-12-01').primaryEndpoints.blob)]"
                    }
                }
            },
            "resources": [
                {
                    "name": "enable-routing-and-force-symmetric-routing",
                    "type": "extensions",
                    "location": "[resourceGroup().location]",
                    "apiVersion": "2017-03-30",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', concat(variables('virtualMachine-name-prefix'), copyindex(1)))]"
                    ],
                    "tags": {
                      "displayName": "enable-routing-and-force-symmetric-routing"
                    },
                    "properties": {
                      "publisher": "Microsoft.Azure.Extensions",
                      "type": "CustomScript",
                      "typeHandlerVersion": "2.0",
                      "autoUpgradeMinorVersion": true,
                      "protectedSettings": {
                        "storageAccountName": "[parameters('output-params-storage-account-name')]",
                        "storageAccountKey": "[parameters('output-params-storage-key')]",
                        "commandToExecute": "[concat('bash enable-routing-and-force-symmetric-routing.sh ', reference(resourceId('Microsoft.Network/networkInterfaces', concat(variables('virtualMachine-name-prefix'), copyindex(1), '-nic1')), '2016-09-01').ipConfigurations[0].properties.privateIPAddress, ' ', parameters('dmz-subnet-address-prefix'), ' ', variables('dmz-default-gateway-ip'), ' eth0')]",
                        "fileUris": [
                            "[concat('https://', parameters('output-params-storage-account-name'), '.blob.core.windows.net/scripts/linux/enable-routing-and-force-symmetric-routing.sh')]"
                        ]  
                      }
                    }
                },
                {
                    "type": "extensions",
                    "name": "[variables('networkWatcher-extension-name')]",
                    "apiVersion": "2017-03-30",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', concat(variables('virtualMachine-name-prefix'), copyindex(1)))]",
                        "[resourceId('Microsoft.Compute/virtualMachines/extensions', concat(variables('virtualMachine-name-prefix'), copyindex(1)), 'enable-routing-and-force-symmetric-routing')]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Azure.NetworkWatcher",
                        "type": "NetworkWatcherAgentLinux",
                        "typeHandlerVersion": "1.4",
                        "autoUpgradeMinorVersion": true
                    }
                }
            ]
        },
        {
            "apiVersion": "2017-05-10",
            "name": "nestedDeployUDR",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[parameters('vnet-resourceGroup')]",
            "dependsOn": [
                "vmLoop"
            ],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.Network/routeTables",
                            "apiVersion": "2017-03-01",
                            "location": "[resourceGroup().location]",
                            "name": "[parameters('shared-services-udr-name')]",
                            "tags": {
                                "displayName": "[parameters('shared-services-udr-name')]"
                            },
                            "properties": {
                                "routes": "[parameters('shared-services-routes')]"
                            }
                        }
                    ]
                },
                "parameters": {}
            }
        }
    ],
    "functions":[
        {
            "namespace": "vdc",
            "members": {
                "nextIP": {
                    "parameters": [
                        {
                            "name": "ip",
                            "type": "string"
                        },
                        {
                            "name": "operand",
                            "type": "int"
                        }
                    ],
                    "output": {
                        "type": "string",
                        "value": "[concat(split(parameters('ip'), '.')[0], '.' ,split(parameters('ip'), '.')[1], '.' ,split(parameters('ip'), '.')[2], '.', add(int(split(parameters('ip'), '.')[3]), parameters('operand')))]"
                    }
                },
                "splitIP": {
                    "parameters": [
                        {
                            "name": "initialIP",
                            "type": "string"
                        }
                    ],
                    "output": {
                        "type": "array",
                        "value": "[split(parameters('initialIP'), '.')]"
                    }
                },
                "removeAddressRange":{
                    "parameters": [
                        {
                            "name": "ip",
                            "type": "string"
                        }
                    ],
                    "output": {
                        "type": "string",
                        "value": "[if(greater(indexOf(parameters('ip'), '/'), 0), substring(parameters('ip'), 0, add(indexOf(parameters('ip'), '/'), 0)), parameters('ip'))]"
                    }
                }
            }
        }
    ],
    "outputs": {}
}