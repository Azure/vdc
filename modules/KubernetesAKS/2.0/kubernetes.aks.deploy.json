{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "aksClusterName": {
      "type": "string",
      "metadata": {
        "description": "AKS Cluster Name"
      }
    },
    "subscriptionId": {
      "type": "string",
      "metadata": {
        "description": "AKS Cluster deployment Subcription Id"
      }
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "The location of AKS resource."
      }
    },
    "osDiskSizeGb": {
      "defaultValue": 0,
      "minValue": 0,
      "maxValue": 1023,
      "type": "int",
      "metadata": {
        "description": "Disk size (in GB) to provision for each of the agent pool nodes. This value ranges from 0 to 1023. Specifying 0 will apply the default disk size for that agentVMSize."
      }
    },
    "osType": {
      "defaultValue": "Linux",
      "allowedValues": [
        "Linux"
      ],
      "type": "string",
      "metadata": {
        "description": "The type of operating system."
      }
    },
    "agentCount": {
      "defaultValue": 3,
      "minValue": 1,
      "maxValue": 50,
      "type": "int",
      "metadata": {
        "description": "The number of agent nodes for the cluster."
      }
    },
    "agentVMSize": {
      "defaultValue": "Standard_D2_v2",
      "type": "string",
      "metadata": {
        "description": "The size of the Virtual Machine."
      }
    },
    "servicePrincipalClientId": {
      "type": "securestring",
      "metadata": {
        "description": "Client ID (used by cloudprovider)."
      }
    },
    "servicePrincipalClientSecret": {
      "type": "securestring",
      "metadata": {
        "description": "The Service Principal Client Secret."
      }
    },
    "kubernetesVersion": {
      "defaultValue": "1.7.7",
      "type": "string",
      "metadata": {
        "description": "The version of Kubernetes."
      }
    },
    "networkPlugin": {
      "allowedValues": [
        "azure",
        "kubenet"
      ],
      "type": "string",
      "metadata": {
        "description": "Network plugin used for building Kubernetes network."
      }
    },
    "vnetSubnetId": {
      "type": "string",
      "metadata": {
        "description": "Resource ID of virtual network subnet used for nodes and/or pods IP assignment."
      }
    },
    "serviceCIDR": {
      "type": "string",
      "metadata": {
        "description": "A CIDR notation IP range from which to assign service cluster IPs."
      }
    },
    "dnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "Optional DNS prefix to use with hosted Kubernetes API server FQDN."
      }
    },
    "dnsServiceIP": {
      "type": "string",
      "metadata": {
        "description": "Containers DNS server IP address."
      }
    },
    "dockerBridgeCIDR": {
      "type": "string",
      "metadata": {
        "description": "A CIDR notation IP for Docker bridge."
      }
    },
    "diagnosticEventHubName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Event Hub Name for the diagnostics events"
      }
    },
    "diagnosticEventHubAuthRuleId": {
      "type": "string",
      "metadata": {
        "description": "Resource ID of the event hub authorization rule for the Event Hubs namespace in which the event hub should be created or streamed to."
      }
    },
    "diagnosticOMSId": {
      "type": "string",
      "metadata": {
        "description": "Resource ID containing the insights"
      }
    },
    "diagnosticStorageId": {
      "type": "string",
      "metadata": {
        "description": "Storage account for the diagnostics events"
      }
    },
    "enableRBAC": {
      "defaultValue": true,
      "type": "bool",
      "metadata": {
        "description": "Boolean flag to turn on and off of RBAC."
      }
    },
    "rbacServerAppId": {
      "type": "string",
      "metadata": {
        "description": "RBAC server app id"
      }
    },
    "rbacServerSecret": {
      "type": "string",
      "metadata": {
        "description": "RBAC server app secret"
      }
    },
    "rbacClientAppId": {
      "type": "string",
      "metadata": {
        "description": "RBAC client app id"
      }
    },
    "rbacTenant": {
      "type": "string",
      "metadata": {
        "description": "RBAC tenant"
      }
    }
  },
  "variables": {
    "authRuleResourceId": "[parameters('diagnosticEventHubAuthRuleId')]",
    "emptyContent": {},
    "omsAgentConfig": {
      "omsagent": {
        "enabled": true,
        "config": {
          "logAnalyticsWorkspaceResourceID": "[parameters('diagnosticOMSId')]"
        }
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.ContainerService/managedClusters",
      "name": "[parameters('aksClusterName')]",
      "apiVersion": "2018-03-31",
      "location": "[parameters('location')]",
      "properties": {
        "kubernetesVersion": "[parameters('kubernetesVersion')]",
        "enableRBAC": "[parameters('enableRBAC')]",
        "dnsPrefix": "[parameters('dnsPrefix')]",
        "agentPoolProfiles": [
          {
            "name": "agentpool",
            "osDiskSizeGB": "[parameters('osDiskSizeGb')]",
            "count": "[parameters('agentCount')]",
            "vmSize": "[parameters('agentVMSize')]",
            "osType": "[parameters('osType')]",
            "storageProfile": "ManagedDisks",
            "vnetSubnetID": "[parameters('vnetSubnetId')]"
          }
        ],
        "servicePrincipalProfile": {
          "clientId": "[parameters('servicePrincipalClientId')]",
          "Secret": "[parameters('servicePrincipalClientSecret')]"
        },
        "networkProfile": {
          "networkPlugin": "[parameters('networkPlugin')]",
          "serviceCidr": "[parameters('serviceCIDR')]",
          "dnsServiceIP": "[parameters('dnsServiceIP')]",
          "dockerBridgeCidr": "[parameters('dockerBridgeCIDR')]"
        },
        "aadProfile": {
          "clientAppID": "[parameters('rbacClientAppId')]",
          "serverAppID": "[parameters('rbacServerAppId')]",
          "serverAppSecret": "[parameters('rbacServerSecret')]",
          "tenantID": "[parameters('rbacTenant')]"
        },
        "addonProfiles": "[if( empty(parameters('diagnosticOMSId')) , variables('emptyContent'), variables('omsAgentConfig'))]"

      },
      "resources": [
        {
          "type": "Microsoft.ContainerService/managedClusters/providers/diagnosticSettings",
          "name": "[concat(parameters('aksClusterName'), '/Microsoft.Insights/service')]",
          "dependsOn": [
            "[resourceId('Microsoft.ContainerService/managedClusters', parameters('aksClusterName'))]"
          ],
          "apiVersion": "2017-05-01-preview",
          "properties": {
            "workspaceId": "[parameters('diagnosticOMSId')]",
            "storageAccountId": "[parameters('diagnosticStorageId')]",
            "eventHubName": "[parameters('diagnosticEventHubName')]",
            "eventHubAuthorizationRuleId": "[parameters('diagnosticEventHubAuthRuleId')]",
            "logs": [
              {
                "category": "kube-apiserver",
                "enabled": true,
                "retentionPolicy": {
                  "days": 0,
                  "enabled": false
                }
              },
              {
                "category": "kube-controller-manager",
                "enabled": true,
                "retentionPolicy": {
                  "days": 0,
                  "enabled": false
                }
              },
              {
                "category": "cluster-autoscaler",
                "enabled": true,
                "retentionPolicy": {
                  "days": 0,
                  "enabled": false
                }
              },
              {
                "category": "kube-scheduler",
                "enabled": true,
                "retentionPolicy": {
                  "days": 0,
                  "enabled": false
                }
              },
              {
                "category": "kube-audit",
                "enabled": true,
                "retentionPolicy": {
                  "days": 0,
                  "enabled": false
                }
              }
            ],
            "metrics": [
              {
                "timeGrain": "PT1M",
                "enabled": true,
                "retentionPolicy": {
                  "enabled": false,
                  "days": 0
                }
              }
            ]
          }
        }
      ],
      "dependsOn": [
      ]
    }
  ],
  "outputs": {
    "nodeResourceGroupId": {
      "type": "string",
      "value": "[concat('/subscriptions/', parameters('subscriptionId'), '/resourceGroups/', reference(concat('Microsoft.ContainerService/managedClusters/', parameters('aksClusterName'))).nodeResourceGroup)]"
    },
    "nodeResourceGroupName": {
      "type": "string",
      "value": "[reference(concat('Microsoft.ContainerService/managedClusters/', parameters('aksClusterName'))).nodeResourceGroup]"
    },
    "aksFQDN": {
      "type": "string",
      "value": "[reference(concat('Microsoft.ContainerService/managedClusters/', parameters('aksClusterName'))).fqdn]"
    },
    "namespaceConnectionString": {
      "type": "string",
      "value": "[listkeys(variables('authRuleResourceId'), '2017-04-01').primaryConnectionString]"
    },
    "sharedAccessPolicyPrimaryKey": {
      "type": "string",
      "value": "[listkeys(variables('authRuleResourceId'), '2017-04-01').primaryKey]"
    }
  }
}