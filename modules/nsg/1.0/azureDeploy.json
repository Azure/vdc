{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "deployment-prefix": {
            "type": "string",
            "metadata": {
                 "description": "Deployment prefix. E.g. Organization-DeploymentType"
             }
        },
        "deployment-name": {
            "type": "string",
            "metadata": {
                 "description": "Deployment name"
             }
        },
        "network-security-groups": {
            "type": "array",
            "metadata": {
                 "description": "Array containing a list of network security group objects"
             }
        },
        "application-security-groups": {
            "type": "array",
            "metadata": {
                 "description": "Array containing a list of application security group objects"
             }
        },
        "oms-id":{  
            "type":"string",
            "metadata":{  
              "description": "ResourceId of the OMS workspace used for diagnostic log integration."
            }
        },
        "data-retention":{  
            "type":"int",
            "defaultValue":30,
            "minValue":7,
            "maxValue":730,
            "metadata":{  
              "description":"Number of days data will be retained for."
            }
        }
    },
    "variables": {
        "empty-array": [],
        "uniqueString": "[uniqueString(parameters('deployment-name'), subscription().id, resourceGroup().id)]",
        "diagnostic-storageAccount-prefix": "[concat(replace(parameters('deployment-name'), '-', ''), 'diag')]",
        "diagnostic-storageAccount-name": "[toLower(substring(replace(concat(variables('diagnostic-storageAccount-prefix'), variables('uniqueString'), variables('uniqueString')), '-', ''), 0, 23) )]"
    },
    "resources": [
        {
            "comments": "----DIAGNOSTICS STORAGE ACCOUNT-----",
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('diagnostic-storageAccount-name')]",
            "apiVersion": "2017-06-01",
            "location": "[resourceGroup().location]",
            "kind": "Storage",
            "sku": {
              "name": "Standard_LRS"
            },
            "tags": {
              "layer": "management"
            },
            "properties": {
              "mode": "Incremental",
              "encryption": {
                "keySource": "Microsoft.Storage",
                "services": {
                  "blob": {
                    "enabled": true
                  }
                }
              }
            }
        },
        {
            "apiVersion": "2017-10-01",
            "type": "Microsoft.Network/applicationSecurityGroups",
            "condition": "[if(equals(length(parameters('application-security-groups')), 0), bool('false'), bool('true'))]",
            "copy": {
                "count": "[if(equals(length(parameters('application-security-groups')), 0), 1, length(parameters('application-security-groups')))]",
                "name": "asgLoop"
            },
            "name": "[if(equals(length(parameters('application-security-groups')), 0), 'dummy', concat(parameters('deployment-prefix'), '-', parameters('application-security-groups')[copyIndex()].name, '-asg'))]",
            "location": "[resourceGroup().location]",
            "properties": {}
        },
        {
            "apiVersion": "2017-09-01",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[concat(parameters('deployment-prefix'), '-', parameters('network-security-groups')[copyIndex()].name, '-nsg')]",
            "location": "[resourceGroup().location]",
            "copy": {
                "count": "[length(parameters('network-security-groups'))]",
                "name": "nsgLoop"
            },
            "dependsOn": [
                "asgLoop",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('diagnostic-storageAccount-name'))]"
            ],
            "properties": {
                "copy": [
                    {
                        "name": "securityRules",
                        "count": "[length(parameters('network-security-groups')[copyIndex('nsgLoop')].rules)]",
                        "input": {
                            "name": "[parameters('network-security-groups')[copyIndex('nsgLoop')].rules[copyIndex('securityRules')].name]",
                            "properties": {
                                "access": "[parameters('network-security-groups')[copyIndex('nsgLoop')].rules[copyIndex('securityRules')].properties.access]",
                                "destinationAddressPrefix": "[if(equals(parameters('network-security-groups')[copyIndex('nsgLoop')].rules[copyIndex('securityRules')].properties.destinationAddressPrefix, ''), json('null'), parameters('network-security-groups')[copyIndex('nsgLoop')].rules[copyIndex('securityRules')].properties.destinationAddressPrefix)]",
                                "destinationAddressPrefixes": "[if(equals(length(parameters('network-security-groups')[copyIndex('nsgLoop')].rules[copyIndex('securityRules')].properties.destinationAddressPrefixes), 0), json('null'), parameters('network-security-groups')[copyIndex('nsgLoop')].rules[copyIndex('securityRules')].properties.destinationAddressPrefixes)]",
                                "destinationApplicationSecurityGroups": "[if(equals(length(parameters('network-security-groups')[copyIndex('nsgLoop')].rules[copyIndex('securityRules')].properties.destinationApplicationSecurityGroups), 0), json('null'), concat(variables('empty-array'), array(json(concat('{\"id\": \"', resourceId('Microsoft.Network/applicationSecurityGroups', concat(parameters('deployment-prefix'), '-', parameters('network-security-groups')[copyIndex()].rules[copyIndex('securityRules')].properties.destinationApplicationSecurityGroups[0].name, '-asg')), '\"', ',', '\"location\": \"', resourceGroup().location, '\"}')))))]",
                                "destinationPortRanges": "[if(equals(length(parameters('network-security-groups')[copyIndex('nsgLoop')].rules[copyIndex('securityRules')].properties.destinationPortRanges), 0), json('null'), parameters('network-security-groups')[copyIndex('nsgLoop')].rules[copyIndex('securityRules')].properties.destinationPortRanges)]",
                                "destinationPortRange": "[if(equals(parameters('network-security-groups')[copyIndex('nsgLoop')].rules[copyIndex('securityRules')].properties.destinationPortRange, ''), json('null'), parameters('network-security-groups')[copyIndex('nsgLoop')].rules[copyIndex('securityRules')].properties.destinationPortRange)]",
                                "direction": "[parameters('network-security-groups')[copyIndex('nsgLoop')].rules[copyIndex('securityRules')].properties.direction]",
                                "priority": "[int(parameters('network-security-groups')[copyIndex('nsgLoop')].rules[copyIndex('securityRules')].properties.priority)]",
                                "protocol": "[parameters('network-security-groups')[copyIndex('nsgLoop')].rules[copyIndex('securityRules')].properties.protocol]",
                                "sourceAddressPrefix": "[if(equals(parameters('network-security-groups')[copyIndex('nsgLoop')].rules[copyIndex('securityRules')].properties.sourceAddressPrefix, ''), json('null'), parameters('network-security-groups')[copyIndex()].rules[copyIndex('securityRules')].properties.sourceAddressPrefix)]",
                                "sourceApplicationSecurityGroups": "[if(equals(length(parameters('network-security-groups')[copyIndex('nsgLoop')].rules[copyIndex('securityRules')].properties.sourceApplicationSecurityGroups), 0), json('null'), concat(variables('empty-array'), array(json(concat('{\"id\": \"', resourceId('Microsoft.Network/applicationSecurityGroups', concat(parameters('deployment-prefix'), '-', parameters('network-security-groups')[copyIndex()].rules[copyIndex('securityRules')].properties.sourceApplicationSecurityGroups[0].name, '-asg')), '\"', ',', '\"location\": \"', resourceGroup().location, '\"}')))))]",
                                "sourcePortRanges": "[if(equals(length(parameters('network-security-groups')[copyIndex('nsgLoop')].rules[copyIndex('securityRules')].properties.sourcePortRanges), 0), json('null'), parameters('network-security-groups')[copyIndex('nsgLoop')].rules[copyIndex('securityRules')].properties.sourcePortRanges)]",
                                "sourcePortRange": "[parameters('network-security-groups')[copyIndex('nsgLoop')].rules[copyIndex('securityRules')].properties.sourcePortRange]"
                            }
                        }
                    }
                ]
            },
            "resources": [
                {
                  "type": "providers/diagnosticSettings",
                  "name": "Microsoft.Insights/service",
                  "dependsOn": [
                    "[concat(parameters('deployment-prefix'), '-', parameters('network-security-groups')[copyIndex()].name, '-nsg')]"
                  ],
                  "apiVersion": "2015-07-01",
                  "properties": {
                    "storageAccountId": "[resourceId('Microsoft.Storage/storageAccounts', variables('diagnostic-storageAccount-name'))]",
                    "workspaceId": "[parameters('oms-id')]",
                    "logs": [
                      {
                        "category": "NetworkSecurityGroupEvent",
                        "enabled": true,
                        "retentionPolicy": {
                          "days": "[parameters('data-retention')]",
                          "enabled": true
                        }
                      },
                      {
                        "category": "NetworkSecurityGroupRuleCounter",
                        "enabled": true,
                        "retentionPolicy": {
                          "days": "[parameters('data-retention')]",
                          "enabled": false
                        }
                      }
                    ]
                  }
                }
            ]
        }
    ],
    "outputs": {
    }
}