{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "deployment-prefix": {
            "type": "string",
            "metadata": {
                "description": "Deployment prefix. E.g. Organization-DeploymentType"
            }
        },
        "sas-key": {
            "type": "securestring",
            "metadata": {
                "description": "Shared Access Signature Key used to download custom scripts"
            }
        },
        "output-params-storage-account-name": {
            "type": "securestring",
            "metadata": {
                "description": "Default storage account name. Storage account that contains output parameters and common scripts"
            }
        },
        "output-params-storage-key": {
            "type": "securestring",
            "metadata": {
                "description": "Default storage account Key. Storage account that contains output parameters and common scripts"
            }
        },
        "la-workspace-id": {
            "type": "string",
            "metadata": {
                "description": "WorkspaceId or CustomerId value of OMS. This value is referenced in OMS VM Extension"
            }
        },
        "la-primary-shared-key": {
            "type": "securestring",
            "metadata": {
                "description": "WorkspaceKey value of OMS. This value is referenced in OMS VM Extension"
            }
        },
        "storageAccount-name": {
            "type": "string",
            "metadata": {
                "description": "Storage account used to store diagnostic information"
            }
        },
        "storageAccount-sasToken": {
            "type": "securestring",
            "metadata": {
                "description": "Diagnostic Storage Account SAS token"
            }
        },
        "adds-address-start": {
            "type": "string",
            "metadata": {
                "description": "IP address used as initial Active Directory Domain Services IP"
            }
        },
        "kv-uri": {
            "type": "securestring",
            "metadata": {
                "description": "AKV URI"
            }
        },
        "kv-id": {
            "type": "securestring",
            "metadata": {
                "description": "AKV Resource Id"
            }
        },
        "aad-principal-id": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "Azure Active Directory Service Principal ID"
            }
        },
        "aad-certificate-thumb": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "Azure Active Directory Thumbprint"
            }
        },
        "aad-certificate-url": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "Azure Active Directory Certificate URL. Certificate gets installed in the VMs"
            }
        },
        "adds-key": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "Active Directory Domain Services AKV encryption key"
            }
        },
        "vnet-id": {
            "type": "string",
            "metadata": {
                "description": "Shared services Virtual Network resource identifier"
            }
        },
        "vnet-resourceGroup": {
            "type": "string",
            "metadata": {
                "description": "Shared services Virtual Network resource group"
            }
        },
        "vnet-name": {
            "type": "string",
            "metadata": {
                "description": "Shared services Virtual Network name"
            }
        },
        "vnet-dns-servers": {
            "type": "array",
            "metadata": {
                "description": "Specifies the DNS servers to be associated to the Shared services Virtual Network"
            }
        },
        "dc-asg-name": {
            "type": "string",
            "metadata": {
                "description": "ASG associated to Domain Controllers"
            }
        },
        "shared-services-subnet-name": {
            "type": "string",
            "metadata": {
                "description": "Name of Shared Services Subnet, this name is used to get the SubnetId"
            }
        },
        "extension-name": {
            "type": "string",
            "metadata": {
                "description": "Prefix name of the resource. E.g. ADDS"
            }
        },
        "admin-username": {
            "type": "securestring",
            "metadata": {
                "description": "The username used to establish ADDS VMs"
            }
        },
        "admin-password": {
            "type": "securestring",
            "metadata": {
                "description": "The password given to the admin user"
            }
        },
        "virtualMachine-count": {
            "type": "int",
            "defaultValue": 2,
            "metadata": {
                "description": "Number of VMs to create"
            }
        },
        "virtualMachine-size": {
            "type": "string",
            "defaultValue": "Standard_DS2_v2",
            "metadata": {
                "description": "Size of the ADDS VMs"
            }
        },
        "os-type": {
            "type": "string",
            "defaultValue": "Windows",
            "allowedValues": [
                "Windows"
            ],
            "metadata": {
                "description": "OS platform of the ADDS VM image"
            }
        },
        "os-image": {
            "type": "object",
            "metadata": {
                "description": "OS image used for the ADDS VMs"
            }
        },
        "domain-name": {
            "type": "string",
            "metadata": {
                "description": "AD domain name"
            }
        },
        "on-premises-primaryDC-IP": {
            "type": "string",
            "metadata": {
                "description": "On-premises domain IP"
            }
        },
        "on-premises-AD-Sitename": {
            "type": "string",
            "metadata": {
                "description": "On-premises Active Directory site name"
            }
        },
        "dc-drive-letter": {
            "type": "string",
            "metadata": {
                "description": "Drive letter to install ADDS"
            }
        },
        "domain-admin-user": {
            "type": "securestring",
            "metadata": {
                "description": "Domain user that has privileges to join a VM into a Domain"
            }
        },
        "domain-admin-password": {
            "type": "securestring",
            "metadata": {
                "description": "Domain user that has privileges to join a VM into a Domain"
            }
        },
        "enable-encryption": {
            "type": "bool",
            "metadata": {
                "description": "Indicates whether or not to encrypt the VM disks"
            }
        }
    },
    "variables": {
        "resource-prefix": "[concat(parameters('deployment-prefix'), '-', parameters('extension-name'))]",
        "uniqueString": "[uniqueString(subscription().id, resourceGroup().id, concat(parameters('deployment-prefix'), '-adds'))]",
        "configuration-url-sasToken": "[concat('?', parameters('sas-key'))]",
        "subnet-name": "[parameters('shared-services-subnet-name')]",
        "availabilitySet-name": "[concat(variables('resource-prefix'), '-as')]",
        "virtualMachine-name-prefix": "[concat(variables('resource-prefix'), '-vm')]",
        "subnet-id": "[concat(parameters('vnet-id'), '/subnets/', variables('subnet-name'))]",
        "antimalware-extension-name": "IaaSAntimalware",
        "diagnostics-extension-name": "IaaSDiagnostics",
        "networkWatcher-extension-name": "NetworkWatcher",
        "MMA-extension-name": "OMSExtension",
        "custom-adds-extension-name": "DSCSetupADDS",
        "encryption-extension-name": "AzureDiskEncryption",
        "encryption-operation": "EnableEncryption",
        "key-encryptionAlgorithm": "RSA-OAEP",
        "dc-asg-id": "[resourceId(parameters('vnet-resourceGroup'),'Microsoft.Network/applicationSecurityGroups', concat(parameters('deployment-prefix'), '-', parameters('dc-asg-name'), '-asg'))]",
        "encryption-secrets": [
            {
                "sourceVault": {
                    "id": "[parameters('kv-id')]"
                },
                "vaultCertificates": [
                    {
                        "certificateUrl": "[parameters('aad-certificate-url')]",
                        "certificateStore": "My"
                    }
                ]
            }
        ],
        "empty-array": [],
        "tag-patching": "3rdSat7pm",
        "windows-password-policies-extension-name": "PwdPolicies",
        "windows-dependency-extension-name": "DependencyAgent",
        "windows-dependency-extension-publisher": "Microsoft.Azure.Monitoring.DependencyAgent",
        "windows-dependency-extension-type": "DependencyAgentWindows",
        "windows-dependency-extension-handler-version": "9.6",
        "max-password-age": 70,
        "min-password-age": 1,
        "min-password-length": 14,
        "pwd-history-count": 24,
        "pwd-min-length-config-name": "MinimumPasswordLength",
        "pwd-min-age-config-name": "MinimumPasswordAge",
        "pwd-not-last-24-config-name": "EnforcePasswordHistory",
        "pwd-without-reversible-encryption-config-name": "StorePasswordsUsingReversibleEncryption",
        "pwd-max-age-config-name": "MaximumPasswordAge",
        "pwd-complexity-config-name": "PasswordMustMeetComplexityRequirements",
        "web-server-with-tls-1.1-config-name": "AuditSecureProtocol"
    },
    "resources": [
        {
            "type": "Microsoft.Compute/availabilitySets",
            "apiVersion": "2016-04-30-preview",
            "location": "[resourceGroup().location]",
            "name": "[variables('availabilitySet-name')]",
            "tags": {
                "layer": "Identity"
            },
            "properties": {
                "platformFaultDomainCount": 2,
                "platformUpdateDomainCount": 5,
                "managed": true
            },
            "sku": {
                "name": "Aligned"
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2017-09-01",
            "location": "[resourceGroup().location]",
            "name": "[concat(variables('virtualMachine-name-prefix'), copyindex(1), '-nic')]",
            "tags": {
                "displayName": "[concat(variables('virtualMachine-name-prefix'), copyindex(1), ' Network Interface')]"
            },
            "copy": {
                "name": "nicLoop",
                "count": "[parameters('virtualMachine-count')]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[vdc.nextIP(parameters('adds-address-start'), copyIndex())]",
                            "subnet": {
                                "id": "[variables('subnet-id')]"
                            },
                            "applicationSecurityGroups": [
                                {
                                    "id": "[variables('dc-asg-id')]"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2017-03-30",
            "location": "[resourceGroup().location]",
            "name": "[concat(variables('virtualMachine-name-prefix'), copyindex(1))]",
            "tags": {
                "layer": "Identity",
                "computerName": "[concat(parameters('extension-name'), '-vm',copyindex(1))]",
                "UpdateManagement": "[variables('tag-patching')]"
            },
            "copy": {
                "name": "vmLoop",
                "count": "[parameters('virtualMachine-count')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySet-name'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('virtualMachine-name-prefix'), copyindex(1), '-nic'))]"
            ],
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySet-name'))]"
                },
                "osProfile": {
                    "computerName": "[concat(parameters('extension-name'), '-vm',copyindex(1))]",
                    "adminUsername": "[parameters('admin-username')]",
                    "adminPassword": "[parameters('admin-password')]",
                    "secrets": "[if(equals(parameters('enable-encryption'), bool('false')), variables('empty-array'), variables('encryption-secrets'))]"
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachine-size')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[parameters('os-image').publisher]",
                        "offer": "[parameters('os-image').offer]",
                        "sku": "[parameters('os-image').sku]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[replace(toLower(substring(concat(parameters('extension-name'), copyindex(1), '-osdisk', '-', replace(concat(variables('uniqueString'), variables('uniqueString')), '-', '')), 0, 30)), '-', '')]",
                        "osType": "[parameters('os-type')]",
                        "createOption": "FromImage"
                    },
                    "dataDisks": [
                        {
                            "lun": 0,
                            "name": "[replace(toLower(substring(concat(parameters('extension-name'), copyindex(1), '-dsk1', '-', replace(concat(variables('uniqueString'), variables('uniqueString')), '-', '')), 0, 30)), '-', '')]",
                            "diskSizeGB": 127,
                            "createOption": "Empty",
                            "caching": "None"
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('virtualMachine-name-prefix'), copyindex(1), '-nic'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat('https://', parameters('storageAccount-name'), '.blob.core.windows.net/')]"
                    }
                }
            },
            "resources": [
                {
                    "type": "extensions",
                    "name": "[variables('mma-extension-name')]",
                    "apiVersion": "2015-06-15",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', concat(variables('virtualMachine-name-prefix'), copyindex(1)))]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.EnterpriseCloud.Monitoring",
                        "type": "MicrosoftMonitoringAgent",
                        "typeHandlerVersion": "1.0",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "workspaceId": "[parameters('la-workspace-id')]"
                        },
                        "protectedSettings": {
                            "workspaceKey": "[parameters('la-primary-shared-key')]"
                        }
                    }
                },
                {
                    "type": "extensions",
                    "name": "[variables('custom-adds-extension-name')]",
                    "apiVersion": "2017-03-30",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', concat(variables('virtualMachine-name-prefix'), copyindex(1)))]",
                        "[variables('MMA-extension-name')]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Powershell",
                        "type": "DSC",
                        "typeHandlerVersion": "2.9",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "configuration": {
                                "url": "[concat('https://', parameters('output-params-storage-account-name'), '.blob.core.windows.net/scripts/windows/formatDisk.zip')]",
                                "script": "formatDisk.ps1",
                                "function": "FormatDisk"
                            },
                            "configurationArguments": {
                                "DriveLetter": "[parameters('dc-drive-letter')]",
                                "DiskId": 2
                            }
                        },
                        "protectedSettings": {
                            "configurationUrlSasToken": "[variables('configuration-url-sasToken')]"
                        }
                    }
                },
                {
                    "type": "extensions",
                    "name": "[variables('antimalware-extension-name')]",
                    "apiVersion": "2017-03-30",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', concat(variables('virtualMachine-name-prefix'), copyindex(1)))]",
                        "[resourceId('Microsoft.Compute/virtualMachines/extensions', concat(variables('virtualMachine-name-prefix'), copyindex(1)), variables('custom-adds-extension-name'))]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Azure.Security",
                        "type": "IaaSAntimalware",
                        "typeHandlerVersion": "1.5",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "AntimalwareEnabled": true,
                            "RealtimeProtectionEnabled": "true",
                            "ScheduledScanSettings": {
                                "isEnabled": "true",
                                "scanType": "Quick",
                                "day": "7",
                                "time": "120"
                            }
                        }
                    }
                },
                {
                    "type": "extensions",
                    "name": "[variables('diagnostics-extension-name')]",
                    "location": "[resourceGroup().location]",
                    "apiVersion": "2017-03-30",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', concat(variables('virtualMachine-name-prefix'), copyindex(1)))]",
                        "[resourceId('Microsoft.Compute/virtualMachines/extensions', concat(variables('virtualMachine-name-prefix'), copyindex(1)), variables('custom-adds-extension-name'))]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Azure.Diagnostics",
                        "type": "IaaSDiagnostics",
                        "typeHandlerVersion": "1.5",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "StorageAccount": "[parameters('storageAccount-name')]",
                            "StorageType": "Blob",
                            "WadCfg": {
                                "DiagnosticMonitorConfiguration": {
                                    "overallQuotaInMB": 5120,
                                    "Metrics": {
                                        "resourceId": "[resourceId('Microsoft.Compute/virtualMachines', concat(variables('virtualMachine-name-prefix'), copyindex(1)))]",
                                        "MetricAggregation": [
                                            {
                                                "scheduledTransferPeriod": "PT1H"
                                            },
                                            {
                                                "scheduledTransferPeriod": "PT1M"
                                            }
                                        ]
                                    },
                                    "DiagnosticInfrastructureLogs": {
                                        "scheduledTransferLogLevelFilter": "Error"
                                    },
                                    "PerformanceCounters": {
                                        "scheduledTransferPeriod": "PT1M",
                                        "PerformanceCounterConfiguration": [
                                            {
                                                "counterSpecifier": "\\Processor Information(_Total)\\% Processor Time",
                                                "unit": "Percent",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\Processor Information(_Total)\\% Privileged Time",
                                                "unit": "Percent",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\Processor Information(_Total)\\% User Time",
                                                "unit": "Percent",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\Processor Information(_Total)\\Processor Frequency",
                                                "unit": "Count",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\System\\Processes",
                                                "unit": "Count",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\Process(_Total)\\Thread Count",
                                                "unit": "Count",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\Process(_Total)\\Handle Count",
                                                "unit": "Count",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\System\\System Up Time",
                                                "unit": "Count",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\System\\Context Switches/sec",
                                                "unit": "CountPerSecond",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\System\\Processor Queue Length",
                                                "unit": "Count",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\Memory\\% Committed Bytes In Use",
                                                "unit": "Percent",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\Memory\\Available Bytes",
                                                "unit": "Bytes",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\Memory\\Committed Bytes",
                                                "unit": "Bytes",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\Memory\\Cache Bytes",
                                                "unit": "Bytes",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\Memory\\Pool Paged Bytes",
                                                "unit": "Bytes",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\Memory\\Pool Nonpaged Bytes",
                                                "unit": "Bytes",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\Memory\\Pages/sec",
                                                "unit": "CountPerSecond",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\Memory\\Page Faults/sec",
                                                "unit": "CountPerSecond",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\Process(_Total)\\Working Set",
                                                "unit": "Count",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\Process(_Total)\\Working Set - Private",
                                                "unit": "Count",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\LogicalDisk(_Total)\\% Disk Time",
                                                "unit": "Percent",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\LogicalDisk(_Total)\\% Disk Read Time",
                                                "unit": "Percent",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\LogicalDisk(_Total)\\% Disk Write Time",
                                                "unit": "Percent",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\LogicalDisk(_Total)\\% Idle Time",
                                                "unit": "Percent",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\LogicalDisk(_Total)\\Disk Bytes/sec",
                                                "unit": "BytesPerSecond",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\LogicalDisk(_Total)\\Disk Read Bytes/sec",
                                                "unit": "BytesPerSecond",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\LogicalDisk(_Total)\\Disk Write Bytes/sec",
                                                "unit": "BytesPerSecond",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\LogicalDisk(_Total)\\Disk Transfers/sec",
                                                "unit": "BytesPerSecond",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\LogicalDisk(_Total)\\Disk Reads/sec",
                                                "unit": "BytesPerSecond",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\LogicalDisk(_Total)\\Disk Writes/sec",
                                                "unit": "BytesPerSecond",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\LogicalDisk(_Total)\\Avg. Disk sec/Transfer",
                                                "unit": "Count",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\LogicalDisk(_Total)\\Avg. Disk sec/Read",
                                                "unit": "Count",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\LogicalDisk(_Total)\\Avg. Disk sec/Write",
                                                "unit": "Count",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\LogicalDisk(_Total)\\Avg. Disk Queue Length",
                                                "unit": "Count",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\LogicalDisk(_Total)\\Avg. Disk Read Queue Length",
                                                "unit": "Count",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\LogicalDisk(_Total)\\Avg. Disk Write Queue Length",
                                                "unit": "Count",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\LogicalDisk(_Total)\\% Free Space",
                                                "unit": "Percent",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\LogicalDisk(_Total)\\Free Megabytes",
                                                "unit": "Count",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\Network Interface(*)\\Bytes Total/sec",
                                                "unit": "BytesPerSecond",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\Network Interface(*)\\Bytes Sent/sec",
                                                "unit": "BytesPerSecond",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\Network Interface(*)\\Bytes Received/sec",
                                                "unit": "BytesPerSecond",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\Network Interface(*)\\Packets/sec",
                                                "unit": "BytesPerSecond",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\Network Interface(*)\\Packets Sent/sec",
                                                "unit": "BytesPerSecond",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\Network Interface(*)\\Packets Received/sec",
                                                "unit": "BytesPerSecond",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\Network Interface(*)\\Packets Outbound Errors",
                                                "unit": "Count",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\Network Interface(*)\\Packets Received Errors",
                                                "unit": "Count",
                                                "sampleRate": "PT60S"
                                            }
                                        ]
                                    },
                                    "WindowsEventLog": {
                                        "scheduledTransferPeriod": "PT1M",
                                        "DataSource": [
                                            {
                                                "name": "Application!*[System[(Level = 1 or Level = 2 or Level = 3)]]"
                                            },
                                            {
                                                "name": "Security!*[System[band(Keywords,4503599627370496)]]"
                                            },
                                            {
                                                "name": "System!*[System[(Level = 1 or Level = 2 or Level = 3)]]"
                                            }
                                        ]
                                    }
                                }
                            }
                        },
                        "protectedSettings": {
                            "storageAccountName": "[parameters('storageAccount-name')]",
                            "storageAccountSasToken": "[parameters('storageAccount-sasToken')]",
                            "storageAccountEndPoint": "https://core.windows.net"
                        }
                    }
                },
                {
                    "type": "extensions",
                    "name": "[variables('networkWatcher-extension-name')]",
                    "apiVersion": "2017-03-30",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', concat(variables('virtualMachine-name-prefix'), copyindex(1)))]",
                        "[resourceId('Microsoft.Compute/virtualMachines/extensions', concat(variables('virtualMachine-name-prefix'), copyindex(1)), variables('custom-adds-extension-name'))]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Azure.NetworkWatcher",
                        "type": "NetworkWatcherAgentWindows",
                        "typeHandlerVersion": "1.4",
                        "autoUpgradeMinorVersion": true
                    }
                },
                {
                    "type": "extensions",
                    "name": "[variables('windows-password-policies-extension-name')]",
                    "apiVersion": "2017-03-30",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', concat(variables('virtualMachine-name-prefix'), copyindex(1)))]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Compute",
                        "type": "CustomScriptExtension",
                        "typeHandlerVersion": "1.8",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "fileUris": [
                                "[concat('https://', parameters('output-params-storage-account-name'), '.blob.core.windows.net/scripts/windows/enable-local-policy-settings.ps1')]"
                            ]
                        },
                        "protectedSettings": {
                            "storageAccountName": "[parameters('output-params-storage-account-name')]",
                            "storageAccountKey": "[parameters('output-params-storage-key')]",
                            "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File ./windows/enable-local-policy-settings.ps1 -MaxPwdAge ', variables('max-password-age'), ' -MinPwdAge ', variables('min-password-age'), ' -MinPwdLength ', variables('min-password-length'), ' -PwdHistoryCount ', variables('pwd-history-count'))]"
                        }
                    }
                },
                {
                    "type": "extensions",
                    "name": "[variables('windows-dependency-extension-name')]",
                    "apiVersion": "2018-06-01",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', concat(variables('virtualMachine-name-prefix'), copyindex(1)))]",
                        "[variables('windows-password-policies-extension-name')]"
                    ],
                    "properties": {
                        "publisher": "[variables('windows-dependency-extension-publisher')]",
                        "type": "[variables('windows-dependency-extension-type')]",
                        "typeHandlerVersion": "[variables('windows-dependency-extension-handler-version')]",
                        "autoUpgradeMinorVersion": true
                    }
                },
                {
                    "apiVersion": "2018-06-30-preview",
                    "type": "Microsoft.Compute/virtualMachines/providers/guestConfigurationAssignments",
                    "name": "[concat(variables('virtualMachine-name-prefix'), copyindex(1), '/Microsoft.GuestConfiguration/', variables('pwd-min-length-config-name'))]",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', concat(variables('virtualMachine-name-prefix'), copyindex(1)))]",
                        "[variables('windows-dependency-extension-name')]"
                    ],
                    "properties": {
                        "guestConfiguration": {
                            "name": "[variables('pwd-min-length-config-name')]",
                            "version": "1.*"
                        }
                    }
                },
                {
                    "apiVersion": "2018-06-30-preview",
                    "type": "Microsoft.Compute/virtualMachines/providers/guestConfigurationAssignments",
                    "name": "[concat(variables('virtualMachine-name-prefix'), copyindex(1), '/Microsoft.GuestConfiguration/', variables('pwd-min-age-config-name'))]",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', concat(variables('virtualMachine-name-prefix'), copyindex(1)))]",
                        "[variables('windows-dependency-extension-name')]"
                    ],
                    "properties": {
                        "guestConfiguration": {
                            "name": "[variables('pwd-min-age-config-name')]",
                            "version": "1.*"
                        }
                    }
                },
                {
                    "apiVersion": "2018-06-30-preview",
                    "type": "Microsoft.Compute/virtualMachines/providers/guestConfigurationAssignments",
                    "name": "[concat(variables('virtualMachine-name-prefix'), copyindex(1), '/Microsoft.GuestConfiguration/', variables('pwd-not-last-24-config-name'))]",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', concat(variables('virtualMachine-name-prefix'), copyindex(1)))]",
                        "[variables('windows-dependency-extension-name')]"
                    ],
                    "properties": {
                        "guestConfiguration": {
                            "name": "[variables('pwd-not-last-24-config-name')]",
                            "version": "1.*"
                        }
                    }
                },
                {
                    "apiVersion": "2018-06-30-preview",
                    "type": "Microsoft.Compute/virtualMachines/providers/guestConfigurationAssignments",
                    "name": "[concat(variables('virtualMachine-name-prefix'), copyindex(1), '/Microsoft.GuestConfiguration/', variables('pwd-without-reversible-encryption-config-name'))]",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', concat(variables('virtualMachine-name-prefix'), copyindex(1)))]",
                        "[variables('windows-dependency-extension-name')]"
                    ],
                    "properties": {
                        "guestConfiguration": {
                            "name": "[variables('pwd-without-reversible-encryption-config-name')]",
                            "version": "1.*"
                        }
                    }
                },
                {
                    "apiVersion": "2018-06-30-preview",
                    "type": "Microsoft.Compute/virtualMachines/providers/guestConfigurationAssignments",
                    "name": "[concat(variables('virtualMachine-name-prefix'), copyindex(1), '/Microsoft.GuestConfiguration/', variables('web-server-with-tls-1.1-config-name'))]",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', concat(variables('virtualMachine-name-prefix'), copyindex(1)))]",
                        "[variables('windows-dependency-extension-name')]"
                    ],
                    "properties": {
                        "guestConfiguration": {
                            "name": "[variables('web-server-with-tls-1.1-config-name')]",
                            "version": "1.*"
                        }
                    }
                },
                {
                    "apiVersion": "2018-06-30-preview",
                    "type": "Microsoft.Compute/virtualMachines/providers/guestConfigurationAssignments",
                    "name": "[concat(variables('virtualMachine-name-prefix'), copyindex(1), '/Microsoft.GuestConfiguration/', variables('pwd-max-age-config-name'))]",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', concat(variables('virtualMachine-name-prefix'), copyindex(1)))]",
                        "[variables('windows-dependency-extension-name')]"
                    ],
                    "properties": {
                        "guestConfiguration": {
                            "name": "[variables('pwd-max-age-config-name')]",
                            "version": "1.*"
                        }
                    }
                },
                {
                    "apiVersion": "2018-06-30-preview",
                    "type": "Microsoft.Compute/virtualMachines/providers/guestConfigurationAssignments",
                    "name": "[concat(variables('virtualMachine-name-prefix'), copyindex(1), '/Microsoft.GuestConfiguration/', variables('pwd-complexity-config-name'))]",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', concat(variables('virtualMachine-name-prefix'), copyindex(1)))]",
                        "[variables('windows-dependency-extension-name')]"
                    ],
                    "properties": {
                        "guestConfiguration": {
                            "name": "[variables('pwd-complexity-config-name')]",
                            "version": "1.*"
                        }
                    }
                },
                {
                    "apiVersion": "2015-05-01-preview",
                    "name": "AzurePolicyforWindows",
                    "type": "extensions",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', concat(variables('virtualMachine-name-prefix'), copyindex(1)))]",
                        "[variables('windows-dependency-extension-name')]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.GuestConfiguration",
                        "type": "ConfigurationforWindows",
                        "typeHandlerVersion": "1.1",
                        "autoUpgradeMinorVersion": true,
                        "settings": {},
                        "protectedSettings": {}
                    }
                },
                {
                    "type": "extensions",
                    "name": "[variables('encryption-extension-name')]",
                    "apiVersion": "2017-03-30",
                    "location": "[resourceGroup().location]",
                    "condition": "[parameters('enable-encryption')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', concat(variables('virtualMachine-name-prefix'), copyindex(1)))]",
                        "[resourceId('Microsoft.Compute/virtualMachines/extensions', concat(variables('virtualMachine-name-prefix'), copyindex(1)), variables('custom-adds-extension-name'))]",
                        "[resourceId('Microsoft.Compute/virtualMachines/extensions', concat(variables('virtualMachine-name-prefix'), copyindex(1)), variables('antimalware-extension-name'))]",
                        "[resourceId('Microsoft.Compute/virtualMachines/extensions', concat(variables('virtualMachine-name-prefix'), copyindex(1)), variables('diagnostics-extension-name'))]",
                        "[resourceId('Microsoft.Compute/virtualMachines/extensions', concat(variables('virtualMachine-name-prefix'), copyindex(1)), variables('networkWatcher-extension-name'))]",
                        "[resourceId('Microsoft.Compute/virtualMachines/extensions', concat(variables('virtualMachine-name-prefix'), copyindex(1)), 'AzurePolicyforWindows')]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Azure.Security",
                        "type": "AzureDiskEncryption",
                        "typeHandlerVersion": "1.1",
                        "autoUpgradeMinorVersion": true,
                        "forceUpdateTag": "1.0",
                        "settings": {
                            "AADClientID": "[parameters('aad-principal-id')]",
                            "AADClientCertThumbprint": "[parameters('aad-certificate-thumb')]",
                            "KeyVaultURL": "[parameters('kv-uri')]",
                            "KeyEncryptionKeyURL": "[parameters('adds-key')]",
                            "KeyEncryptionAlgorithm": "[variables('key-encryptionAlgorithm')]",
                            "VolumeType": "All",
                            "EncryptionOperation": "[variables('encryption-operation')]"
                        }
                    }
                }
            ]
        },
        {
            "name": "[concat('vm', copyindex(1), 'OSEncryptionNestedDeployment')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2016-09-01",
            "condition": "[parameters('enable-encryption')]",
            "dependsOn": [
                "vmLoop"
            ],
            "copy": {
                "name": "vmUpdateLoop",
                "count": "[parameters('virtualMachine-count')]"
            },
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "resources": [
                        {
                            "apiVersion": "2017-03-30",
                            "type": "Microsoft.Compute/virtualMachines",
                            "name": "[concat(variables('virtualMachine-name-prefix'), copyindex(1))]",
                            "condition": "[parameters('enable-encryption')]",
                            "location": "[resourceGroup().location]",
                            "properties": {
                                "storageProfile": {
                                    "osDisk": {
                                        "encryptionSettings": {
                                            "enabled": true,
                                            "diskEncryptionKey": {
                                                "sourceVault": {
                                                    "id": "[parameters('kv-id')]"
                                                },
                                                "secretUrl": "[if(equals(parameters('enable-encryption'), bool('false')), json('null'), reference(resourceId('Microsoft.Compute/virtualMachines/extensions',  concat(variables('virtualMachine-name-prefix'), copyindex(1)), variables('encryption-extension-name')), '2018-10-01').instanceView.statuses[0].message)]"
                                            },
                                            "keyEncryptionKey": {
                                                "sourceVault": {
                                                    "id": "[parameters('kv-id')]"
                                                },
                                                "keyUrl": "[parameters('adds-key')]"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    ]
                },
                "parameters": {}
            }
        },
        {
            "name": "[concat('vm', copyindex(1), 'DSCInstallADDSNestedDeployment')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2016-09-01",
            "dependsOn": [
                "vmLoop"
            ],
            "copy": {
                "name": "vmInstallADDSLoop",
                "count": "[parameters('virtualMachine-count')]"
            },
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "resources": [
                        {
                            "apiVersion": "2017-03-30",
                            "type": "Microsoft.Compute/virtualMachines",
                            "name": "[concat(variables('virtualMachine-name-prefix'), copyindex(1))]",
                            "location": "[resourceGroup().location]",
                            "resources": [
                                {
                                    "type": "extensions",
                                    "name": "[variables('custom-adds-extension-name')]",
                                    "apiVersion": "2017-03-30",
                                    "location": "[resourceGroup().location]",
                                    "dependsOn": [
                                        "[resourceId('Microsoft.Compute/virtualMachines', concat(variables('virtualMachine-name-prefix'), copyindex(1)))]"
                                    ],
                                    "properties": {
                                        "publisher": "Microsoft.Powershell",
                                        "type": "DSC",
                                        "typeHandlerVersion": "2.9",
                                        "autoUpgradeMinorVersion": true,
                                        "settings": {
                                            "configuration": {
                                                "url": "[if(equals(parameters('enable-encryption'), bool('false')), concat('https://', parameters('output-params-storage-account-name'), '.blob.core.windows.net/scripts/windows/adds_with_format.zip'), concat('https://', parameters('output-params-storage-account-name'), '.blob.core.windows.net/scripts/windows/adds_wait_for_bitlocker.zip'))]",
                                                "script": "azure.ps1",
                                                "function": "CreateDomainController"
                                            },
                                            "configurationArguments": {
                                                "DomainName": "[parameters('domain-name')]",
                                                "PrimaryDcIpAddress": "[parameters('on-premises-primaryDC-IP')]",
                                                "SiteName": "[parameters('on-premises-AD-sitename')]",
                                                "DriveLetter": "[parameters('dc-drive-letter')]",
                                                "DiskId": 2
                                            }
                                        },
                                        "protectedSettings": {
                                            "configurationUrlSasToken": "[variables('configuration-url-sasToken')]",
                                            "configurationArguments": {
                                                "AdminCreds": {
                                                    "UserName": "[parameters('domain-admin-user')]",
                                                    "Password": "[parameters('domain-admin-password')]"
                                                },
                                                "SafeModeAdminCreds": {
                                                    "UserName": "[parameters('domain-admin-user')]",
                                                    "Password": "[parameters('domain-admin-password')]"
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    ]
                },
                "parameters": {}
            }
        },
        {
            "name": "UpdateDNSServerNestedDeployment",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[parameters('vnet-resourceGroup')]",
            "apiVersion": "2017-05-10",
            "dependsOn": [
                "vmInstallADDSLoop"
            ],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "resources": [
                        {
                            "apiVersion": "2018-02-01",
                            "type": "Microsoft.Network/virtualNetworks",
                            "name": "[parameters('vnet-name')]",
                            "location": "[resourceGroup().location]",
                            "properties": {
                                "addressSpace": "[reference(resourceId(parameters('vnet-resourceGroup'), 'Microsoft.Network/virtualNetworks', parameters('vnet-name')), '2018-02-01').addressSpace]",
                                "dhcpOptions": {
                                    "dnsServers": "[parameters('vnet-dns-servers')]"
                                },
                                "subnets": "[reference(resourceId(parameters('vnet-resourceGroup'), 'Microsoft.Network/virtualNetworks', parameters('vnet-name')), '2018-02-01').subnets]"
                            }
                        }
                    ]
                },
                "parameters": {}
            }
        }
    ],
    "functions": [
        {
            "namespace": "vdc",
            "members": {
                "nextIP": {
                    "parameters": [
                        {
                            "name": "ip",
                            "type": "string"
                        },
                        {
                            "name": "operand",
                            "type": "int"
                        }
                    ],
                    "output": {
                        "type": "string",
                        "value": "[concat(split(parameters('ip'), '.')[0], '.' ,split(parameters('ip'), '.')[1], '.' ,split(parameters('ip'), '.')[2], '.', add(int(split(parameters('ip'), '.')[3]), parameters('operand')))]"
                    }
                },
                "splitIP": {
                    "parameters": [
                        {
                            "name": "initialIP",
                            "type": "string"
                        }
                    ],
                    "output": {
                        "type": "array",
                        "value": "[split(parameters('initialIP'), '.')]"
                    }
                }
            }
        }
    ],
    "outputs": {}
}