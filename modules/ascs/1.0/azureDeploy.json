{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "deployment-prefix": {
      "type": "string",
      "metadata": {
           "description": ""
       }
    },
    "sas-key":{  
        "type":"string",
        "metadata":{  
            "description":""
        }
    },
    "output-params-storage-key":{  
        "type":"string",
        "metadata":{  
            "description":"Default storage account Key. Storage account that contains output parameters and common scripts"
        }
    },
    "output-params-storage-account-name":{  
        "type":"string",
        "metadata":{  
            "description":""
        }
    },
    "extension-name": {
        "type": "string",
        "metadata": {
            "description": "Name of the extension deployment."
        }
    },
    "vnet-id": {
        "type": "string",
        "metadata": {
            "description": "Name of the Shared services virtual network."
        }
    },
    "vnet-resourceGroup": {
      "type": "string",
      "metadata": {
          "description": "Resource group name of the Shared services virtual network."
      }
    },
    "default-subnet-name": {
        "type": "string",
        "defaultValue": "default",
        "metadata": {
            "description": "Name of the management subnet inside the workload virtual network."
        }
    },
    "business-asg-name": {
      "type": "string",
      "metadata": {
          "description": ""
      }
    },
    "stack-type": {
      "type": "string",
      "allowedValues": [
        "ABAP",
        "JAVA",
        "ABAP+JAVA"
      ],
      "defaultValue": "ABAP",
      "metadata": {
        "description": "The stack type of the SAP system."
      }
    },
    "os-type": {
      "type": "string",
      "allowedValues": [
        "Windows Server 2012 Datacenter",
        "Windows Server 2012 R2 Datacenter",
        "Windows Server 2016 Datacenter",
        "SLES 12",
        "SLES 12 BYOS",
        "RHEL 7",
        "Oracle Linux 7"
      ],
      "defaultValue": "Windows Server 2016 Datacenter",
      "metadata": {
        "description": "The type of the operating system you want to deploy."
      }
    },
    "sap-system-count": {
      "type": "int",
      "minValue": 1,
      "maxValue": 10,
      "defaultValue": 2,
      "metadata": {
        "description": "The number of SAP systems of this multi SID setup."
      }
    },
    "system-availability": {
      "type": "string",
      "allowedValues": [
        "HA",
        "Not HA"
      ],
      "defaultValue": "Not HA",
      "metadata": {
        "description": "Determines whether this is a high available deployment or not. A HA deployment contains multiple instances of single point of failures."
      }
    },
    "admin-username": {
      "type": "string",
      "metadata": {
          "description": "The username used to establish ADDS VMs"
      }
    },
    "admin-password": {
        "type": "securestring",
        "metadata": {
            "description": "The password given to the admin user"
        }
    },
    "authentication-type": {
      "type": "string",
      "defaultValue": "password",
      "allowedValues": [
        "password",
        "sshPublicKey"
      ],
      "metadata": {
        "description": "Type of authentication to use on the Virtual Machine."
      }
    },
    "sshKey": {
      "type": "securestring",
      "metadata": {
        "description": "Ssh key for the Virtual Machine."
      }
    },
    "ascs-instanceNumber": {
      "type": "int",
      "defaultValue": 10,
      "metadata": {
          "description": "The instance number of the ASCS."
      }
    }
  },
  "variables": {
    "images": {
      "Windows Server 2012 Datacenter": {
        "sku": "2012-Datacenter",
        "offer": "WindowsServer",
        "publisher": "MicrosoftWindowsServer",
        "version": "latest",
        "OSType": "Windows",
        "Plan": {},
        "UsePlan": false
      },
      "Windows Server 2012 R2 Datacenter": {
        "sku": "2012-R2-Datacenter",
        "offer": "WindowsServer",
        "publisher": "MicrosoftWindowsServer",
        "version": "latest",
        "OSType": "Windows",
        "Plan": {},
        "UsePlan": false
      },
      "Windows Server 2016 Datacenter": {
        "sku": "2016-Datacenter",
        "offer": "WindowsServer",
        "publisher": "MicrosoftWindowsServer",
        "version": "latest",
        "OSType": "Windows",
        "Plan": {},
        "UsePlan": false
      },
      "SLES 12": {
        "sku": "12-SP3",
        "offer": "SLES-SAP",
        "publisher": "SUSE",
        "version": "latest",
        "OSType": "Linux",
        "Plan": {},
        "UsePlan": false
      },
      "SLES 12 BYOS": {
        "sku": "12-SP3",
        "offer": "SLES-SAP-BYOS",
        "publisher": "SUSE",
        "version": "latest",
        "OSType": "Linux",
        "Plan": {},
        "UsePlan": false
      },
      "RHEL 7": {
        "sku": "7.4",
        "offer": "RHEL",
        "publisher": "RedHat",
        "version": "latest",
        "OSType": "Linux",
        "Plan": {},
        "UsePlan": false
      },
      "Oracle Linux 7": {
        "sku": "7.3",
        "offer": "Oracle-Linux",
        "publisher": "Oracle",
        "version": "latest",
        "OSType": "Linux",
        "Plan": {},
        "UsePlan": false
      }
    },
    "internal-os-type": "[variables('images')[parameters('os-type')].OSType]",
    "linux-configuration": {
      "disablePasswordAuthentication": false,
      "ssh": {
        "publicKeys": [
          {
            "path": "[concat('/home/', parameters('admin-username'), '/.ssh/authorized_keys')]",
            "keyData": "[parameters('sshKey')]"
          }
        ]
      }
    },
    "system-count-sizes": {
      "1": {
        "Size": "Small"
      },
      "2": {
        "Size": "Small"
      },
      "3": {
        "Size": "Small"
      },
      "4": {
        "Size": "Medium"
      },
      "5": {
        "Size": "Medium"
      },
      "6": {
        "Size": "Medium"
      },
      "7": {
        "Size": "Medium"
      },
      "8": {
        "Size": "Large"
      },
      "9": {
        "Size": "Large"
      },
      "10": {
        "Size": "Large"
      }
    },
    "vm-sizes": {
      "Small": {
        "Not HA": {
          "xscsserversize": "Standard_DS2_v2",
          "xscsservercount": 1
        },
        "HA": {
          "xscsserversize": "Standard_DS2_v2",
          "xscsservercount": 2
        }
      },
      "Medium": {
        "Not HA": {
          "xscsserversize": "Standard_DS3_v2",
          "xscsservercount": 1
        },
        "HA": {
          "xscsserversize": "Standard_DS3_v2",
          "xscsservercount": 2
        }
      },
      "Large": {
        "Not HA": {
          "xscsserversize": "Standard_DS4_v2",
          "xscsservercount": 1
        },
        "HA": {
          "xscsserversize": "Standard_DS4_v2",
          "xscsservercount": 2
        }
      }
    },
    "resource-prefix": "[concat(parameters('deployment-prefix'), '-', parameters('extension-name'))]",
    "xscsvmSize": "[variables('vm-sizes')[ variables('system-count-sizes')[string(parameters('sap-system-count'))].Size ] [parameters('system-availability')].xscsserversize]",
    "xscsvmCount": "[variables('vm-sizes')[ variables('system-count-sizes')[string(parameters('sap-system-count'))].Size ] [parameters('system-availability')].xscsservercount]",
    "availabilitySet-name": "[concat(parameters('deployment-prefix'), '-as')]",
    "configuration-url-sasToken": "[concat('?', parameters('sas-key'))]",
    "subnet-id": "[concat(parameters('vnet-id'), '/subnets/', parameters('default-subnet-name'))]", 
    "virtualMachine-name-prefix": "[concat(variables('resource-prefix'), '-vm')]",
    "ascs-lb-name": "[concat(variables('resource-prefix'), '-lb')]",
    "backendPool-XSCS": "[concat(variables('resource-prefix'), '-BackendPoolxSCS')]",
    "frontend-XSCS": "[concat(variables('resource-prefix'), '-FrontEndxSCS')]",
    "ascs-probe": "[concat(variables('resource-prefix'), '-Probe')]",
    "uniqueString": "[uniqueString(subscription().id, resourceGroup().id)]",
    "diagnostic-storageAccount-prefix": "[concat(parameters('extension-name'), 'diag')]",
    "diagnostic-storageAccount-name": "[toLower(substring(replace(concat(variables('diagnostic-storageAccount-prefix'), variables('uniqueString'), variables('uniqueString')), '-', ''), 0, 23) )]",
    "networkWatcher-extension-name": "NetworkWatcher",
    "idleTimeout-inMinutes-XSCS": 30,
    "lbProbePort-internal-XSCS": "[add(62000, parameters('ascs-instanceNumber'))]",
    "business-asg-id": "[resourceId(parameters('vnet-resourceGroup'), 'Microsoft.Network/applicationSecurityGroups', concat(parameters('deployment-prefix'), '-', parameters('business-asg-name'), '-asg'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('diagnostic-storageAccount-name')]",
      "apiVersion": "2017-10-01",
      "location": "[resourceGroup().location]",
      "sku": {
          "name": "Standard_LRS"
      },
      "kind": "Storage",
      "tags": {
          "displayName": "Management Diagnostic Storage Account"
      },
      "properties": {
          "encryption": {
              "keySource": "Microsoft.Storage",
              "services": {
                  "blob": {
                      "enabled": true
                  }
              }
          }
      }
    },
    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('availabilitySet-name')]",
      "apiVersion": "2017-03-30",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Aligned"
      },
      "properties": {
        "platformFaultDomainCount": 2,
        "platformUpdateDomainCount": 20
      }
    },
    {
      "type": "Microsoft.Network/loadBalancers",
      "name": "[variables('ascs-lb-name')]",
      "apiVersion": "2018-04-01",
      "location": "[resourceGroup().location]",
      "properties": {
          "frontendIPConfigurations": [
            {
              "properties": {
                  "subnet": {
                      "id": "[variables('subnet-id')]"
                  },
                  "privateIPAllocationMethod": "Dynamic"
              },
              "name": "[variables('frontend-XSCS')]"
            }
          ],
          "backendAddressPools": [
            {
                "name": "[variables('backendPool-XSCS')]"
            }
          ],
          "loadBalancingRules": [
              {
                "properties": {
                    "frontendIPConfiguration": {
                        "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIpConfigurations', variables('ascs-lb-name'), variables('frontend-XSCS'))]"
                    },
                    "backendAddressPool": {
                        "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('ascs-lb-name'), variables('backendPool-XSCS'))]"
                    },
                    "probe": {
                        "id": "[resourceId('Microsoft.Network/loadBalancers/probes', variables('ascs-lb-name'), variables('ascs-probe'))]"
                    },
                    "protocol": "Tcp",
                    "frontendPort": 445,
                    "backendPort": 445,
                    "enableFloatingIP": true,
                    "idleTimeoutInMinutes": "[variables('idleTimeout-inMinutes-XSCS')]"
                },
                "name": "tcp-445"
              },
              {
                  "properties": {
                      "frontendIPConfiguration": {
                          "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIpConfigurations', variables('ascs-lb-name'), variables('frontend-XSCS'))]"
                      },
                      "backendAddressPool": {
                          "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('ascs-lb-name'), variables('backendPool-XSCS'))]"
                      },
                      "probe": {
                          "id": "[resourceId('Microsoft.Network/loadBalancers/probes', variables('ascs-lb-name'), variables('ascs-probe'))]"
                      },
                      "protocol": "Tcp",
                      "frontendPort": 5985,
                      "backendPort": 5985,
                      "enableFloatingIP": true,
                      "idleTimeoutInMinutes": "[variables('idleTimeout-inMinutes-XSCS')]"
                  },
                  "name": "tcp-5985"
              },
              {
                "properties": {
                    "frontendIPConfiguration": {
                        "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIpConfigurations', variables('ascs-lb-name'), variables('frontend-XSCS'))]"
                    },
                    "backendAddressPool": {
                        "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('ascs-lb-name'), variables('backendPool-XSCS'))]"
                    },
                    "probe": {
                        "id": "[resourceId('Microsoft.Network/loadBalancers/probes', variables('ascs-lb-name'), variables('ascs-probe'))]"
                    },
                    "protocol": "Tcp",
                    "frontendPort": "[add(3200, parameters('ascs-instanceNumber'))]",
                    "backendPort": "[add(3200, parameters('ascs-instanceNumber'))]",
                    "enableFloatingIP": true,
                    "idleTimeoutInMinutes": "[variables('idleTimeout-inMinutes-XSCS')]"
                },
                "name": "tcp-3200"
              },
              {
                "properties": {
                    "frontendIPConfiguration": {
                        "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIpConfigurations', variables('ascs-lb-name'), variables('frontend-XSCS'))]"
                    },
                    "backendAddressPool": {
                        "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('ascs-lb-name'), variables('backendPool-XSCS'))]"
                    },
                    "probe": {
                        "id": "[resourceId('Microsoft.Network/loadBalancers/probes', variables('ascs-lb-name'), variables('ascs-probe'))]"
                    },
                    "protocol": "Tcp",
                    "frontendPort": "[add(3600, parameters('ascs-instanceNumber'))]",
                    "backendPort": "[add(3600, parameters('ascs-instanceNumber'))]",
                    "enableFloatingIP": true,
                    "idleTimeoutInMinutes": "[variables('idleTimeout-inMinutes-XSCS')]"
                },
                "name": "tcp-3600"
              },
              {
                "properties": {
                    "frontendIPConfiguration": {
                        "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIpConfigurations', variables('ascs-lb-name'), variables('frontend-XSCS'))]"
                    },
                    "backendAddressPool": {
                        "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('ascs-lb-name'), variables('backendPool-XSCS'))]"
                    },
                    "probe": {
                        "id": "[resourceId('Microsoft.Network/loadBalancers/probes', variables('ascs-lb-name'), variables('ascs-probe'))]"
                    },
                    "protocol": "Tcp",
                    "frontendPort": "[add(3900, parameters('ascs-instanceNumber'))]",
                    "backendPort": "[add(3900, parameters('ascs-instanceNumber'))]",
                    "enableFloatingIP": true,
                    "idleTimeoutInMinutes": "[variables('idleTimeout-inMinutes-XSCS')]"
                },
                "name": "tcp-3900"
              },
              {
                "properties": {
                    "frontendIPConfiguration": {
                        "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIpConfigurations', variables('ascs-lb-name'), variables('frontend-XSCS'))]"
                    },
                    "backendAddressPool": {
                        "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('ascs-lb-name'), variables('backendPool-XSCS'))]"
                    },
                    "probe": {
                        "id": "[resourceId('Microsoft.Network/loadBalancers/probes', variables('ascs-lb-name'), variables('ascs-probe'))]"
                    },
                    "protocol": "Tcp",
                    "frontendPort": "[add(8100, parameters('ascs-instanceNumber'))]",
                    "backendPort": "[add(8100, parameters('ascs-instanceNumber'))]",
                    "enableFloatingIP": true,
                    "idleTimeoutInMinutes": "[variables('idleTimeout-inMinutes-XSCS')]"
                },
                "name": "tcp-8100"
              },
              {
                "properties": {
                    "frontendIPConfiguration": {
                        "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIpConfigurations', variables('ascs-lb-name'), variables('frontend-XSCS'))]"
                    },
                    "backendAddressPool": {
                        "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('ascs-lb-name'), variables('backendPool-XSCS'))]"
                    },
                    "probe": {
                        "id": "[resourceId('Microsoft.Network/loadBalancers/probes', variables('ascs-lb-name'), variables('ascs-probe'))]"
                    },
                    "protocol": "Tcp",
                    "frontendPort": "[add(50013, mul(parameters('ascs-instanceNumber'), 100))]",
                    "backendPort": "[add(50013, mul(parameters('ascs-instanceNumber'), 100))]",
                    "enableFloatingIP": true,
                    "idleTimeoutInMinutes": "[variables('idleTimeout-inMinutes-XSCS')]"
                },
                "name": "tcp-50013"
              },
              {
                "properties": {
                    "frontendIPConfiguration": {
                        "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIpConfigurations', variables('ascs-lb-name'), variables('frontend-XSCS'))]"
                    },
                    "backendAddressPool": {
                        "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('ascs-lb-name'), variables('backendPool-XSCS'))]"
                    },
                    "probe": {
                        "id": "[resourceId('Microsoft.Network/loadBalancers/probes', variables('ascs-lb-name'), variables('ascs-probe'))]"
                    },
                    "protocol": "Tcp",
                    "frontendPort": "[add(50014, mul(parameters('ascs-instanceNumber'), 100))]",
                    "backendPort": "[add(50014, mul(parameters('ascs-instanceNumber'), 100))]",
                    "enableFloatingIP": true,
                    "idleTimeoutInMinutes": "[variables('idleTimeout-inMinutes-XSCS')]"
                },
                "name": "tcp-50014"
              },
              {
                "properties": {
                    "frontendIPConfiguration": {
                        "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIpConfigurations', variables('ascs-lb-name'), variables('frontend-XSCS'))]"
                    },
                    "backendAddressPool": {
                        "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('ascs-lb-name'), variables('backendPool-XSCS'))]"
                    },
                    "probe": {
                        "id": "[resourceId('Microsoft.Network/loadBalancers/probes', variables('ascs-lb-name'), variables('ascs-probe'))]"
                    },
                    "protocol": "Tcp",
                    "frontendPort": "[add(50016, mul(parameters('ascs-instanceNumber'), 100))]",
                    "backendPort": "[add(50016, mul(parameters('ascs-instanceNumber'), 100))]",
                    "enableFloatingIP": true,
                    "idleTimeoutInMinutes": "[variables('idleTimeout-inMinutes-XSCS')]"
                },
                "name": "tcp-50016"
              }
            ],
            "probes": [
              {
                "properties": {
                    "protocol": "Tcp",
                    "port": "[variables('lbProbePort-internal-XSCS')]",
                    "intervalInSeconds": 5,
                    "numberOfProbes": 2
                },
                "name": "[variables('ascs-probe')]"
              }
            ]
        }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(variables('virtualMachine-name-prefix'), copyindex(1), '-nic-pip')]",
      "apiVersion": "2018-04-01",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "pipLoop",
        "count": "[variables('xscsvmCount')]"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('virtualMachine-name-prefix'), copyindex(1), '-nic')]",
      "apiVersion": "2017-09-01",
      "copy": {
        "name": "nicXSCSLoop",
        "count": "[variables('xscsvmCount')]"
      },
      "dependsOn": [
        "pipLoop",
        "[concat('Microsoft.Network/loadBalancers/', variables('ascs-lb-name'))]"
      ],
      "location": "[resourceGroup().location]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress":{
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('virtualMachine-name-prefix'), copyindex(1), '-nic-pip'))]"
              },
              "subnet": {
                "id": "[variables('subnet-id')]"
              },
              "applicationSecurityGroups": [
                  {
                      "id": "[variables('business-asg-id')]"
                  }
              ],
              "loadBalancerBackendAddressPools": [
                {
                    "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('ascs-lb-name')), '/backendAddressPools/', variables('backendPool-XSCS'))]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('virtualMachine-name-prefix'), copyindex(1))]",
      "copy": {
        "name": "xscsVMLoop",
        "count": "[variables('xscsvmCount')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySet-name'))]",
        "nicXSCSLoop",
        "[resourceId('Microsoft.Storage/storageAccounts',variables('diagnostic-storageAccount-name'))]"
      ],
      "apiVersion": "2017-12-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySet-name'))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('xscsvmSize')]"
        },
        "osProfile": {
          "computerName": "[concat(parameters('extension-name'), '-vm',copyindex(1))]",
          "adminUsername": "[parameters('admin-username')]",
          "adminPassword": "[parameters('admin-password')]",
          "linuxConfiguration": "[if(equals(parameters('authentication-type'), 'password'), json('null'), variables('linux-configuration'))]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('images')[parameters('os-type')].publisher]",
            "offer": "[variables('images')[parameters('os-type')].offer]",
            "sku": "[variables('images')[parameters('os-type')].sku]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[replace(toLower(substring(concat(variables('virtualMachine-name-prefix'), copyindex(1), '-osdisk', '-', replace(concat(variables('uniqueString'), variables('uniqueString')), '-', '')), 0, 40)), '-', '')]",
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "Premium_LRS"
            }
          },
          "copy": [
            {
              "name": "dataDisks",
              "count": "[parameters('sap-system-count')]",
              "input": {
                "lun": "[copyIndex('dataDisks')]",
                "createOption": "Empty",
                "diskSizeGB": 128
              }
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
              {
                  "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('virtualMachine-name-prefix'), copyindex(1), '-nic'))]"
              }
          ]
        },
        "diagnosticsProfile": {
            "bootDiagnostics": {
                "enabled": true,
                "storageUri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('diagnostic-storageAccount-name')), '2016-12-01').primaryEndpoints.blob)]"
          }
        }
      },
      "resources": [
          {
              "type": "extensions",
              "condition": "[bool('false')]",
              "name": "[variables('networkWatcher-extension-name')]",
              "apiVersion": "2017-03-30",
              "location": "[resourceGroup().location]",
              "dependsOn": [
                  "[resourceId('Microsoft.Compute/virtualMachines', concat(variables('virtualMachine-name-prefix'), copyIndex(1)))]"
              ],
              "properties": {
                  "publisher": "Microsoft.Azure.NetworkWatcher",
                  "type": "NetworkWatcherAgentLinux",
                  "typeHandlerVersion": "1.4",
                  "autoUpgradeMinorVersion": true
              }
          }
      ]
    }
  ]
}