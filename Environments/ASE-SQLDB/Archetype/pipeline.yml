variables:
- group: VDC_SECRETS
trigger:
- master
stages:
- stage: Validate
  jobs:
  - job: SetupValidationResourceGroup
    pool: 
      name: 'vdc-self-hosted'
    steps:
    - task: AzurePowerShell@4
      displayName: "Setup Validation Resource Group"
      inputs:
        azureSubscription: 'vdc2-spoke1'
        ScriptType: 'FilePath'
        ScriptPath: 'Orchestration/OrchestrationService/ValidationResourceGroupSetup.ps1'
        ScriptArguments: '-ResourceGroupName vdc-validation-rg -SetupResourceGroup'
        azurePowerShellVersion: 'LatestVersion'
  - job: KeyVault
    pool:
      name: 'vdc-self-hosted'
    dependsOn: SetupValidationResourceGroup
    steps:
    - task: PowerShell@2
      displayName: "Pester Tests for Module - Key Vault"
      inputs:
        targetType: 'inline'
        script: '# Write your powershell commands here.
          
          Invoke-Pester -Script "./Modules/KeyVault/2.0/Tests";
          
          # Use the environment variables input below to pass secret variables to this script.'
        pwsh: true
    - task: AzurePowerShell@4
      displayName: "ARM Validation - Key Vault"
      inputs:
        azureSubscription: 'vdc2-spoke1'
        ScriptType: 'FilePath'
        ScriptPath: 'Orchestration/OrchestrationService/ModuleConfigurationDeployment.ps1'
        ScriptArguments: '-DefinitionPath "Environments/ASE-SQLDB/Archetype/definition.json" -ModuleConfigurationName "KeyVault" -Validate'
        azurePowerShellVersion: 'LatestVersion'
      env:
        ADMIN_USER_PWD: $(ADMIN_USER_PWD)
        ADMIN_USER_SSH: $(ADMIN_USER_SSH)
        DEVOPS_SERVICE_PRINCIPAL_USER_ID: $(DEVOPS_SERVICE_PRINCIPAL_USER_ID)
        KEYVAULT_MANAGEMENT_USER_ID: $(KEYVAULT_MANAGEMENT_USER_ID)
        DOMAIN_ADMIN_USER_PWD: $(DOMAIN_ADMIN_USER_PWD)
        DOMAIN_ADMIN_USERNAME: $(DOMAIN_ADMIN_USERNAME)
        TENANT_ID: $(TENANT_ID)
        ORGANIZATION_NAME: $(ORGANIZATION_NAME)
        VDC_SUBSCRIPTIONS: $(VDC_SUBSCRIPTIONS)
        VDC_TOOLKIT_SUBSCRIPTION: $(VDC_TOOLKIT_SUBSCRIPTION)
    - task: PowerShell@2
      displayName: "Sets multi-job variable"
      name: "bootstrapInitializedOutput"
      inputs:
        targetType: 'inline'
        script: '
        
          $bootstrapInitialized = $ENV:BOOTSTRAP_INITIALIZED;
          Write-Host "##vso[task.setvariable variable=BOOTSTRAP_INITIALIZED;isOutput=true]$bootstrapInitialized";'
        pwsh: true
  - job: AppServiceEnvironments
    pool:
      name: 'vdc-self-hosted'
    dependsOn: [ SetupValidationResourceGroup, KeyVault ]
    variables: 
      BOOTSTRAP_INITIALIZED: $[dependencies.KeyVault.outputs['bootstrapInitializedOutput.BOOTSTRAP_INITIALIZED']]
    steps:
    - task: PowerShell@2
      displayName: "Pester Tests for Module - App Service Environments"
      inputs:
        targetType: 'inline'
        script: '# Write your powershell commands here.
          
          Invoke-Pester -Script "./Modules/AppServiceEnvironments/2.0/Tests";
          
          # Use the environment variables input below to pass secret variables to this script.'
        pwsh: true
    - task: AzurePowerShell@4
      displayName: "ARM Validation - App Service Environments"
      inputs:
        azureSubscription: 'vdc2-spoke1'
        ScriptType: 'FilePath'
        ScriptPath: 'Orchestration/OrchestrationService/ModuleConfigurationDeployment.ps1'
        ScriptArguments: '-DefinitionPath "Environments/ASE-SQLDB/Archetype/definition.json" -ModuleConfigurationName "AppServiceEnvironments" -Validate'
        azurePowerShellVersion: 'LatestVersion'
      env:
        ADMIN_USER_PWD: $(ADMIN_USER_PWD)
        ADMIN_USER_SSH: $(ADMIN_USER_SSH)
        DEVOPS_SERVICE_PRINCIPAL_USER_ID: $(DEVOPS_SERVICE_PRINCIPAL_USER_ID)
        KEYVAULT_MANAGEMENT_USER_ID: $(KEYVAULT_MANAGEMENT_USER_ID)
        DOMAIN_ADMIN_USER_PWD: $(DOMAIN_ADMIN_USER_PWD)
        DOMAIN_ADMIN_USERNAME: $(DOMAIN_ADMIN_USERNAME)
        TENANT_ID: $(TENANT_ID)
        ORGANIZATION_NAME: $(ORGANIZATION_NAME)
        VDC_SUBSCRIPTIONS: $(VDC_SUBSCRIPTIONS)
        VDC_TOOLKIT_SUBSCRIPTION: $(VDC_TOOLKIT_SUBSCRIPTION)
  - job: AppServicePlan
    pool:
      name: 'vdc-self-hosted'
    dependsOn: [ SetupValidationResourceGroup, KeyVault ]
    variables: 
      BOOTSTRAP_INITIALIZED: $[dependencies.KeyVault.outputs['bootstrapInitializedOutput.BOOTSTRAP_INITIALIZED']]
    steps:
    - task: PowerShell@2
      displayName: "Pester Tests for Module - App Service Plan"
      inputs:
        targetType: 'inline'
        script: '# Write your powershell commands here.
          
          Invoke-Pester -Script "./Modules/AppServicePlan/2.0/Tests";
          
          # Use the environment variables input below to pass secret variables to this script.'
        pwsh: true
    - task: AzurePowerShell@4
      displayName: "ARM Validation - App Service Plan"
      inputs:
        azureSubscription: 'vdc2-spoke1'
        ScriptType: 'FilePath'
        ScriptPath: 'Orchestration/OrchestrationService/ModuleConfigurationDeployment.ps1'
        ScriptArguments: '-DefinitionPath "Environments/ASE-SQLDB/Archetype/definition.json" -ModuleConfigurationName "AppServicePlan" -Validate'
        azurePowerShellVersion: 'LatestVersion'
      env:
        ADMIN_USER_PWD: $(ADMIN_USER_PWD)
        ADMIN_USER_SSH: $(ADMIN_USER_SSH)
        DEVOPS_SERVICE_PRINCIPAL_USER_ID: $(DEVOPS_SERVICE_PRINCIPAL_USER_ID)
        KEYVAULT_MANAGEMENT_USER_ID: $(KEYVAULT_MANAGEMENT_USER_ID)
        DOMAIN_ADMIN_USER_PWD: $(DOMAIN_ADMIN_USER_PWD)
        DOMAIN_ADMIN_USERNAME: $(DOMAIN_ADMIN_USERNAME)
        TENANT_ID: $(TENANT_ID)
        ORGANIZATION_NAME: $(ORGANIZATION_NAME)
        VDC_SUBSCRIPTIONS: $(VDC_SUBSCRIPTIONS)
        VDC_TOOLKIT_SUBSCRIPTION: $(VDC_TOOLKIT_SUBSCRIPTION)
  - job: AppServiceWebApp
    pool:
      name: 'vdc-self-hosted'
    dependsOn: [ SetupValidationResourceGroup, KeyVault ]
    variables: 
      BOOTSTRAP_INITIALIZED: $[dependencies.KeyVault.outputs['bootstrapInitializedOutput.BOOTSTRAP_INITIALIZED']]
    steps:
    - task: PowerShell@2
      displayName: "Pester Tests for Module - App Service WebApp"
      inputs:
        targetType: 'inline'
        script: '# Write your powershell commands here.
          
          Invoke-Pester -Script "./Modules/AppServiceWebApp/2.0/Tests";
          
          # Use the environment variables input below to pass secret variables to this script.'
        pwsh: true
    - task: AzurePowerShell@4
      displayName: "ARM Validation - App Service WebApp"
      inputs:
        azureSubscription: 'vdc2-spoke1'
        ScriptType: 'FilePath'
        ScriptPath: 'Orchestration/OrchestrationService/ModuleConfigurationDeployment.ps1'
        ScriptArguments: '-DefinitionPath "Environments/ASE-SQLDB/Archetype/definition.json" -ModuleConfigurationName "AppServiceWebApp" -Validate'
        azurePowerShellVersion: 'LatestVersion'
      env:
        ADMIN_USER_PWD: $(ADMIN_USER_PWD)
        ADMIN_USER_SSH: $(ADMIN_USER_SSH)
        DEVOPS_SERVICE_PRINCIPAL_USER_ID: $(DEVOPS_SERVICE_PRINCIPAL_USER_ID)
        KEYVAULT_MANAGEMENT_USER_ID: $(KEYVAULT_MANAGEMENT_USER_ID)
        DOMAIN_ADMIN_USER_PWD: $(DOMAIN_ADMIN_USER_PWD)
        DOMAIN_ADMIN_USERNAME: $(DOMAIN_ADMIN_USERNAME)
        TENANT_ID: $(TENANT_ID)
        ORGANIZATION_NAME: $(ORGANIZATION_NAME)
        VDC_SUBSCRIPTIONS: $(VDC_SUBSCRIPTIONS)
        VDC_TOOLKIT_SUBSCRIPTION: $(VDC_TOOLKIT_SUBSCRIPTION)
  - job: SQLDBServer
    pool:
      name: 'vdc-self-hosted'
    dependsOn: [ SetupValidationResourceGroup, KeyVault ]
    variables: 
      BOOTSTRAP_INITIALIZED: $[dependencies.KeyVault.outputs['bootstrapInitializedOutput.BOOTSTRAP_INITIALIZED']]
    steps:
    - task: PowerShell@2
      displayName: "Pester Tests for Module - SQLDB Server"
      inputs:
        targetType: 'inline'
        script: '# Write your powershell commands here.
          
          Invoke-Pester -Script "./Modules/SQLDBServer/2.0/Tests";
          
          # Use the environment variables input below to pass secret variables to this script.'
        pwsh: true
    - task: AzurePowerShell@4
      displayName: "ARM Validation - SQLDB Server"
      inputs:
        azureSubscription: 'vdc2-spoke1'
        ScriptType: 'FilePath'
        ScriptPath: 'Orchestration/OrchestrationService/ModuleConfigurationDeployment.ps1'
        ScriptArguments: '-DefinitionPath "Environments/ASE-SQLDB/Archetype/definition.json" -ModuleConfigurationName "SQLDBServer" -Validate'
        azurePowerShellVersion: 'LatestVersion'
      env:
        ADMIN_USER_PWD: $(ADMIN_USER_PWD)
        ADMIN_USER_SSH: $(ADMIN_USER_SSH)
        DEVOPS_SERVICE_PRINCIPAL_USER_ID: $(DEVOPS_SERVICE_PRINCIPAL_USER_ID)
        KEYVAULT_MANAGEMENT_USER_ID: $(KEYVAULT_MANAGEMENT_USER_ID)
        DOMAIN_ADMIN_USER_PWD: $(DOMAIN_ADMIN_USER_PWD)
        DOMAIN_ADMIN_USERNAME: $(DOMAIN_ADMIN_USERNAME)
        TENANT_ID: $(TENANT_ID)
        ORGANIZATION_NAME: $(ORGANIZATION_NAME)
        VDC_SUBSCRIPTIONS: $(VDC_SUBSCRIPTIONS)
        VDC_TOOLKIT_SUBSCRIPTION: $(VDC_TOOLKIT_SUBSCRIPTION)
  - job: SQLDatabase
    pool:
      name: 'vdc-self-hosted'
    dependsOn: [ SetupValidationResourceGroup, KeyVault ]
    variables: 
      BOOTSTRAP_INITIALIZED: $[dependencies.KeyVault.outputs['bootstrapInitializedOutput.BOOTSTRAP_INITIALIZED']]
    steps:
    - task: PowerShell@2
      displayName: "Pester Tests for Module - SQL Database"
      inputs:
        targetType: 'inline'
        script: '# Write your powershell commands here.
          
          Invoke-Pester -Script "./Modules/SQLDatabase/2.0/Tests";
          
          # Use the environment variables input below to pass secret variables to this script.'
        pwsh: true
    - task: AzurePowerShell@4
      displayName: "ARM Validation - SQL Database"
      inputs:
        azureSubscription: 'vdc2-spoke1'
        ScriptType: 'FilePath'
        ScriptPath: 'Orchestration/OrchestrationService/ModuleConfigurationDeployment.ps1'
        ScriptArguments: '-DefinitionPath "Environments/ASE-SQLDB/Archetype/definition.json" -ModuleConfigurationName "SQLDatabase" -Validate'
        azurePowerShellVersion: 'LatestVersion'
      env:
        ADMIN_USER_PWD: $(ADMIN_USER_PWD)
        ADMIN_USER_SSH: $(ADMIN_USER_SSH)
        DEVOPS_SERVICE_PRINCIPAL_USER_ID: $(DEVOPS_SERVICE_PRINCIPAL_USER_ID)
        KEYVAULT_MANAGEMENT_USER_ID: $(KEYVAULT_MANAGEMENT_USER_ID)
        DOMAIN_ADMIN_USER_PWD: $(DOMAIN_ADMIN_USER_PWD)
        DOMAIN_ADMIN_USERNAME: $(DOMAIN_ADMIN_USERNAME)
        TENANT_ID: $(TENANT_ID)
        ORGANIZATION_NAME: $(ORGANIZATION_NAME)
        VDC_SUBSCRIPTIONS: $(VDC_SUBSCRIPTIONS)
        VDC_TOOLKIT_SUBSCRIPTION: $(VDC_TOOLKIT_SUBSCRIPTION)
  - job: TearDownValidationResourceGroup
    pool: 
      name: 'vdc-self-hosted'
    dependsOn: [ KeyVault, AppServiceEnvironments, AppServicePlan, AppServiceWebApp, SQLDBServer, SQLDatabase ]
    steps:
    - task: AzurePowerShell@4
      displayName: "Teardown Validation Resource Group"
      inputs:
        azureSubscription: 'vdc2-spoke1'
        ScriptType: 'FilePath'
        ScriptPath: 'Orchestration/OrchestrationService/ValidationResourceGroupSetup.ps1'
        ScriptArguments: '-TearDownResourceGroup'
        azurePowerShellVersion: 'LatestVersion'
- stage: DeployEnvironment
  jobs:
  - job: KeyVault
    pool:
      name: 'vdc-self-hosted'
    steps:
    - task: AzurePowerShell@4
      displayName: "Key Vault" 
      inputs:
        azureSubscription: 'vdc2-spoke1'
        ScriptType: 'FilePath'
        ScriptPath: 'Orchestration/OrchestrationService/ModuleConfigurationDeployment.ps1'
        ScriptArguments: '-DefinitionPath "Environments/ASE-SQLDB/Archetype/definition.json" -ModuleConfigurationName "KeyVault"'
        azurePowerShellVersion: 'LatestVersion'
      env:
        ADMIN_USER_PWD: $(ADMIN_USER_PWD)
        ADMIN_USER_SSH: $(ADMIN_USER_SSH)
        DEVOPS_SERVICE_PRINCIPAL_USER_ID: $(DEVOPS_SERVICE_PRINCIPAL_USER_ID)
        KEYVAULT_MANAGEMENT_USER_ID: $(KEYVAULT_MANAGEMENT_USER_ID)
        DOMAIN_ADMIN_USER_PWD: $(DOMAIN_ADMIN_USER_PWD)
        DOMAIN_ADMIN_USERNAME: $(DOMAIN_ADMIN_USERNAME)
        TENANT_ID: $(TENANT_ID)
        ORGANIZATION_NAME: $(ORGANIZATION_NAME)
        VDC_SUBSCRIPTIONS: $(VDC_SUBSCRIPTIONS)
        VDC_TOOLKIT_SUBSCRIPTION: $(VDC_TOOLKIT_SUBSCRIPTION)
    - task: PowerShell@2
      displayName: "Sets multi-job variable"
      name: "bootstrapInitializedOutput"
      inputs:
        targetType: 'inline'
        script: '
        
          $bootstrapInitialized = $ENV:BOOTSTRAP_INITIALIZED;
          Write-Host "##vso[task.setvariable variable=BOOTSTRAP_INITIALIZED;isOutput=true]$bootstrapInitialized";'
        pwsh: true
  - job: AppServiceEnvironments
    timeoutInMinutes: 0
    pool:
      name: 'vdc-self-hosted'
    dependsOn: KeyVault
    variables: 
      BOOTSTRAP_INITIALIZED: $[dependencies.KeyVault.outputs['bootstrapInitializedOutput.BOOTSTRAP_INITIALIZED']]
    steps:
    - task: AzurePowerShell@4
      displayName: "App Service Environments" 
      inputs:
        azureSubscription: 'vdc2-spoke1'
        ScriptType: 'FilePath'
        ScriptPath: 'Orchestration/OrchestrationService/ModuleConfigurationDeployment.ps1'
        ScriptArguments: '-DefinitionPath "Environments/ASE-SQLDB/Archetype/definition.json" -ModuleConfigurationName "AppServiceEnvironments"'
        azurePowerShellVersion: 'LatestVersion'
      env:
        ADMIN_USER_PWD: $(ADMIN_USER_PWD)
        ADMIN_USER_SSH: $(ADMIN_USER_SSH)
        DEVOPS_SERVICE_PRINCIPAL_USER_ID: $(DEVOPS_SERVICE_PRINCIPAL_USER_ID)
        KEYVAULT_MANAGEMENT_USER_ID: $(KEYVAULT_MANAGEMENT_USER_ID)
        DOMAIN_ADMIN_USER_PWD: $(DOMAIN_ADMIN_USER_PWD)
        DOMAIN_ADMIN_USERNAME: $(DOMAIN_ADMIN_USERNAME)
        TENANT_ID: $(TENANT_ID)
        ORGANIZATION_NAME: $(ORGANIZATION_NAME)
        VDC_SUBSCRIPTIONS: $(VDC_SUBSCRIPTIONS)
        VDC_TOOLKIT_SUBSCRIPTION: $(VDC_TOOLKIT_SUBSCRIPTION)
  - job: AppServicePlan
    timeoutInMinutes: 0
    pool:
      name: 'vdc-self-hosted'
    dependsOn: [ AppServiceEnvironments, KeyVault ]
    variables: 
      BOOTSTRAP_INITIALIZED: $[dependencies.KeyVault.outputs['bootstrapInitializedOutput.BOOTSTRAP_INITIALIZED']]
    steps:
    - task: AzurePowerShell@4
      displayName: "App Service Plan" 
      inputs:
        azureSubscription: 'vdc2-spoke1'
        ScriptType: 'FilePath'
        ScriptPath: 'Orchestration/OrchestrationService/ModuleConfigurationDeployment.ps1'
        ScriptArguments: '-DefinitionPath "Environments/ASE-SQLDB/Archetype/definition.json" -ModuleConfigurationName "AppServicePlan"'
        azurePowerShellVersion: 'LatestVersion'
      env:
        ADMIN_USER_PWD: $(ADMIN_USER_PWD)
        ADMIN_USER_SSH: $(ADMIN_USER_SSH)
        DEVOPS_SERVICE_PRINCIPAL_USER_ID: $(DEVOPS_SERVICE_PRINCIPAL_USER_ID)
        KEYVAULT_MANAGEMENT_USER_ID: $(KEYVAULT_MANAGEMENT_USER_ID)
        DOMAIN_ADMIN_USER_PWD: $(DOMAIN_ADMIN_USER_PWD)
        DOMAIN_ADMIN_USERNAME: $(DOMAIN_ADMIN_USERNAME)
        TENANT_ID: $(TENANT_ID)
        ORGANIZATION_NAME: $(ORGANIZATION_NAME)
        VDC_SUBSCRIPTIONS: $(VDC_SUBSCRIPTIONS)
        VDC_TOOLKIT_SUBSCRIPTION: $(VDC_TOOLKIT_SUBSCRIPTION)
  - job: AppServiceWebApp
    pool:
      name: 'vdc-self-hosted'
    dependsOn: [ AppServicePlan, KeyVault ]
    variables: 
      BOOTSTRAP_INITIALIZED: $[dependencies.KeyVault.outputs['bootstrapInitializedOutput.BOOTSTRAP_INITIALIZED']]
    steps:
    - task: AzurePowerShell@4
      displayName: "App Service WebApp" 
      inputs:
        azureSubscription: 'vdc2-spoke1'
        ScriptType: 'FilePath'
        ScriptPath: 'Orchestration/OrchestrationService/ModuleConfigurationDeployment.ps1'
        ScriptArguments: '-DefinitionPath "Environments/ASE-SQLDB/Archetype/definition.json" -ModuleConfigurationName "AppServiceWebApp"'
        azurePowerShellVersion: 'LatestVersion'
      env:
        ADMIN_USER_PWD: $(ADMIN_USER_PWD)
        ADMIN_USER_SSH: $(ADMIN_USER_SSH)
        DEVOPS_SERVICE_PRINCIPAL_USER_ID: $(DEVOPS_SERVICE_PRINCIPAL_USER_ID)
        KEYVAULT_MANAGEMENT_USER_ID: $(KEYVAULT_MANAGEMENT_USER_ID)
        DOMAIN_ADMIN_USER_PWD: $(DOMAIN_ADMIN_USER_PWD)
        DOMAIN_ADMIN_USERNAME: $(DOMAIN_ADMIN_USERNAME)
        TENANT_ID: $(TENANT_ID)
        ORGANIZATION_NAME: $(ORGANIZATION_NAME)
        VDC_SUBSCRIPTIONS: $(VDC_SUBSCRIPTIONS)
        VDC_TOOLKIT_SUBSCRIPTION: $(VDC_TOOLKIT_SUBSCRIPTION)
  - job: SQLDBServer
    timeoutInMinutes: 0
    pool:
      name: 'vdc-self-hosted'
    dependsOn: KeyVault
    variables: 
      BOOTSTRAP_INITIALIZED: $[dependencies.KeyVault.outputs['bootstrapInitializedOutput.BOOTSTRAP_INITIALIZED']]
    steps:
    - task: AzurePowerShell@4
      displayName: "SQLDB Server" 
      inputs:
        azureSubscription: 'vdc2-spoke1'
        ScriptType: 'FilePath'
        ScriptPath: 'Orchestration/OrchestrationService/ModuleConfigurationDeployment.ps1'
        ScriptArguments: '-DefinitionPath "Environments/ASE-SQLDB/Archetype/definition.json" -ModuleConfigurationName "SQLDBServer"'
        azurePowerShellVersion: 'LatestVersion'
      env:
        ADMIN_USER_PWD: $(ADMIN_USER_PWD)
        ADMIN_USER_SSH: $(ADMIN_USER_SSH)
        DEVOPS_SERVICE_PRINCIPAL_USER_ID: $(DEVOPS_SERVICE_PRINCIPAL_USER_ID)
        KEYVAULT_MANAGEMENT_USER_ID: $(KEYVAULT_MANAGEMENT_USER_ID)
        DOMAIN_ADMIN_USER_PWD: $(DOMAIN_ADMIN_USER_PWD)
        DOMAIN_ADMIN_USERNAME: $(DOMAIN_ADMIN_USERNAME)
        TENANT_ID: $(TENANT_ID)
        ORGANIZATION_NAME: $(ORGANIZATION_NAME)
        VDC_SUBSCRIPTIONS: $(VDC_SUBSCRIPTIONS)
        VDC_TOOLKIT_SUBSCRIPTION: $(VDC_TOOLKIT_SUBSCRIPTION)
  - job: SQLDatabase
    timeoutInMinutes: 0
    pool:
      name: 'vdc-self-hosted'
    dependsOn: [ SQLDBServer, KeyVault ]
    variables: 
      BOOTSTRAP_INITIALIZED: $[dependencies.KeyVault.outputs['bootstrapInitializedOutput.BOOTSTRAP_INITIALIZED']]
    steps:
    - task: AzurePowerShell@4
      displayName: "SQLDatabase" 
      inputs:
        azureSubscription: 'vdc2-spoke1'
        ScriptType: 'FilePath'
        ScriptPath: 'Orchestration/OrchestrationService/ModuleConfigurationDeployment.ps1'
        ScriptArguments: '-DefinitionPath "Environments/ASE-SQLDB/Archetype/definition.json" -ModuleConfigurationName "SQLDatabase"'
        azurePowerShellVersion: 'LatestVersion'
      env:
        ADMIN_USER_PWD: $(ADMIN_USER_PWD)
        ADMIN_USER_SSH: $(ADMIN_USER_SSH)
        DEVOPS_SERVICE_PRINCIPAL_USER_ID: $(DEVOPS_SERVICE_PRINCIPAL_USER_ID)
        KEYVAULT_MANAGEMENT_USER_ID: $(KEYVAULT_MANAGEMENT_USER_ID)
        DOMAIN_ADMIN_USER_PWD: $(DOMAIN_ADMIN_USER_PWD)
        DOMAIN_ADMIN_USERNAME: $(DOMAIN_ADMIN_USERNAME)
        TENANT_ID: $(TENANT_ID)
        ORGANIZATION_NAME: $(ORGANIZATION_NAME)
        VDC_SUBSCRIPTIONS: $(VDC_SUBSCRIPTIONS)
        VDC_TOOLKIT_SUBSCRIPTION: $(VDC_TOOLKIT_SUBSCRIPTION)