{
    "Organization": "env(ORGANIZATION_NAME)",
    "DeploymentName": "ntier-iaas",
    "InstanceName": "${Parameters.Organization}-${Parameters.DeploymentName}",
    "Subscription": "NTier_IaaS",
    "ModuleConfigurationParameters": {
        "DeploymentUserId": "env(DEPLOYMENT_USER_ID)",
        "DeploymentAppId": "env(DEPLOYMENT_APP_ID)",
        "Comments": "Adding VirtualNetwork property, because KeyVault references a VirtualNetwork property references NetworkSecurityGroups and RouteTable, this is why these two properties are also included",
        "KeyVault": {
            "Name": "${Parameters.InstanceName}-kv",
            "ResourceGroup": "${Parameters.InstanceName}-keyvault-rg",
            "Sku": "Premium",
            "EnableVaultForDeployment": true,
            "EnableVaultForDiskEncryption": true,
            "EnableVaultForTemplateDeployment": true,
            "AccessPolicies": [
                {
                    "tenantId": "${Parameters.TenantId}",
                    "objectId": "${Parameters.ModuleConfigurationParameters.DeploymentUserId}",
                    "permissions": {
                        "certificates": [
                            "All"
                        ],
                        "keys": [
                            "All"
                        ],
                        "secrets": [
                            "All"
                        ]
                    }
                },
                {
                    "tenantId": "${Parameters.TenantId}",
                    "objectId": "${Parameters.ModuleConfigurationParameters.DeploymentAppId}",
                    "permissions": {
                        "certificates": [
                            "All"
                        ],
                        "keys": [
                            "All"
                        ],
                        "secrets": [
                            "All"
                        ]
                    }
                }
            ],
            "SecretsObject": {
                "Comments": "Creating an object so we can use a secretsobject parameter type in our ARM template",
                "Secrets": [
                    {
                        "secretName": "admin-user",
                        "secretValue": "env(ADMIN_USER_PWD)"
                    }
                ]
            },
            "NetworkAcls": {
                "bypass": "AzureServices",
                "defaultAction": "Deny",
                "virtualNetworkRules": [
                    {
                        "subnet": "reference(VirtualNetwork.subnetNames)"
                    }
                ],
                "ipRules": []
            }
        },
        "WebApp": {
            "Name": "webvmss",
            "ResourceGroup": "${Parameters.InstanceName}-webapp-rg",
            "VMSKU": {
                "name": "Standard_DS3_v2", 
                "tier": "Standard", 
                "capacity": 5
            },
            "UpgradePolicy": {
                "Mode": "Automatic",
                "RollingUpgradePolicy": {
                    "maxBatchInstancePercent": 20,
                    "maxUnhealthyInstancePercent": 20,
                    "maxUnhealthyUpgradedInstancePercent": 20,
                    "pauseTimeBetweenBatches": "PT10S"
                }
            },
            "OSImage": {
                "offer": "WindowsServer",
                "publisher": "MicrosoftWindowsServer",
                "sku": "2016-Datacenter"
            },
            "OSType": "Windows",
            "Kek": {
                "Name": "WebAppKey",
                "Comments": "Destination can be HSM or Software. Use HSM to create Production keys.",
                "Destination": "HSM"
            },
            "DomainName": "reference(${Parameters.Organization}-shrdsvcs.InstallActiveDirectoryDomainServices.domainName)",
            "DomainAdminUsername": "env(DOMAIN_ADMIN_USERNAME)",
            "DomainAdminPassword": "env(DOMAIN_ADMIN_USER_PWD)",
            "AdminUsername": "${Parameters.ModuleConfigurationParameters.KeyVault.SecretsObject.Secrets[0].secretName}",
            "AdminPassword": {
                "keyVault": {
                    "id": "reference(KeyVault.keyVaultResourceId)"
                },
                "secretName": "${Parameters.ModuleConfigurationParameters.KeyVault.SecretsObject.Secrets[0].secretName}"
            },
            "SubnetName": "reference(VirtualNetwork.subnetNames)"
        },
        "WebAppLoadBalancer": {
            "Name": "web-lb",
            "ResourceGroup": "${Parameters.ModuleConfigurationParameters.WebApp.ResourceGroup}",
            "LoadBalancingRules": [
                {
                    "name": "LBRule",
                    "properties": {
                        "frontendPort": 80,
                        "backendPort": 80,
                        "enableFloatingIP": false,
                        "idleTimeoutInMinutes": 5,
                        "protocol": "Tcp",
                        "probeName": "tcpProbe"
                    }
                }
            ],
            "Probes": [
                {
                    "name": "tcpProbe",
                    "properties": {
                        "protocol": "Tcp",
                        "port": 80,
                        "requestPath": "",
                        "intervalInSeconds": 5,
                        "numberOfProbes": 2
                    }
                }
            ],
            "SubnetName": "reference(VirtualNetwork.subnetNames)"
        },
        "BusinessApp": {
            "Name": "bizvmss",
            "ResourceGroup": "${Parameters.InstanceName}-bizapp-rg",
            "VMSKU": {
                "name": "Standard_DS3_v2", 
                "tier": "Standard", 
                "capacity": 5
            },
            "UpgradePolicy": {
                "Mode": "Automatic",
                "RollingUpgradePolicy": {
                    "maxBatchInstancePercent": 20,
                    "maxUnhealthyInstancePercent": 20,
                    "maxUnhealthyUpgradedInstancePercent": 20,
                    "pauseTimeBetweenBatches": "PT10S"
                }
            },
            "OSImage": {
                "offer": "WindowsServer",
                "publisher": "MicrosoftWindowsServer",
                "sku": "2016-Datacenter"
            },
            "OSType": "Windows",
            "Kek": {
                "Name": "BusinessAppKey",
                "Comments": "Destination can be HSM or Software. Use HSM to create Production keys.",
                "Destination": "HSM"
            },
            "DomainName": "reference(${Parameters.Organization}-shrdsvcs.InstallActiveDirectoryDomainServices.domainName)",
            "DomainAdminUsername": "env(DOMAIN_ADMIN_USERNAME)",
            "DomainAdminPassword": "env(DOMAIN_ADMIN_USER_PWD)",
            "AdminUsername": "${Parameters.ModuleConfigurationParameters.KeyVault.SecretsObject.Secrets[0].secretName}",
            "AdminPassword": {
                "keyVault": {
                    "id": "reference(KeyVault.keyVaultResourceId)"
                },
                "secretName": "${Parameters.ModuleConfigurationParameters.KeyVault.SecretsObject.Secrets[0].secretName}"
            },
            "SubnetName": "reference(VirtualNetwork.subnetNames)"
        },
        "BusinessAppLoadBalancer": {
            "Name": "${Parameters.InstanceName}-biz-lb",
            "ResourceGroup": "${Parameters.ModuleConfigurationParameters.BusinessApp.ResourceGroup}",
            "LoadBalancingRules": [
                {
                    "name": "LBRule",
                    "properties": {
                        "frontendPort": 80,
                        "backendPort": 80,
                        "enableFloatingIP": false,
                        "idleTimeoutInMinutes": 5,
                        "protocol": "Tcp",
                        "probeName": "tcpProbe"
                    }
                }
            ],
            "Probes": [
                {
                    "name": "tcpProbe",
                    "properties": {
                        "protocol": "Tcp",
                        "requestPath": "",
                        "port": 80,
                        "intervalInSeconds": 5,
                        "numberOfProbes": 2
                    }
                }
            ],
            "SubnetName": "reference(VirtualNetwork.subnetNames)"
        },
        "SQLServerAlwaysOn": {
            "Name": "sql-vm",
            "ResourceGroup": "${Parameters.InstanceName}-data-rg",
            "VMCount": 2,
            "VMSize": "Standard_DS14_v2",
            "OSType": "Windows",
            "OSImage": {
                "offer": "SQL2017-WS2016",
                "publisher": "MicrosoftSQLServer",
                "sku": "Enterprise"
            },
            "IPAddressStart": "172.2.0.20",
            "DomainName": "reference(${Parameters.Organization}-shrdsvcs.InstallActiveDirectoryDomainServices.domainName)",
            "DomainAdminUsername": "env(DOMAIN_ADMIN_USERNAME)",
            "DomainAdminPassword": "env(DOMAIN_ADMIN_USER_PWD)",
            "AdminUsername": "${Parameters.ModuleConfigurationParameters.KeyVault.SecretsObject.Secrets[0].secretName}",
            "AdminPassword": {
                "keyVault": {
                    "id": "reference(KeyVault.keyVaultResourceId)"
                },
                "secretName": "${Parameters.ModuleConfigurationParameters.KeyVault.SecretsObject.Secrets[0].secretName}"
            },
            "ClusterName": "AOCluster",
            "DataDisks": [
                {
                    "size": 1023,
                    "driveLetter": "F",
                    "diskId": 2
                },
                {
                    "size": 1023,
                    "driveLetter": "G",
                    "diskId": 3
                }
            ],
            "SubnetName": "reference(VirtualNetwork.subnetNames)"
        },
        "SQLServerAlwaysOnCloudWitness": {
            "Name": "${Parameters.InstanceName}ntierstrg",
            "ResourceGroup": "${Parameters.ModuleConfigurationParameters.SQLServerAlwaysOn.ResourceGroup}",
            "Sku": "Standard_GRS",
            "NetworkAcls": {
                "bypass": "AzureServices",
                "defaultAction": "Deny",
                "virtualNetworkRules": [
                    {
                        "subnet": "reference(VirtualNetwork.subnetNames)"
                    }
                ],
                "ipRules": []
            },
            "Policies": {
                "Effect": "Audit"
            }
        },
        "SQLServerAlwaysOnLoadBalancer": {
            "Name": "${Parameters.InstanceName}-data-lb",
            "ResourceGroup": "${Parameters.ModuleConfigurationParameters.SQLServerAlwaysOn.ResourceGroup}",
            "IPAddressStart": "172.2.0.22",
            "LoadBalancingRules": [
                {
                    "name": "LBRule",
                    "properties": {
                        "frontendPort": 1433,
                        "backendPort": 1433,
                        "enableFloatingIP": false,
                        "idleTimeoutInMinutes": 5,
                        "protocol": "Tcp",
                        "probeName": "tcpProbe"
                    }
                }
            ],
            "Probes": [
                {
                    "name": "tcpProbe",
                    "properties": {
                        "protocol": "Tcp",
                        "requestPath": "",
                        "port": 1433,
                        "intervalInSeconds": 5,
                        "numberOfProbes": 2
                    }
                }
            ],
            "SubnetName": "reference(VirtualNetwork.subnetNames)"
        }
    }
}