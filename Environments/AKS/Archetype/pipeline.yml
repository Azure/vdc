# VDC Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
# Set variables once
variables:
- group: VDC_SECRETS
- group: VDC_AKS_SECRETS
trigger:
- master
stages:
- stage: Validate
  jobs:
  - job: ContainerRegistry
    pool:
      name: 'vdc-self-hosted'
    steps:
    - task: PowerShell@2
      displayName: "Pester Tests for Module - Container Registries"
      inputs:
        targetType: 'inline'
        script: '# Write your powershell commands here.

          Invoke-Pester -Script "./Modules/ContainerRegistries/2.0/Tests";

          # Use the environment variables input below to pass secret variables to this script.'
        pwsh: true
    - task: AzurePowerShell@4
      displayName: "ARM Validation - Container Registries"
      inputs:
        azureSubscription: 'vdc2-spoke1'
        ScriptType: 'FilePath'
        ScriptPath: 'Orchestration/OrchestrationService/ModuleConfigurationDeployment.ps1'
        ScriptArguments: '-DefinitionPath "Environments/AKS/Archetype/definition.json" -ModuleConfigurationName "ContainerRegistry" -Validate'
        azurePowerShellVersion: 'LatestVersion'
      env:
        VDC_SUBSCRIPTIONS: $(VDC_SUBSCRIPTIONS)
        VDC_TOOLKIT_SUBSCRIPTION: $(VDC_TOOLKIT_SUBSCRIPTION)
        KEYVAULT_MANAGEMENT_USER_ID: $(KEYVAULT_MANAGEMENT_USER_ID)
        ADMIN_USER_PWD: $(ADMIN_USER_PWD)
        ADMIN_USER_SSH: $(ADMIN_USER_SSH)
        DOMAIN_ADMIN_USER_PWD: $(DOMAIN_ADMIN_USER_PWD)
        DOMAIN_ADMIN_USERNAME: $(DOMAIN_ADMIN_USERNAME)
        TENANT_ID: $(TENANT_ID)
        ORGANIZATION_NAME: $(ORGANIZATION_NAME)
        SERVICE_PRINCIPAL_CLIENT_ID: $(SERVICE_PRINCIPAL_CLIENT_ID)
        SERVICE_PRINCIPAL_CLIENT_SECRET: $(SERVICE_PRINCIPAL_CLIENT_SECRET)
        RBAC_SERVER_APP_ID: $(RBAC_SERVER_APP_ID)
        RBAC_SERVER_SECRET: $(RBAC_SERVER_SECRET)
        RBAC_CLIENT_APP_ID: $(RBAC_CLIENT_APP_ID)
        RBAC_TENANT: $(RBAC_TENANT)
        CLUSTER_ADMIN_GROUP_ID: $(CLUSTER_ADMIN_GROUP_ID)
        NOC_USER_GROUP_ID: $(NOC_USER_GROUP_ID)
        DEV_USER_GROUP_ID: $(DEV_USER_GROUP_ID)
        SCRIPT_EXECUTION_SP_ID: $(SCRIPT_EXECUTION_SP_ID)
        SCRIPT_EXECUTION_SP_KEY: $(SCRIPT_EXECUTION_SP_KEY)
    - task: PowerShell@2
      displayName: "Sets multi-job variable"
      name: "bootstratInitializedOutput"
      inputs:
        targetType: 'inline'
        script: '

          $bootstrapInitialized = $ENV:BOOTSTRAP_INITIALIZED;
          Write-Host "##vso[task.setvariable variable=BOOTSTRAP_INITIALIZED;isOutput=true]$bootstrapInitialized";'
        pwsh: true
  - job: AzureKubernetesServices
    pool:
      name: 'vdc-self-hosted'
    dependsOn: [ ContainerRegistry ]
    variables:
      BOOTSTRAP_INITIALIZED: $[dependencies.ContainerRegistry.outputs['bootstratInitializedOutput.BOOTSTRAP_INITIALIZED']]
    steps:
    - task: PowerShell@2
      displayName: "Pester Tests for Module - Azure Kubernetes Services"
      inputs:
        targetType: 'inline'
        script: '# Write your powershell commands here.

          Invoke-Pester -Script "./Modules/AzureKubernetesServices/2.0/Tests";

          # Use the environment variables input below to pass secret variables to this script.'
        pwsh: true
    - task: AzurePowerShell@4
      displayName: "ARM Validation - Azure Kubernetes Services"
      inputs:
        azureSubscription: 'vdc2-spoke1'
        ScriptType: 'FilePath'
        ScriptPath: 'Orchestration/OrchestrationService/ModuleConfigurationDeployment.ps1'
        ScriptArguments: '-DefinitionPath "Environments/AKS/Archetype/definition.json" -ModuleConfigurationName "AzureKubernetesServices" -Validate -TearDownValidationResourceGroup'
        azurePowerShellVersion: 'LatestVersion'
      env:
        VDC_SUBSCRIPTIONS: $(VDC_SUBSCRIPTIONS)
        VDC_TOOLKIT_SUBSCRIPTION: $(VDC_TOOLKIT_SUBSCRIPTION)
        KEYVAULT_MANAGEMENT_USER_ID: $(KEYVAULT_MANAGEMENT_USER_ID)
        ADMIN_USER_PWD: $(ADMIN_USER_PWD)
        ADMIN_USER_SSH: $(ADMIN_USER_SSH)
        DOMAIN_ADMIN_USER_PWD: $(DOMAIN_ADMIN_USER_PWD)
        DOMAIN_ADMIN_USERNAME: $(DOMAIN_ADMIN_USERNAME)
        TENANT_ID: $(TENANT_ID)
        ORGANIZATION_NAME: $(ORGANIZATION_NAME)
        SERVICE_PRINCIPAL_CLIENT_ID: $(SERVICE_PRINCIPAL_CLIENT_ID)
        SERVICE_PRINCIPAL_CLIENT_SECRET: $(SERVICE_PRINCIPAL_CLIENT_SECRET)
        RBAC_SERVER_APP_ID: $(RBAC_SERVER_APP_ID)
        RBAC_SERVER_SECRET: $(RBAC_SERVER_SECRET)
        RBAC_CLIENT_APP_ID: $(RBAC_CLIENT_APP_ID)
        RBAC_TENANT: $(RBAC_TENANT)
        CLUSTER_ADMIN_GROUP_ID: $(CLUSTER_ADMIN_GROUP_ID)
        NOC_USER_GROUP_ID: $(NOC_USER_GROUP_ID)
        DEV_USER_GROUP_ID: $(DEV_USER_GROUP_ID)
        SCRIPT_EXECUTION_SP_ID: $(SCRIPT_EXECUTION_SP_ID)
        SCRIPT_EXECUTION_SP_KEY: $(SCRIPT_EXECUTION_SP_KEY)
- stage: DeployEnvironment
  jobs:
  - job: ContainerRegistry
    timeoutInMinutes: 0
    pool:
      name: 'vdc-self-hosted'
    steps:
    - task: AzurePowerShell@4
      displayName: "Container Registries"
      inputs:
        azureSubscription: 'vdc2-spoke1'
        ScriptType: 'FilePath'
        ScriptPath: 'Orchestration/OrchestrationService/ModuleConfigurationDeployment.ps1'
        ScriptArguments: '-DefinitionPath "Environments/AKS/Archetype/definition.json" -ModuleConfigurationName "ContainerRegistry"'
        azurePowerShellVersion: 'LatestVersion'
      env:
        VDC_SUBSCRIPTIONS: $(VDC_SUBSCRIPTIONS)
        VDC_TOOLKIT_SUBSCRIPTION: $(VDC_TOOLKIT_SUBSCRIPTION)
        KEYVAULT_MANAGEMENT_USER_ID: $(KEYVAULT_MANAGEMENT_USER_ID)
        ADMIN_USER_PWD: $(ADMIN_USER_PWD)
        ADMIN_USER_SSH: $(ADMIN_USER_SSH)
        DOMAIN_ADMIN_USER_PWD: $(DOMAIN_ADMIN_USER_PWD)
        DOMAIN_ADMIN_USERNAME: $(DOMAIN_ADMIN_USERNAME)
        TENANT_ID: $(TENANT_ID)
        ORGANIZATION_NAME: $(ORGANIZATION_NAME)
        SERVICE_PRINCIPAL_CLIENT_ID: $(SERVICE_PRINCIPAL_CLIENT_ID)
        SERVICE_PRINCIPAL_CLIENT_SECRET: $(SERVICE_PRINCIPAL_CLIENT_SECRET)
        RBAC_SERVER_APP_ID: $(RBAC_SERVER_APP_ID)
        RBAC_SERVER_SECRET: $(RBAC_SERVER_SECRET)
        RBAC_CLIENT_APP_ID: $(RBAC_CLIENT_APP_ID)
        RBAC_TENANT: $(RBAC_TENANT)
        CLUSTER_ADMIN_GROUP_ID: $(CLUSTER_ADMIN_GROUP_ID)
        NOC_USER_GROUP_ID: $(NOC_USER_GROUP_ID)
        DEV_USER_GROUP_ID: $(DEV_USER_GROUP_ID)
        SCRIPT_EXECUTION_SP_ID: $(SCRIPT_EXECUTION_SP_ID)
        SCRIPT_EXECUTION_SP_KEY: $(SCRIPT_EXECUTION_SP_KEY)
    - task: PowerShell@2
      displayName: "Sets multi-job variable"
      name: "bootstratInitializedOutput"
      inputs:
        targetType: 'inline'
        script: '

          $bootstrapInitialized = $ENV:BOOTSTRAP_INITIALIZED;
          Write-Host "##vso[task.setvariable variable=BOOTSTRAP_INITIALIZED;isOutput=true]$bootstrapInitialized";'
        pwsh: true
  - job: AzureKubernetesServices
    timeoutInMinutes: 0
    pool:
      name: 'vdc-self-hosted'
    dependsOn: ContainerRegistry
    variables:
      BOOTSTRAP_INITIALIZED: $[dependencies.ContainerRegistry.outputs['bootstratInitializedOutput.BOOTSTRAP_INITIALIZED']]
    steps:
    - task: AzurePowerShell@4
      displayName: "Azure Kubernetes Services"
      inputs:
        azureSubscription: 'vdc2-spoke1'
        ScriptType: 'FilePath'
        ScriptPath: 'Orchestration/OrchestrationService/ModuleConfigurationDeployment.ps1'
        ScriptArguments: '-DefinitionPath "Environments/AKS/Archetype/definition.json" -ModuleConfigurationName "AzureKubernetesServices"'
        azurePowerShellVersion: 'LatestVersion'
      env:
        VDC_SUBSCRIPTIONS: $(VDC_SUBSCRIPTIONS)
        VDC_TOOLKIT_SUBSCRIPTION: $(VDC_TOOLKIT_SUBSCRIPTION)
        KEYVAULT_MANAGEMENT_USER_ID: $(KEYVAULT_MANAGEMENT_USER_ID)
        ADMIN_USER_PWD: $(ADMIN_USER_PWD)
        ADMIN_USER_SSH: $(ADMIN_USER_SSH)
        DOMAIN_ADMIN_USER_PWD: $(DOMAIN_ADMIN_USER_PWD)
        DOMAIN_ADMIN_USERNAME: $(DOMAIN_ADMIN_USERNAME)
        TENANT_ID: $(TENANT_ID)
        ORGANIZATION_NAME: $(ORGANIZATION_NAME)
        SERVICE_PRINCIPAL_CLIENT_ID: $(SERVICE_PRINCIPAL_CLIENT_ID)
        SERVICE_PRINCIPAL_CLIENT_SECRET: $(SERVICE_PRINCIPAL_CLIENT_SECRET)
        RBAC_SERVER_APP_ID: $(RBAC_SERVER_APP_ID)
        RBAC_SERVER_SECRET: $(RBAC_SERVER_SECRET)
        RBAC_CLIENT_APP_ID: $(RBAC_CLIENT_APP_ID)
        RBAC_TENANT: $(RBAC_TENANT)
        CLUSTER_ADMIN_GROUP_ID: $(CLUSTER_ADMIN_GROUP_ID)
        NOC_USER_GROUP_ID: $(NOC_USER_GROUP_ID)
        DEV_USER_GROUP_ID: $(DEV_USER_GROUP_ID)
        SCRIPT_EXECUTION_SP_ID: $(SCRIPT_EXECUTION_SP_ID)
        SCRIPT_EXECUTION_SP_KEY: $(SCRIPT_EXECUTION_SP_KEY)
  - job: ScriptsPreReqs
    timeoutInMinutes: 0
    pool:
      name: 'vdc-self-hosted'
    dependsOn: ContainerRegistry
    variables:
      BOOTSTRAP_INITIALIZED: $[dependencies.ContainerRegistry.outputs['bootstratInitializedOutput.BOOTSTRAP_INITIALIZED']]
    steps:
    - task: AzurePowerShell@4
      displayName: "Permissions Scripts Pre Reqs"
      inputs:
        azureSubscription: 'vdc2-spoke1'
        ScriptType: 'FilePath'
        ScriptPath: 'Orchestration/OrchestrationService/ModuleConfigurationDeployment.ps1'
        ScriptArguments: '-DefinitionPath "Environments/AKS/Archetype/definition.json" -ModuleConfigurationName "PermissionsScriptsPreReqs"'
        azurePowerShellVersion: 'LatestVersion'
      env:
        VDC_SUBSCRIPTIONS: $(VDC_SUBSCRIPTIONS)
        VDC_TOOLKIT_SUBSCRIPTION: $(VDC_TOOLKIT_SUBSCRIPTION)
        KEYVAULT_MANAGEMENT_USER_ID: $(KEYVAULT_MANAGEMENT_USER_ID)
        ADMIN_USER_PWD: $(ADMIN_USER_PWD)
        ADMIN_USER_SSH: $(ADMIN_USER_SSH)
        DOMAIN_ADMIN_USER_PWD: $(DOMAIN_ADMIN_USER_PWD)
        DOMAIN_ADMIN_USERNAME: $(DOMAIN_ADMIN_USERNAME)
        TENANT_ID: $(TENANT_ID)
        ORGANIZATION_NAME: $(ORGANIZATION_NAME)
        SERVICE_PRINCIPAL_CLIENT_ID: $(SERVICE_PRINCIPAL_CLIENT_ID)
        SERVICE_PRINCIPAL_CLIENT_SECRET: $(SERVICE_PRINCIPAL_CLIENT_SECRET)
        RBAC_SERVER_APP_ID: $(RBAC_SERVER_APP_ID)
        RBAC_SERVER_SECRET: $(RBAC_SERVER_SECRET)
        RBAC_CLIENT_APP_ID: $(RBAC_CLIENT_APP_ID)
        RBAC_TENANT: $(RBAC_TENANT)
        CLUSTER_ADMIN_GROUP_ID: $(CLUSTER_ADMIN_GROUP_ID)
        NOC_USER_GROUP_ID: $(NOC_USER_GROUP_ID)
        DEV_USER_GROUP_ID: $(DEV_USER_GROUP_ID)
        SCRIPT_EXECUTION_SP_ID: $(SCRIPT_EXECUTION_SP_ID)
        SCRIPT_EXECUTION_SP_KEY: $(SCRIPT_EXECUTION_SP_KEY)
    - task: AzurePowerShell@4
      displayName: "Scripts Pre Reqs"
      inputs:
        azureSubscription: 'vdc2-spoke1'
        ScriptType: 'FilePath'
        ScriptPath: 'Orchestration/OrchestrationService/ModuleConfigurationDeployment.ps1'
        ScriptArguments: '-DefinitionPath "Environments/AKS/Archetype/definition.json" -ModuleConfigurationName "ScriptsPreReqs"'
        azurePowerShellVersion: 'LatestVersion'
      env:
        VDC_SUBSCRIPTIONS: $(VDC_SUBSCRIPTIONS)
        VDC_TOOLKIT_SUBSCRIPTION: $(VDC_TOOLKIT_SUBSCRIPTION)
        KEYVAULT_MANAGEMENT_USER_ID: $(KEYVAULT_MANAGEMENT_USER_ID)
        ADMIN_USER_PWD: $(ADMIN_USER_PWD)
        ADMIN_USER_SSH: $(ADMIN_USER_SSH)
        DOMAIN_ADMIN_USER_PWD: $(DOMAIN_ADMIN_USER_PWD)
        DOMAIN_ADMIN_USERNAME: $(DOMAIN_ADMIN_USERNAME)
        TENANT_ID: $(TENANT_ID)
        ORGANIZATION_NAME: $(ORGANIZATION_NAME)
        SERVICE_PRINCIPAL_CLIENT_ID: $(SERVICE_PRINCIPAL_CLIENT_ID)
        SERVICE_PRINCIPAL_CLIENT_SECRET: $(SERVICE_PRINCIPAL_CLIENT_SECRET)
        RBAC_SERVER_APP_ID: $(RBAC_SERVER_APP_ID)
        RBAC_SERVER_SECRET: $(RBAC_SERVER_SECRET)
        RBAC_CLIENT_APP_ID: $(RBAC_CLIENT_APP_ID)
        RBAC_TENANT: $(RBAC_TENANT)
        CLUSTER_ADMIN_GROUP_ID: $(CLUSTER_ADMIN_GROUP_ID)
        NOC_USER_GROUP_ID: $(NOC_USER_GROUP_ID)
        DEV_USER_GROUP_ID: $(DEV_USER_GROUP_ID)
        SCRIPT_EXECUTION_SP_ID: $(SCRIPT_EXECUTION_SP_ID)
        SCRIPT_EXECUTION_SP_KEY: $(SCRIPT_EXECUTION_SP_KEY)
  - job: CreateClusterRBACRoleBindings
    timeoutInMinutes: 0
    pool:
      name: 'vdc-self-hosted'
    dependsOn: [ AzureKubernetesServices, ScriptsPreReqs, ContainerRegistry ]
    variables:
      BOOTSTRAP_INITIALIZED: $[dependencies.ContainerRegistry.outputs['bootstratInitializedOutput.BOOTSTRAP_INITIALIZED']]
    steps:
    - task: AzurePowerShell@4
      displayName: "Create Cluster RBAC Role Bindings"
      inputs:
        azureSubscription: 'vdc2-spoke1'
        ScriptType: 'FilePath'
        ScriptPath: 'Orchestration/OrchestrationService/ModuleConfigurationDeployment.ps1'
        ScriptArguments: '-DefinitionPath "Environments/AKS/Archetype/definition.json" -ModuleConfigurationName "CreateClusterRBACRoleBindings"'
        azurePowerShellVersion: 'LatestVersion'
      env:
        VDC_SUBSCRIPTIONS: $(VDC_SUBSCRIPTIONS)
        VDC_TOOLKIT_SUBSCRIPTION: $(VDC_TOOLKIT_SUBSCRIPTION)
        KEYVAULT_MANAGEMENT_USER_ID: $(KEYVAULT_MANAGEMENT_USER_ID)
        ADMIN_USER_PWD: $(ADMIN_USER_PWD)
        ADMIN_USER_SSH: $(ADMIN_USER_SSH)
        DOMAIN_ADMIN_USER_PWD: $(DOMAIN_ADMIN_USER_PWD)
        DOMAIN_ADMIN_USERNAME: $(DOMAIN_ADMIN_USERNAME)
        TENANT_ID: $(TENANT_ID)
        ORGANIZATION_NAME: $(ORGANIZATION_NAME)
        SERVICE_PRINCIPAL_CLIENT_ID: $(SERVICE_PRINCIPAL_CLIENT_ID)
        SERVICE_PRINCIPAL_CLIENT_SECRET: $(SERVICE_PRINCIPAL_CLIENT_SECRET)
        RBAC_SERVER_APP_ID: $(RBAC_SERVER_APP_ID)
        RBAC_SERVER_SECRET: $(RBAC_SERVER_SECRET)
        RBAC_CLIENT_APP_ID: $(RBAC_CLIENT_APP_ID)
        RBAC_TENANT: $(RBAC_TENANT)
        CLUSTER_ADMIN_GROUP_ID: $(CLUSTER_ADMIN_GROUP_ID)
        NOC_USER_GROUP_ID: $(NOC_USER_GROUP_ID)
        DEV_USER_GROUP_ID: $(DEV_USER_GROUP_ID)
        SCRIPT_EXECUTION_SP_ID: $(SCRIPT_EXECUTION_SP_ID)
        SCRIPT_EXECUTION_SP_KEY: $(SCRIPT_EXECUTION_SP_KEY)