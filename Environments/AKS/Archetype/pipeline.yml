# VDC Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
# Set variables once
variables:
- group: VDC_SECRETS
- group: VDC_AKS_SECRETS
trigger:
- master
stages:
- stage: Validate
  jobs:
  - job: SetupValidationResourceGroup
    pool: 
      name: 'vdc-self-hosted'
    steps:
    - task: AzurePowerShell@4
      displayName: "Setup Validation Resource Group"
      inputs:
        azureSubscription: 'Kunachim Azure SC'
        ScriptType: 'FilePath'
        ScriptPath: 'Orchestration/OrchestrationService/ValidationResourceGroupSetup.ps1'
        ScriptArguments: '-ResourceGroupName vdc-validation-rg -SetupResourceGroup'
        azurePowerShellVersion: 'LatestVersion'
  - job: ContainerRegistry
    pool:
      name: 'vdc-self-hosted'
    dependsOn: SetupValidationResourceGroup
    steps:
    - task: PowerShell@2
      displayName: "Pester Tests for Module - Container Registries"
      inputs:
        targetType: 'inline'
        script: '# Write your powershell commands here.
          
          Invoke-Pester -Script "./Modules/ContainerRegistries/2.0/Tests";
          
          # Use the environment variables input below to pass secret variables to this script.'
        pwsh: true
    - task: AzurePowerShell@4
      displayName: "ARM Validation - Container Registries"
      inputs:
        azureSubscription: 'Kunachim Azure SC'
        ScriptType: 'FilePath'
        ScriptPath: 'Orchestration/OrchestrationService/ModuleConfigurationDeployment.ps1'
        ScriptArguments: '-DefinitionPath "Environments/AKS/Archetype/definition.json" -ModuleConfigurationName "ContainerRegistry" -Validate'
        azurePowerShellVersion: 'LatestVersion'
      env:
        VDC_SUBSCRIPTIONS: $(VDC_SUBSCRIPTIONS)
        VDC_TOOLKIT_SUBSCRIPTION: $(VDC_TOOLKIT_SUBSCRIPTION)
        KEYVAULT_MANAGEMENT_USER_ID: $(KEYVAULT_MANAGEMENT_USER_ID)
        ADMIN_USER_PWD: $(ADMIN_USER_PWD)
        DOMAIN_ADMIN_USER_PWD: $(DOMAIN_ADMIN_USER_PWD)
        TENANT_ID: $(TENANT_ID)
  - job: AzureKubernetesServices
    pool:
      name: 'vdc-self-hosted'
    dependsOn: [ SetupValidationResourceGroup, ContainerRegistry ]
    variables: 
      BOOTSTRAP_INITIALIZED: $[dependencies.ContainerRegistry.outputs['bootstratInitializedOutput.BOOTSTRAP_INITIALIZED']]
    steps:
    - task: PowerShell@2
      displayName: "Pester Tests for Module - Azure Kubernetes Services"
      inputs:
        targetType: 'inline'
        script: '# Write your powershell commands here.
          
          Invoke-Pester -Script "./Modules/AzureKubernetesServices/2.0/Tests";
          
          # Use the environment variables input below to pass secret variables to this script.'
        pwsh: true
    - task: AzurePowerShell@4
      displayName: "ARM Validation - Azure Kubernetes Services"
      inputs:
        azureSubscription: 'Kunachim Azure SC'
        ScriptType: 'FilePath'
        ScriptPath: 'Orchestration/OrchestrationService/ModuleConfigurationDeployment.ps1'
        ScriptArguments: '-DefinitionPath "Environments/AKS/Archetype/definition.json" -ModuleConfigurationName "AzureKubernetesServices" -Validate'
        azurePowerShellVersion: 'LatestVersion'
      env:
        VDC_SUBSCRIPTIONS: $(VDC_SUBSCRIPTIONS)
        VDC_TOOLKIT_SUBSCRIPTION: $(VDC_TOOLKIT_SUBSCRIPTION)
        KEYVAULT_MANAGEMENT_USER_ID: $(KEYVAULT_MANAGEMENT_USER_ID)
        ADMIN_USER_PWD: $(ADMIN_USER_PWD)
        DOMAIN_ADMIN_USER_PWD: $(DOMAIN_ADMIN_USER_PWD)
        TENANT_ID: $(TENANT_ID)
  - job: TearDownValidationResourceGroup
    pool: 
      name: 'vdc-self-hosted'
    dependsOn: [ ContainerRegistry, AzureKubernetesServices ]
    variables: 
      BOOTSTRAP_INITIALIZED: $[dependencies.ContainerRegistry.outputs['bootstratInitializedOutput.BOOTSTRAP_INITIALIZED']]
    steps:
    - task: AzurePowerShell@4
      displayName: "Teardown Validation Resource Group"
      inputs:
        azureSubscription: 'Kunachim Azure SC'
        ScriptType: 'FilePath'
        ScriptPath: 'Orchestration/OrchestrationService/ValidationResourceGroupSetup.ps1'
        ScriptArguments: '-TearDownResourceGroup'
        azurePowerShellVersion: 'LatestVersion'
- stage: Deploy
  jobs:
  - job: ContainerRegistry
    timeoutInMinutes: 0
    pool:
      name: 'vdc-self-hosted'
    steps:
    - task: AzurePowerShell@4
      displayName: "Container Registries"
      inputs:
        azureSubscription: 'Kunachim Azure SC'
        ScriptType: 'FilePath'
        ScriptPath: 'Orchestration/OrchestrationService/ModuleConfigurationDeployment.ps1'
        ScriptArguments: '-DefinitionPath "Environments/AKS/Archetype/definition.json" -ModuleConfigurationName "ContainerRegistry"'
        azurePowerShellVersion: 'LatestVersion'
      env:
        VDC_SUBSCRIPTIONS: $(VDC_SUBSCRIPTIONS)
        VDC_TOOLKIT_SUBSCRIPTION: $(VDC_TOOLKIT_SUBSCRIPTION)
        KEYVAULT_MANAGEMENT_USER_ID: $(KEYVAULT_MANAGEMENT_USER_ID)
        ADMIN_USER_PWD: $(ADMIN_USER_PWD)
        DOMAIN_ADMIN_USER_PWD: $(DOMAIN_ADMIN_USER_PWD)
        TENANT_ID: $(TENANT_ID)
  - job: AzureKubernetesServices
    timeoutInMinutes: 0
    pool:
      name: 'vdc-self-hosted'
    dependsOn: ContainerRegistry
    variables: 
      BOOTSTRAP_INITIALIZED: $[dependencies.ContainerRegistry.outputs['bootstratInitializedOutput.BOOTSTRAP_INITIALIZED']]
    steps:
    - task: AzurePowerShell@4
      displayName: "Azure Kubernetes Services"
      inputs:
        azureSubscription: 'Kunachim Azure SC'
        ScriptType: 'FilePath'
        ScriptPath: 'Orchestration/OrchestrationService/ModuleConfigurationDeployment.ps1'
        ScriptArguments: '-DefinitionPath "Environments/AKS/Archetype/definition.json" -ModuleConfigurationName "AzureKubernetesServices"'
        azurePowerShellVersion: 'LatestVersion'
      env:
        VDC_SUBSCRIPTIONS: $(VDC_SUBSCRIPTIONS)
        VDC_TOOLKIT_SUBSCRIPTION: $(VDC_TOOLKIT_SUBSCRIPTION)
        KEYVAULT_MANAGEMENT_USER_ID: $(KEYVAULT_MANAGEMENT_USER_ID)
        ADMIN_USER_PWD: $(ADMIN_USER_PWD)
        DOMAIN_ADMIN_USER_PWD: $(DOMAIN_ADMIN_USER_PWD)
        TENANT_ID: $(TENANT_ID)
  - job: ScriptsPreReqs
    timeoutInMinutes: 0
    pool:
      name: 'vdc-self-hosted'
    dependsOn: ContainerRegistry
    variables: 
      BOOTSTRAP_INITIALIZED: $[dependencies.ContainerRegistry.outputs['bootstratInitializedOutput.BOOTSTRAP_INITIALIZED']]
    steps:
    - task: AzurePowerShell@4
      displayName: "Permissions Scripts Pre Reqs"
      inputs:
        azureSubscription: 'Kunachim Azure SC'
        ScriptType: 'FilePath'
        ScriptPath: 'Orchestration/OrchestrationService/ModuleConfigurationDeployment.ps1'
        ScriptArguments: '-DefinitionPath "Environments/AKS/Archetype/definition.json" -ModuleConfigurationName "PermissionsScriptsPreReqs"'
        azurePowerShellVersion: 'LatestVersion'
      env:
        VDC_SUBSCRIPTIONS: $(VDC_SUBSCRIPTIONS)
        VDC_TOOLKIT_SUBSCRIPTION: $(VDC_TOOLKIT_SUBSCRIPTION)
        KEYVAULT_MANAGEMENT_USER_ID: $(KEYVAULT_MANAGEMENT_USER_ID)
        ADMIN_USER_PWD: $(ADMIN_USER_PWD)
        DOMAIN_ADMIN_USER_PWD: $(DOMAIN_ADMIN_USER_PWD)
        TENANT_ID: $(TENANT_ID)
    - task: AzurePowerShell@4
      displayName: "Scripts Pre Reqs"
      inputs:
        azureSubscription: 'Kunachim Azure SC'
        ScriptType: 'FilePath'
        ScriptPath: 'Orchestration/OrchestrationService/ModuleConfigurationDeployment.ps1'
        ScriptArguments: '-DefinitionPath "Environments/AKS/Archetype/definition.json" -ModuleConfigurationName "ScriptsPreReqs"'
        azurePowerShellVersion: 'LatestVersion'
      env:
        VDC_SUBSCRIPTIONS: $(VDC_SUBSCRIPTIONS)
        VDC_TOOLKIT_SUBSCRIPTION: $(VDC_TOOLKIT_SUBSCRIPTION)
        KEYVAULT_MANAGEMENT_USER_ID: $(KEYVAULT_MANAGEMENT_USER_ID)
        ADMIN_USER_PWD: $(ADMIN_USER_PWD)
        DOMAIN_ADMIN_USER_PWD: $(DOMAIN_ADMIN_USER_PWD)
        TENANT_ID: $(TENANT_ID)
  - job: CreateClusterRBACRoleBindings
    timeoutInMinutes: 0
    pool:
      name: 'vdc-self-hosted'
    dependsOn: [ AzureKubernetesServices, ScriptsPreReqs, ContainerRegistry ]
    variables: 
      BOOTSTRAP_INITIALIZED: $[dependencies.ContainerRegistry.outputs['bootstratInitializedOutput.BOOTSTRAP_INITIALIZED']]
    steps:
    - task: AzurePowerShell@4
      displayName: "Create Cluster RBAC Role Bindings"
      inputs:
        azureSubscription: 'Kunachim Azure SC'
        ScriptType: 'FilePath'
        ScriptPath: 'Orchestration/OrchestrationService/ModuleConfigurationDeployment.ps1'
        ScriptArguments: '-DefinitionPath "Environments/AKS/Archetype/definition.json" -ModuleConfigurationName "CreateClusterRBACRoleBindings"'
        azurePowerShellVersion: 'LatestVersion'
      env:
        VDC_SUBSCRIPTIONS: $(VDC_SUBSCRIPTIONS)
        VDC_TOOLKIT_SUBSCRIPTION: $(VDC_TOOLKIT_SUBSCRIPTION)
        KEYVAULT_MANAGEMENT_USER_ID: $(KEYVAULT_MANAGEMENT_USER_ID)
        ADMIN_USER_PWD: $(ADMIN_USER_PWD)
        DOMAIN_ADMIN_USER_PWD: $(DOMAIN_ADMIN_USER_PWD)
        TENANT_ID: $(TENANT_ID)