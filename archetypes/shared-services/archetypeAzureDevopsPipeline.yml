# VDC Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
# Set variables once
variables:
- group: VDC_SECRETS
stages:
- stage: Validate
  jobs:
  - job: StorageAccounts
    pool:
      name: 'vdc-self-hosted'
    steps:
    - task: PowerShell@2
      displayName: "Pester Tests for Module - Storage Accounts"
      inputs:
        targetType: 'inline'
        script: '# Write your powershell commands here.
          
          Invoke-Pester -Script "./modules/StorageAccounts/2.0/Tests";
          
          # Use the environment variables input below to pass secret variables to this script.'
        pwsh: true
    - task: AzurePowerShell@4
      displayName: "ARM Validation - Diagnostic Storage Account"
      inputs:
        azureSubscription: 'vdc2-hub'
        ScriptType: 'FilePath'
        ScriptPath: 'orchestration/OrchestrationService/ModuleConfigurationDeployment.ps1'
        ScriptArguments: '-ArchetypeDefinitionPath "archetypes/shared-services/archetypeDefinition.json" -ModuleConfigurationName "DiagnosticStorageAccount" -Validate'
        azurePowerShellVersion: 'LatestVersion'
    - task: AzurePowerShell@4
      displayName: "ARM Validation - Enable Service Endpoint On Diagnostic Storage Account"
      inputs:
        azureSubscription: 'vdc2-hub'
        ScriptType: 'FilePath'
        ScriptPath: 'orchestration/OrchestrationService/ModuleConfigurationDeployment.ps1'
        ScriptArguments: '-ArchetypeDefinitionPath "archetypes/shared-services/archetypeDefinition.json" -ModuleConfigurationName "EnableServiceEndpointOnDiagnosticStorageAccount" -Validate'
        azurePowerShellVersion: 'LatestVersion'
    - task: AzurePowerShell@4
      displayName: "ARM Validation - Artifacts Storage Account"
      inputs:
        azureSubscription: 'vdc2-hub'
        ScriptType: 'FilePath'
        ScriptPath: 'orchestration/OrchestrationService/ModuleConfigurationDeployment.ps1'
        ScriptArguments: '-ArchetypeDefinitionPath "archetypes/shared-services/archetypeDefinition.json" -ModuleConfigurationName "ArtifactsStorageAccount" -Validate'
        azurePowerShellVersion: 'LatestVersion'
  - job: LogAnalytics
    pool:
      name: 'vdc-self-hosted'
    steps:
    - task: PowerShell@2
      displayName: "Pester Tests for Module - Log Analytics"
      inputs:
        targetType: 'inline'
        script: '# Write your powershell commands here.
          
          Invoke-Pester -Script "./modules/LogAnalytics/2.0/Tests";
          
          # Use the environment variables input below to pass secret variables to this script.'
        pwsh: true
    - task: AzurePowerShell@4
      displayName: "ARM Validation - Log Analytics"
      inputs:
        azureSubscription: 'vdc2-hub'
        ScriptType: 'FilePath'
        ScriptPath: 'orchestration/OrchestrationService/ModuleConfigurationDeployment.ps1'
        ScriptArguments: '-ArchetypeDefinitionPath "archetypes/shared-services/archetypeDefinition.json" -ModuleConfigurationName "LogAnalytics" -Validate'
        azurePowerShellVersion: 'LatestVersion'
    - task: AzurePowerShell@4
      displayName: "ARM Validation - Link Log Analytics With Automation Account"
      inputs:
        azureSubscription: 'vdc2-hub'
        ScriptType: 'FilePath'
        ScriptPath: 'orchestration/OrchestrationService/ModuleConfigurationDeployment.ps1'
        ScriptArguments: '-ArchetypeDefinitionPath "archetypes/shared-services/archetypeDefinition.json" -ModuleConfigurationName "LinkLogAnalyticsWithAutomationAccount" -Validate'
        azurePowerShellVersion: 'LatestVersion'
  - job: AutomationAccounts
    pool:
      name: 'vdc-self-hosted'
    steps:
    - task: PowerShell@2
      displayName: "Pester Tests for Module - Automation Accounts"
      inputs:
        targetType: 'inline'
        script: '# Write your powershell commands here.
          
          Invoke-Pester -Script "./modules/AutomationAccounts/2.0/Tests";
          
          # Use the environment variables input below to pass secret variables to this script.'
        pwsh: true
    - task: AzurePowerShell@4
      displayName: "ARM Validation - Automation Accounts"
      inputs:
        azureSubscription: 'vdc2-hub'
        ScriptType: 'FilePath'
        ScriptPath: 'orchestration/OrchestrationService/ModuleConfigurationDeployment.ps1'
        ScriptArguments: '-ArchetypeDefinitionPath "archetypes/shared-services/archetypeDefinition.json" -ModuleConfigurationName "AutomationAccounts" -Validate'
        azurePowerShellVersion: 'LatestVersion'
  - job: ApplicationSecurityGroups
    pool:
      name: 'vdc-self-hosted'
    steps:
    - task: PowerShell@2
      displayName: "Pester Tests for Module - Application Security Groups"
      inputs:
        targetType: 'inline'
        script: '# Write your powershell commands here.
          
          Invoke-Pester -Script "./modules/ApplicationSecurityGroups/2.0/Tests";
          
          # Use the environment variables input below to pass secret variables to this script.'
        pwsh: true
    - task: AzurePowerShell@4
      displayName: "ARM Validation - Jumpbox ASG"
      inputs:
        azureSubscription: 'vdc2-hub'
        ScriptType: 'FilePath'
        ScriptPath: 'orchestration/OrchestrationService/ModuleConfigurationDeployment.ps1'
        ScriptArguments: '-ArchetypeDefinitionPath "archetypes/shared-services/archetypeDefinition.json" -ModuleConfigurationName "JumpboxASG" -Validate'
        azurePowerShellVersion: 'LatestVersion'
    - task: AzurePowerShell@4
      displayName: "ARM Validation - Domain Controller ASG"
      inputs:
        azureSubscription: 'vdc2-hub'
        ScriptType: 'FilePath'
        ScriptPath: 'orchestration/OrchestrationService/ModuleConfigurationDeployment.ps1'
        ScriptArguments: '-ArchetypeDefinitionPath "archetypes/shared-services/archetypeDefinition.json" -ModuleConfigurationName "DomainControllerASG" -Validate'
        azurePowerShellVersion: 'LatestVersion'
  - job: NetworkSecurityGroups
    pool:
      name: 'vdc-self-hosted'
    steps:
    - task: PowerShell@2
      displayName: "Pester Tests for Module - Network Security Groups"
      inputs:
        targetType: 'inline'
        script: '# Write your powershell commands here.
          
          Invoke-Pester -Script "./modules/NetworkSecurityGroups/2.0/Tests";
          
          # Use the environment variables input below to pass secret variables to this script.'
        pwsh: true
    - task: AzurePowerShell@4
      displayName: "ARM Validation - Shared Services NSG"
      inputs:
        azureSubscription: 'vdc2-hub'
        ScriptType: 'FilePath'
        ScriptPath: 'orchestration/OrchestrationService/ModuleConfigurationDeployment.ps1'
        ScriptArguments: '-ArchetypeDefinitionPath "archetypes/shared-services/archetypeDefinition.json" -ModuleConfigurationName "SharedServicesNSG" -Validate'
        azurePowerShellVersion: 'LatestVersion'
    - task: AzurePowerShell@4
      displayName: "ARM Validation - DMZ NSG"
      inputs:
        azureSubscription: 'vdc2-hub'
        ScriptType: 'FilePath'
        ScriptPath: 'orchestration/OrchestrationService/ModuleConfigurationDeployment.ps1'
        ScriptArguments: '-ArchetypeDefinitionPath "archetypes/shared-services/archetypeDefinition.json" -ModuleConfigurationName "DMZNSG" -Validate'
        azurePowerShellVersion: 'LatestVersion'
  - job: RouteTables
    pool:
      name: 'vdc-self-hosted'
    steps:
    - task: PowerShell@2
      displayName: "Pester Tests for Module - Route Tables"
      inputs:
        targetType: 'inline'
        script: '# Write your powershell commands here.
          
          Invoke-Pester -Script "./modules/RouteTables/2.0/Tests";
          
          # Use the environment variables input below to pass secret variables to this script.'
        pwsh: true
    - task: AzurePowerShell@4
      displayName: "ARM Validation - Shared Services Route Table"
      inputs:
        azureSubscription: 'vdc2-hub'
        ScriptType: 'FilePath'
        ScriptPath: 'orchestration/OrchestrationService/ModuleConfigurationDeployment.ps1'
        ScriptArguments: '-ArchetypeDefinitionPath "archetypes/shared-services/archetypeDefinition.json" -ModuleConfigurationName "SharedServicesRouteTable" -Validate'
        azurePowerShellVersion: 'LatestVersion'
  - job: vNet
    pool:
      name: 'vdc-self-hosted'
    steps:
    - task: PowerShell@2
      displayName: "Pester Tests for Module - vNet"
      inputs:
        targetType: 'inline'
        script: '# Write your powershell commands here.
          
          Invoke-Pester -Script "./modules/vNet/2.0/Tests";
          
          # Use the environment variables input below to pass secret variables to this script.'
        pwsh: true
    - task: AzurePowerShell@4
      displayName: "ARM Validation - Virtual Network"
      inputs:
        azureSubscription: 'vdc2-hub'
        ScriptType: 'FilePath'
        ScriptPath: 'orchestration/OrchestrationService/ModuleConfigurationDeployment.ps1'
        ScriptArguments: '-ArchetypeDefinitionPath "archetypes/shared-services/archetypeDefinition.json" -ModuleConfigurationName "VirtualNetwork" -Validate'
        azurePowerShellVersion: 'LatestVersion'
  - job: VirtualNetworkGateway
    pool:
      name: 'vdc-self-hosted'
    steps:
    - task: PowerShell@2
      displayName: "Pester Tests for Module - Virtual Network Gateway"
      inputs:
        targetType: 'inline'
        script: '# Write your powershell commands here.
          
          Invoke-Pester -Script "./modules/VirtualNetworkGateway/2.0/Tests";
          
          # Use the environment variables input below to pass secret variables to this script.'
        pwsh: true
    - task: AzurePowerShell@4
      displayName: "ARM Validation - Virtual Network Gateway"
      inputs:
        azureSubscription: 'vdc2-hub'
        ScriptType: 'FilePath'
        ScriptPath: 'orchestration/OrchestrationService/ModuleConfigurationDeployment.ps1'
        ScriptArguments: '-ArchetypeDefinitionPath "archetypes/shared-services/archetypeDefinition.json" -ModuleConfigurationName "VirtualNetworkGateway" -Validate'
        azurePowerShellVersion: 'LatestVersion'
  - job: VirtualNetworkGatewayConnection
    pool:
      name: 'vdc-self-hosted'
    steps:
    - task: PowerShell@2
      displayName: "Pester Tests for Module - Virtual Network Gateway Connection"
      inputs:
        targetType: 'inline'
        script: '# Write your powershell commands here.
          
          Invoke-Pester -Script "./modules/VirtualNetworkGatewayConnection/2.0/Tests";
          
          # Use the environment variables input below to pass secret variables to this script.'
        pwsh: true
    - task: AzurePowerShell@4
      displayName: "ARM Validation - Local Virtual Network Gateway Connection"
      inputs:
        azureSubscription: 'vdc2-hub'
        ScriptType: 'FilePath'
        ScriptPath: 'orchestration/OrchestrationService/ModuleConfigurationDeployment.ps1'
        ScriptArguments: '-ArchetypeDefinitionPath "archetypes/shared-services/archetypeDefinition.json" -ModuleConfigurationName "LocalVirtualNetworkGatewayConnection" -Validate'
        azurePowerShellVersion: 'LatestVersion'
    - task: AzurePowerShell@4
      displayName: "ARM Validation - Remote Virtual Network Gateway Connection"
      inputs:
        azureSubscription: 'vdc2-hub'
        ScriptType: 'FilePath'
        ScriptPath: 'orchestration/OrchestrationService/ModuleConfigurationDeployment.ps1'
        ScriptArguments: '-ArchetypeDefinitionPath "archetypes/shared-services/archetypeDefinition.json" -ModuleConfigurationName "RemoteVirtualNetworkGatewayConnection" -Validate'
        azurePowerShellVersion: 'LatestVersion'
  - job: AzureFirewall
    pool:
      name: 'vdc-self-hosted'
    steps:
    - task: PowerShell@2
      displayName: "Pester Tests for Module - Azure Firewall"
      inputs:
        targetType: 'inline'
        script: '# Write your powershell commands here.
          
          Invoke-Pester -Script "./modules/AzureFirewall/2.0/Tests";
          
          # Use the environment variables input below to pass secret variables to this script.'
        pwsh: true
    - task: AzurePowerShell@4
      displayName: "ARM Validation - Azure Firewall"
      inputs:
        azureSubscription: 'vdc2-hub'
        ScriptType: 'FilePath'
        ScriptPath: 'orchestration/OrchestrationService/ModuleConfigurationDeployment.ps1'
        ScriptArguments: '-ArchetypeDefinitionPath "archetypes/shared-services/archetypeDefinition.json" -ModuleConfigurationName "AzureFirewall" -Validate'
        azurePowerShellVersion: 'LatestVersion'
  - job: KeyVault
    pool:
      name: 'vdc-self-hosted'
    steps:
    - task: PowerShell@2
      displayName: "Pester Tests for Module - Key Vault"
      inputs:
        targetType: 'inline'
        script: '# Write your powershell commands here.
          
          Invoke-Pester -Script "./modules/KeyVault/2.0/Tests";
          
          # Use the environment variables input below to pass secret variables to this script.'
        pwsh: true
    - task: AzurePowerShell@4
      displayName: "ARM Validation - Key Vault"
      inputs:
        azureSubscription: 'vdc2-hub'
        ScriptType: 'FilePath'
        ScriptPath: 'orchestration/OrchestrationService/ModuleConfigurationDeployment.ps1'
        ScriptArguments: '-ArchetypeDefinitionPath "archetypes/shared-services/archetypeDefinition.json" -ModuleConfigurationName "KeyVault" -Validate'
        azurePowerShellVersion: 'LatestVersion'
  - job: Jumpbox
    pool:
      name: 'vdc-self-hosted'
    steps:
    - task: PowerShell@2
      displayName: "Pester Tests for Module - Jumpbox"
      inputs:
        targetType: 'inline'
        script: '# Write your powershell commands here.
          
          Invoke-Pester -Script "./modules/Jumpbox/2.0/Tests";
          
          # Use the environment variables input below to pass secret variables to this script.'
        pwsh: true
    - task: AzurePowerShell@4
      displayName: "ARM Validation - Jumpbox"
      inputs:
        azureSubscription: 'vdc2-hub'
        ScriptType: 'FilePath'
        ScriptPath: 'orchestration/OrchestrationService/ModuleConfigurationDeployment.ps1'
        ScriptArguments: '-ArchetypeDefinitionPath "archetypes/shared-services/archetypeDefinition.json" -ModuleConfigurationName "Jumpbox" -Validate'
        azurePowerShellVersion: 'LatestVersion'
  - job: ADDS
    pool:
      name: 'vdc-self-hosted'
    steps:
    - task: PowerShell@2
      displayName: "Pester Tests for Module - ADDS"
      inputs:
        targetType: 'inline'
        script: '# Write your powershell commands here.
          
          Invoke-Pester -Script "./modules/ADDS/2.0/Tests";
          
          # Use the environment variables input below to pass secret variables to this script.'
        pwsh: true
    - task: AzurePowerShell@4
      displayName: "ARM Validation - ADDS"
      inputs:
        azureSubscription: 'vdc2-hub'
        ScriptType: 'FilePath'
        ScriptPath: 'orchestration/OrchestrationService/ModuleConfigurationDeployment.ps1'
        ScriptArguments: '-ArchetypeDefinitionPath "archetypes/shared-services/archetypeDefinition.json" -ModuleConfigurationName "ADDS" -Validate'
        azurePowerShellVersion: 'LatestVersion'
- stage: Deploy
  jobs:
  - job: Deployment
    pool:
      name: 'vdc-self-hosted'
    steps:
    - task: AzurePowerShell@4
      displayName: "Diagnostic Storage Account" 
      inputs:
        azureSubscription: 'vdc2-hub'
        ScriptType: 'FilePath'
        ScriptPath: 'orchestration/OrchestrationService/ModuleConfigurationDeployment.ps1'
        ScriptArguments: '-ArchetypeDefinitionPath "archetypes/shared-services/archetypeDefinition.json" -ModuleConfigurationName "DiagnosticStorageAccount"'
        azurePowerShellVersion: 'LatestVersion'
    - task: AzurePowerShell@4
      displayName: "Log Analytics"
      inputs:
        azureSubscription: 'vdc2-hub'
        ScriptType: 'FilePath'
        ScriptPath: 'orchestration/OrchestrationService/ModuleConfigurationDeployment.ps1'
        ScriptArguments: '-ArchetypeDefinitionPath "archetypes/shared-services/archetypeDefinition.json" -ModuleConfigurationName "LogAnalytics"'
        azurePowerShellVersion: 'LatestVersion'
    - task: AzurePowerShell@4
      displayName: "Automation Accounts"
      inputs:
        azureSubscription: 'vdc2-hub'
        ScriptType: 'FilePath'
        ScriptPath: 'orchestration/OrchestrationService/ModuleConfigurationDeployment.ps1'
        ScriptArguments: '-ArchetypeDefinitionPath "archetypes/shared-services/archetypeDefinition.json" -ModuleConfigurationName "AutomationAccounts"'
        azurePowerShellVersion: 'LatestVersion'
    - task: AzurePowerShell@4
      displayName: "Link Log Analytics With Automation Account"
      inputs:
        azureSubscription: 'vdc2-hub'
        ScriptType: 'FilePath'
        ScriptPath: 'orchestration/OrchestrationService/ModuleConfigurationDeployment.ps1'
        ScriptArguments: '-ArchetypeDefinitionPath "archetypes/shared-services/archetypeDefinition.json" -ModuleConfigurationName "LinkLogAnalyticsWithAutomationAccount"'
        azurePowerShellVersion: 'LatestVersion'
    - task: AzurePowerShell@4
      displayName: "JumpboxASG"
      inputs: 
        azureSubscription: 'vdc2-hub'
        ScriptType: 'FilePath'
        ScriptPath: 'orchestration/OrchestrationService/ModuleConfigurationDeployment.ps1'
        ScriptArguments: '-ArchetypeDefinitionPath "archetypes/shared-services/archetypeDefinition.json" -ModuleConfigurationName "JumpboxASG"'
        azurePowerShellVersion: 'LatestVersion'
    - task: AzurePowerShell@4
      displayName: "Domain Controller ASG"
      inputs:
        azureSubscription: 'vdc2-hub'
        ScriptType: 'FilePath'
        ScriptPath: 'orchestration/OrchestrationService/ModuleConfigurationDeployment.ps1'
        ScriptArguments: '-ArchetypeDefinitionPath "archetypes/shared-services/archetypeDefinition.json" -ModuleConfigurationName "DomainControllerASG"'
        azurePowerShellVersion: 'LatestVersion'
    - task: AzurePowerShell@4
      displayName: "Shared Services NSG"
      inputs:
        azureSubscription: 'vdc2-hub'
        ScriptType: 'FilePath'
        ScriptPath: 'orchestration/OrchestrationService/ModuleConfigurationDeployment.ps1'
        ScriptArguments: '-ArchetypeDefinitionPath "archetypes/shared-services/archetypeDefinition.json" -ModuleConfigurationName "SharedServicesNSG"'
        azurePowerShellVersion: 'LatestVersion'
    - task: AzurePowerShell@4
      displayName: "DMZ NSG"
      inputs:
        azureSubscription: 'vdc2-hub'
        ScriptType: 'FilePath'
        ScriptPath: 'orchestration/OrchestrationService/ModuleConfigurationDeployment.ps1'
        ScriptArguments: '-ArchetypeDefinitionPath "archetypes/shared-services/archetypeDefinition.json" -ModuleConfigurationName "DMZNSG"'
        azurePowerShellVersion: 'LatestVersion'
    - task: AzurePowerShell@4
      displayName: "Shared Services Route Table"
      inputs:
        azureSubscription: 'vdc2-hub'
        ScriptType: 'FilePath'
        ScriptPath: 'orchestration/OrchestrationService/ModuleConfigurationDeployment.ps1'
        ScriptArguments: '-ArchetypeDefinitionPath "archetypes/shared-services/archetypeDefinition.json" -ModuleConfigurationName "SharedServicesRouteTable"'
        azurePowerShellVersion: 'LatestVersion'
    - task: AzurePowerShell@4
      displayName: "Virtual Network"
      inputs:
        azureSubscription: 'vdc2-hub'
        ScriptType: 'FilePath'
        ScriptPath: 'orchestration/OrchestrationService/ModuleConfigurationDeployment.ps1'
        ScriptArguments: '-ArchetypeDefinitionPath "archetypes/shared-services/archetypeDefinition.json" -ModuleConfigurationName "VirtualNetwork"'
        azurePowerShellVersion: 'LatestVersion'
    - task: AzurePowerShell@4
      displayName: "Enable Service Endpoint On Diagnostic Storage Account"
      inputs:
        azureSubscription: 'vdc2-hub'
        ScriptType: 'FilePath'
        ScriptPath: 'orchestration/OrchestrationService/ModuleConfigurationDeployment.ps1'
        ScriptArguments: '-ArchetypeDefinitionPath "archetypes/shared-services/archetypeDefinition.json" -ModuleConfigurationName "EnableServiceEndpointOnDiagnosticStorageAccount"'
        azurePowerShellVersion: 'LatestVersion'
    - task: AzurePowerShell@4
      displayName: "Virtual Network Gateway"
      inputs:
        azureSubscription: 'vdc2-hub'
        ScriptType: 'FilePath'
        ScriptPath: 'orchestration/OrchestrationService/ModuleConfigurationDeployment.ps1'
        ScriptArguments: '-ArchetypeDefinitionPath "archetypes/shared-services/archetypeDefinition.json" -ModuleConfigurationName "VirtualNetworkGateway"'
        azurePowerShellVersion: 'LatestVersion'
    - task: AzurePowerShell@4
      displayName: "Local Virtual Network Gateway Connection"
      inputs:
        azureSubscription: 'vdc2-hub'
        ScriptType: 'FilePath'
        ScriptPath: 'orchestration/OrchestrationService/ModuleConfigurationDeployment.ps1'
        ScriptArguments: '-ArchetypeDefinitionPath "archetypes/shared-services/archetypeDefinition.json" -ModuleConfigurationName "LocalVirtualNetworkGatewayConnection"'
        azurePowerShellVersion: 'LatestVersion'
    - task: AzurePowerShell@4
      displayName: "Remote Virtual Network Gateway Connection"
      inputs:
        azureSubscription: 'vdc2-hub'
        ScriptType: 'FilePath'
        ScriptPath: 'orchestration/OrchestrationService/ModuleConfigurationDeployment.ps1'
        ScriptArguments: '-ArchetypeDefinitionPath "archetypes/shared-services/archetypeDefinition.json" -ModuleConfigurationName "RemoteVirtualNetworkGatewayConnection"'
        azurePowerShellVersion: 'LatestVersion'
    - task: AzurePowerShell@4
      displayName: "Azure Firewall"
      inputs:
        azureSubscription: 'vdc2-hub'
        ScriptType: 'FilePath'
        ScriptPath: 'orchestration/OrchestrationService/ModuleConfigurationDeployment.ps1'
        ScriptArguments: '-ArchetypeDefinitionPath "archetypes/shared-services/archetypeDefinition.json" -ModuleConfigurationName "AzureFirewall"'
        azurePowerShellVersion: 'LatestVersion'
    - task: AzurePowerShell@4
      displayName: "Key Vault"
      inputs:
        azureSubscription: 'vdc2-hub'
        ScriptType: 'FilePath'
        ScriptPath: 'orchestration/OrchestrationService/ModuleConfigurationDeployment.ps1'
        ScriptArguments: '-ArchetypeDefinitionPath "archetypes/shared-services/archetypeDefinition.json" -ModuleConfigurationName "KeyVault"'
        azurePowerShellVersion: 'LatestVersion'
    - task: AzurePowerShell@4
      displayName: "Artifacts Storage Account"
      inputs:
        azureSubscription: 'vdc2-hub'
        ScriptType: 'FilePath'
        ScriptPath: 'orchestration/OrchestrationService/ModuleConfigurationDeployment.ps1'
        ScriptArguments: '-ArchetypeDefinitionPath "archetypes/shared-services/archetypeDefinition.json" -ModuleConfigurationName "ArtifactsStorageAccount"'
        azurePowerShellVersion: 'LatestVersion'
    - task: turtlesystems-azure-storage@1
      displayName: "Upload Scripts to Artifacts Storage"
      inputs:
        azureSubscription: 'vdc2-hub'
        action: 'create'
        resourceGroupName: $(vdc_cache_ArtifactsStorageAccount_StorageAccountResourceGroup)
        location: $(vdc_cache_ArtifactsStorageAccount_StorageAccountRegion)
        storageAccountName: $(vdc_cache_ArtifactsStorageAccount_StorageAccountName)
        containerName: 'scripts'
        uploadDirectory: 'scripts'
        sasTokenStartTime: '1m'
        sasTokenExpiryTime: '1h'
    - task: AzurePowerShell@4
      displayName: "Jumpbox"
      inputs:
        azureSubscription: 'vdc2-hub'
        ScriptType: 'FilePath'
        ScriptPath: 'orchestration/OrchestrationService/ModuleConfigurationDeployment.ps1'
        ScriptArguments: '-ArchetypeDefinitionPath "archetypes/shared-services/archetypeDefinition.json" -ModuleConfigurationName "Jumpbox"'
        azurePowerShellVersion: 'LatestVersion'
    - task: AzurePowerShell@4
      displayName: "ADDS"
      inputs:
        azureSubscription: 'vdc2-hub'
        ScriptType: 'FilePath'
        ScriptPath: 'orchestration/OrchestrationService/ModuleConfigurationDeployment.ps1'
        ScriptArguments: '-ArchetypeDefinitionPath "archetypes/shared-services/archetypeDefinition.json" -ModuleConfigurationName "ADDS"'
        azurePowerShellVersion: 'LatestVersion'