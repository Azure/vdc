# VDC Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
# Set variables once
variables:
- group: VDC_SECRETS
stages:
- stage: Deploy
  jobs:
  - job: Deployment
    pool:
      name: 'vdc-self-hosted'
    steps:
    - task: AzurePowerShell@4
      displayName: "Artifacts Storage Account"
      inputs:
        azureSubscription: 'vdc2-hub'
        ScriptType: 'FilePath'
        ScriptPath: 'orchestration/OrchestrationService/ModuleConfigurationDeployment.ps1'
        ScriptArguments: '-ArchetypeDefinitionPath "archetypes/shared-services/archetypeDefinition.json" -ModuleConfigurationName "ArtifactsStorageAccount" -Debug'
        azurePowerShellVersion: 'LatestVersion'
      env:
        VDC_SUBSCRIPTIONS: $(VDC_SUBSCRIPTIONS)
        VDC_SUBSCRIPTIONS:VDC_TOOLKIT_SUBSCRIPTION: $(VDC_TOOLKIT_SUBSCRIPTION)
        DEPLOYMENT_USER_ID: $(DEPLOYMENT_USER_ID)
        ADMIN_USER_PWD: $(ADMIN_USER_PWD)
        DOMAIN_ADMIN_USER_PWD: $(DOMAIN_ADMIN_USER_PWD)
    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: '# Write your powershell commands here.
          
          Get-ChildItem Env:
          
          # Use the environment variables input below to pass secret variables to this script.'