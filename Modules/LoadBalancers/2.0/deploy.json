{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "loadBalancerName": {
            "type": "string",
            "metadata": {
                "description": "Required. The Proximity Placement Groups Name"
            }
        },
        "loadBalancingRules": {
            "type": "array",
            "minLength": 1,
            "metadata": {
                "description": "Required. Array of objects containing all load balancing rules"
            }
        },
        "probes": {
            "type": "array",
            "minLength": 1,
            "metadata": {
                "description": "Required. Array of objects containing all probes, these are references in the load balancing rules"
            }
        },
        "vNetId": {
            "type": "string",
            "metadata": {
                "description": "Required. Shared services Virtual Network resource identifier"
            }
        },
        "subnetName": {
            "type": "string",
            "metadata": {
                "description": "Required. Name of Shared Services Subnet, this name is used to get the SubnetId"
            }
        },
        "loadBalancerIPAddress": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Optional. IP address statically assigned to the Load Balancer. If left empty, the Load Balancer will use the next available IP (dynamic assignment)"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Optional. Location for all resources."
            }
        }
    },
    "variables": {
        "subnetId": "[concat(parameters('vNetId'), '/subnets/', parameters('subnetName'))]",
        "frontendIPConfiguration": "[concat(parameters('loadBalancerName'), '-fe')]",
        "loadBalancerBackendPoolName": "[concat(parameters('loadBalancerName'), '-bp')]",
        "loadBalancingRules": {
            "copy": [
                {
                    "name": "loadBalancingRules",
                    "count": "[length(parameters('loadBalancingRules'))]",
                    "input": {
                        "name": "[parameters('loadBalancingRules')[copyIndex('loadBalancingRules')].name]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', parameters('loadBalancerName'), variables('frontendIPConfiguration'))]"
                            },
                            "backendAddressPool": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancerName'), variables('loadBalancerBackendPoolName'))]"
                            },
                            "frontendPort": "[parameters('loadBalancingRules')[copyIndex('loadBalancingRules')].properties.frontendPort]",
                            "backendPort": "[parameters('loadBalancingRules')[copyIndex('loadBalancingRules')].properties.backendPort]",
                            "enableFloatingIP": "[parameters('loadBalancingRules')[copyIndex('loadBalancingRules')].properties.enableFloatingIP]",
                            "idleTimeoutInMinutes": "[parameters('loadBalancingRules')[copyIndex('loadBalancingRules')].properties.idleTimeoutInMinutes]",
                            "protocol": "[parameters('loadBalancingRules')[copyIndex('loadBalancingRules')].properties.protocol]",
                            "enableTcpReset": "[parameters('loadBalancingRules')[copyIndex('loadBalancingRules')].properties.enableTcpReset]",
                            "loadDistribution": "[parameters('loadBalancingRules')[copyIndex('loadBalancingRules')].properties.loadDistribution]",
                            "disableOutboundSnat": "[parameters('loadBalancingRules')[copyIndex('loadBalancingRules')].properties.disableOutboundSnat]",
                            "probe": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/probes', parameters('loadBalancerName'), parameters('loadBalancingRules')[copyIndex('loadBalancingRules')].properties.probeName)]"
                            }
                        }
                    }
                }
            ]
        },
        "probes": {
            "copy": [
                {
                    "name": "probes",
                    "count": "[length(parameters('probes'))]",
                    "input": {
                        "name": "[parameters('probes')[copyIndex('probes')].name]",
                        "properties": {
                            "protocol": "[parameters('probes')[copyIndex('probes')].properties.protocol]",
                            "port": "[parameters('probes')[copyIndex('probes')].properties.port]",
                            "requestPath": "[parameters('probes')[copyIndex('probes')].properties.requestPath]",
                            "intervalInSeconds": "[parameters('probes')[copyIndex('probes')].properties.intervalInSeconds]",
                            "numberOfProbes": "[parameters('probes')[copyIndex('probes')].properties.numberOfProbes]"
                        }
                    }
                }
            ]
        }
    },
    "resources": [
        {
            "name": "[parameters('loadBalancerName')]",
            "type": "Microsoft.Network/loadBalancers",
            "apiVersion": "2019-04-01",
            "location": "[parameters('location')]",
            "tags": {},
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "[variables('frontendIPConfiguration')]",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetId')]"
                            },
                            "privateIPAddress": "[if(empty(parameters('loadBalancerIPAddress')), json('null'), parameters('loadBalancerIPAddress'))]",
                            "privateIPAllocationMethod": "[if(empty(parameters('loadBalancerIPAddress')), 'Dynamic', 'Static')]"
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[variables('loadBalancerBackendPoolName')]"
                    }
                ],
                "loadBalancingRules": "[variables('loadBalancingRules').loadBalancingRules]",
                "probes": "[variables('probes').probes]"
            },
            "resources": []
        }
    ],
    "outputs": {
        "loadBalancerName": {
            "type": "string",
            "value": "[parameters('loadBalancerName')]"
        },
        "loadBalancerResourceId": {
            "type": "string",
            "value": "[resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName'))]"
        },
        "loadBalancerResourceGroup": {
            "type": "string",
            "value": "[resourceGroup().name]"
        },
        "loadBalancerResourceBackendPoolId": {
            "type": "string",
            "value": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/backendAddressPools/', variables('loadBalancerBackendPoolName'))]"
        }
    }
}