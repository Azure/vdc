{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "virtualMachineName": {
            "type": "string",
            "minLength": 1,
            "maxLength": 13,
            "metadata": {
                "description": "Required. Name for the ADDS VMs"
            }
        },
        "virtualMachineCount": {
            "type": "int",
            "defaultValue": 2,
            "metadata": {
                "description": "Optional. Number of VMs to create"
            }
        },
        "virtualMachineSize": {
            "type": "string",
            "defaultValue": "Standard_DS2_v2",
            "metadata": {
                "description": "Optional. Size of the ADDS VMs"
            }
        },
        "virtualMachineOSImage": {
            "type": "object",
            "metadata": {
                "description": "Required. OS image used for the ADDS VMs"
            }
        },
        "artifactsStorageAccountSasKey": {
            "type": "securestring",
            "metadata": {
                "description": "Required. Shared Access Signature Key used to download custom scripts"
            }
        },
        "artifactsStorageAccountName": {
            "type": "securestring",
            "metadata": {
                "description": "Required. Default storage account name. Storage account that contains output parameters and common scripts"
            }
        },
        "artifactsStorageAccountKey": {
            "type": "securestring",
            "metadata": {
                "description": "Required. Default storage account Key. Storage account that contains output parameters and common scripts"
            }
        },
        "workspaceId": {
            "type": "string",
            "metadata": {
                "description": "Required. WorkspaceId or CustomerId value of OMS. This value is referenced in OMS VM Extension"
            }
        },
        "logAnalyticsWorkspacePrimarySharedKey": {
            "type": "securestring",
            "metadata": {
                "description": "Required. WorkspaceKey value of OMS. This value is referenced in OMS VM Extension"
            }
        },
        "diagnosticsStorageAccountName": {
            "type": "string",
            "metadata": {
                "description": "Required. Storage account used to store diagnostic information"
            }
        },
        "diagnosticsStorageAccountSasToken": {
            "type": "securestring",
            "metadata": {
                "description": "Required. Diagnostic Storage Account SAS token"
            }
        },
        "addsAddressStart": {
            "type": "string",
            "metadata": {
                "description": "Required. IP address used as initial Active Directory Domain Services IP"
            }
        },
        "keyVaultId": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "Optional. AKV Resource Id"
            }
        },
        "keyVaultURL": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "Optional. AKV URL"
            }
        },
        "addsKeyEncryptionURL": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "Optional. Active Directory Domain Services AKV encryption key"
            }
        },
        "vNetId": {
            "type": "string",
            "metadata": {
                "description": "Required. Shared services Virtual Network resource identifier"
            }
        },
        "domainControllerAsgId": {
            "type": "string",
            "metadata": {
                "description": "Required. ASG associated to Domain Controllers"
            }
        },
        "subnetName": {
            "type": "string",
            "metadata": {
                "description": "Required. Name of Shared Services Subnet, this name is used to get the SubnetId"
            }
        },
        "adminUsername": {
            "type": "securestring",
            "metadata": {
                "description": "Required. The Username used to establish ADDS VMs"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Required. The password given to the admin user"
            }
        },
        "domainName": {
            "type": "string",
            "metadata": {
                "description": "Required. AD domain name"
            }
        },
        "primaryDCIP": {
            "type": "string",
            "metadata": {
                "description": "Required. On-premises domain IP"
            }
        },
        "ADSitename": {
            "type": "string",
            "metadata": {
                "description": "Required. On-premises Active Directory site name"
            }
        },
        "domaincontrollerDriveLetter": {
            "type": "string",
            "metadata": {
                "description": "Required. Drive letter to install ADDS"
            }
        },
        "domainAdminUsername": {
            "type": "securestring",
            "metadata": {
                "description": "Domain user that has privileges to join a VM into a Domain"
            }
        },
        "domainAdminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Required. Domain user that has privileges to join a VM into a Domain"
            }
        }
    },
    "variables": {
        "enableDiskEncryption": "[not(or(or(empty(parameters('keyVaultURL')), empty(parameters('keyVaultId'))), empty(parameters('addsKeyEncryptionURL'))))]",
        "uniqueString": "[uniqueString(subscription().id, resourceGroup().id, concat(parameters('virtualMachineName'), '-adds'))]",
        "configurationUrlSasToken": "[concat('?', parameters('artifactsStorageAccountSasKey'))]",
        "subnetName": "[parameters('subnetName')]",
        "availabilitySetName": "[concat(parameters('virtualMachineName'), '-as')]",
        "subnetId": "[concat(parameters('vNetId'), '/subnets/', variables('subnetName'))]",
        "antimalwareExtensionName": "IaaSAntimalware",
        "diagnosticsExtensionName": "IaaSDiagnostics",
        "networkWatcherExtensionName": "NetworkWatcher",
        "MMAExtensionName": "OMSExtension",
        "azureDiskEncryptionExtensionName": "AzureDiskEncryption",
        "customAddsExtensionName": "DSCSetupADDS",
        "encryptionOperation": "EnableEncryption",
        "keyEncryptionAlgorithm": "RSA-OAEP",
        "tagPatching": "3rdSat7pm",
        "windowsPasswordPoliciesExtensionName": "PwdPolicies",
        "windowsDependencyExtensionName": "DependencyAgent",
        "windowsDependencyExtensionPublisher": "Microsoft.Azure.Monitoring.DependencyAgent",
        "windowsDependencyExtensionType": "DependencyAgentWindows",
        "windowsDependencyExtensionHandlerVersion": "9.6",
        "maxPasswordAge": 70,
        "minPasswordAge": 1,
        "minPasswordLength": 14,
        "pwdHistoryCount": 24,
        "pwdMinLengthConfigName": "MinimumPasswordLength",
        "pwdMinAgeConfigName": "MinimumPasswordAge",
        "pwdNotLast24ConfigMName": "EnforcePasswordHistory",
        "pwdWithoutReversibleEncryptionConfigName": "StorePasswordsUsingReversibleEncryption",
        "pwdMaxAgeConfigName": "MaximumPasswordAge",
        "pwdComplexityConfigName": "PasswordMustMeetComplexityRequirements",
        "webServerWithTls1.1ConfigName": "AuditSecureProtocol",
        "dnsServers": {
            "copy": [
                {
                    "name": "dnsServers",
                    "count": "[parameters('virtualMachineCount')]",
                    "input": "[vdc.nextIP(parameters('addsAddressStart'), copyIndex('dnsServers'))]"
                }
            ]
        }
    },
    "resources": [
        {
            "type": "Microsoft.Compute/availabilitySets",
            "apiVersion": "2016-04-30-preview",
            "location": "[resourceGroup().location]",
            "name": "[variables('availabilitySetName')]",
            "tags": {
                "layer": "Identity"
            },
            "properties": {
                "platformFaultDomainCount": 2,
                "platformUpdateDomainCount": 5,
                "managed": true
            },
            "sku": {
                "name": "Aligned"
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2017-09-01",
            "location": "[resourceGroup().location]",
            "name": "[concat(parameters('virtualMachineName'), copyindex(1), '-nic')]",
            "copy": {
                "name": "nicLoop",
                "count": "[parameters('virtualMachineCount')]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[vdc.nextIP(parameters('addsAddressStart'), copyIndex())]",
                            "subnet": {
                                "id": "[variables('subnetId')]"
                            },
                            "applicationSecurityGroups": [
                                {
                                    "id": "[parameters('domainControllerAsgId')]"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2017-03-30",
            "location": "[resourceGroup().location]",
            "name": "[concat(parameters('virtualMachineName'), copyindex(1))]",
            "tags": {
                "layer": "Identity",
                "computerName": "[concat(parameters('virtualMachineName'), copyindex(1))]",
                "UpdateManagement": "[variables('tagPatching')]"
            },
            "copy": {
                "name": "vmLoop",
                "count": "[parameters('virtualMachineCount')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('virtualMachineName'), copyindex(1), '-nic'))]"
            ],
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]"
                },
                "osProfile": {
                    "computerName": "[concat(parameters('virtualMachineName'), copyindex(1))]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[parameters('virtualMachineOSImage').publisher]",
                        "offer": "[parameters('virtualMachineOSImage').offer]",
                        "sku": "[parameters('virtualMachineOSImage').sku]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[replace(toLower(substring(concat(parameters('virtualMachineName'), copyindex(1), '-osdisk', '-', replace(concat(variables('uniqueString'), variables('uniqueString')), '-', '')), 0, 30)), '-', '')]",
                        "osType": "Windows",
                        "createOption": "FromImage",
                        "diskSizeGB": 256
                    },
                    "dataDisks": [
                        {
                            "lun": 0,
                            "name": "[replace(toLower(substring(concat(parameters('virtualMachineName'), copyindex(1), '-dsk1', '-', replace(concat(variables('uniqueString'), variables('uniqueString')), '-', '')), 0, 30)), '-', '')]",
                            "diskSizeGB": 127,
                            "createOption": "Empty",
                            "caching": "None"
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('virtualMachineName'), copyindex(1), '-nic'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat('https://', parameters('diagnosticsStorageAccountName'), '.blob.core.windows.net/')]"
                    }
                }
            },
            "resources": [
                {
                    "type": "extensions",
                    "name": "[variables('MMAExtensionName')]",
                    "apiVersion": "2015-06-15",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', concat(parameters('virtualMachineName'), copyindex(1)))]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.EnterpriseCloud.Monitoring",
                        "type": "MicrosoftMonitoringAgent",
                        "typeHandlerVersion": "1.0",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "workspaceId": "[parameters('workspaceId')]"
                        },
                        "protectedSettings": {
                            "workspaceKey": "[parameters('logAnalyticsWorkspacePrimarySharedKey')]"
                        }
                    }
                },
                {
                    "type": "extensions",
                    "name": "[variables('customAddsExtensionName')]",
                    "apiVersion": "2017-03-30",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', concat(parameters('virtualMachineName'), copyindex(1)))]",
                        "[variables('MMAExtensionName')]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Powershell",
                        "type": "DSC",
                        "typeHandlerVersion": "2.9",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "configuration": {
                                "url": "[concat('https://', parameters('artifactsStorageAccountName'), '.blob.core.windows.net/scripts/Windows/formatDisk.zip')]",
                                "script": "formatDisk.ps1",
                                "function": "FormatDisk"
                            },
                            "configurationArguments": {
                                "DriveLetter": "[parameters('domaincontrollerDriveLetter')]",
                                "DiskId": 2
                            }
                        },
                        "protectedSettings": {
                            "configurationUrlSasToken": "[variables('configurationUrlSasToken')]"
                        }
                    }
                },
                {
                    "type": "extensions",
                    "name": "[variables('antimalwareExtensionName')]",
                    "apiVersion": "2017-03-30",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', concat(parameters('virtualMachineName'), copyindex(1)))]",
                        "[resourceId('Microsoft.Compute/virtualMachines/extensions', concat(parameters('virtualMachineName'), copyindex(1)), variables('customAddsExtensionName'))]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Azure.Security",
                        "type": "IaaSAntimalware",
                        "typeHandlerVersion": "1.5",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "AntimalwareEnabled": true,
                            "RealtimeProtectionEnabled": "true",
                            "ScheduledScanSettings": {
                                "isEnabled": "true",
                                "scanType": "Quick",
                                "day": "7",
                                "time": "120"
                            }
                        }
                    }
                },
                {
                    "type": "extensions",
                    "name": "[variables('diagnosticsExtensionName')]",
                    "location": "[resourceGroup().location]",
                    "apiVersion": "2017-03-30",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', concat(parameters('virtualMachineName'), copyindex(1)))]",
                        "[resourceId('Microsoft.Compute/virtualMachines/extensions', concat(parameters('virtualMachineName'), copyindex(1)), variables('customAddsExtensionName'))]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Azure.Diagnostics",
                        "type": "IaaSDiagnostics",
                        "typeHandlerVersion": "1.5",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "StorageAccount": "[parameters('diagnosticsStorageAccountName')]",
                            "StorageType": "Blob",
                            "WadCfg": {
                                "DiagnosticMonitorConfiguration": {
                                    "overallQuotaInMB": 5120,
                                    "Metrics": {
                                        "resourceId": "[resourceId('Microsoft.Compute/virtualMachines', concat(parameters('virtualMachineName'), copyindex(1)))]",
                                        "MetricAggregation": [
                                            {
                                                "scheduledTransferPeriod": "PT1H"
                                            },
                                            {
                                                "scheduledTransferPeriod": "PT1M"
                                            }
                                        ]
                                    },
                                    "DiagnosticInfrastructureLogs": {
                                        "scheduledTransferLogLevelFilter": "Error"
                                    },
                                    "PerformanceCounters": {
                                        "scheduledTransferPeriod": "PT1M",
                                        "PerformanceCounterConfiguration": [
                                            {
                                                "counterSpecifier": "\\Processor Information(_Total)\\% Processor Time",
                                                "unit": "Percent",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\Processor Information(_Total)\\% Privileged Time",
                                                "unit": "Percent",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\Processor Information(_Total)\\% User Time",
                                                "unit": "Percent",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\Processor Information(_Total)\\Processor Frequency",
                                                "unit": "Count",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\System\\Processes",
                                                "unit": "Count",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\Process(_Total)\\Thread Count",
                                                "unit": "Count",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\Process(_Total)\\Handle Count",
                                                "unit": "Count",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\System\\System Up Time",
                                                "unit": "Count",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\System\\Context Switches/sec",
                                                "unit": "CountPerSecond",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\System\\Processor Queue Length",
                                                "unit": "Count",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\Memory\\% Committed Bytes In Use",
                                                "unit": "Percent",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\Memory\\Available Bytes",
                                                "unit": "Bytes",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\Memory\\Committed Bytes",
                                                "unit": "Bytes",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\Memory\\Cache Bytes",
                                                "unit": "Bytes",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\Memory\\Pool Paged Bytes",
                                                "unit": "Bytes",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\Memory\\Pool Nonpaged Bytes",
                                                "unit": "Bytes",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\Memory\\Pages/sec",
                                                "unit": "CountPerSecond",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\Memory\\Page Faults/sec",
                                                "unit": "CountPerSecond",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\Process(_Total)\\Working Set",
                                                "unit": "Count",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\Process(_Total)\\Working Set - Private",
                                                "unit": "Count",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\LogicalDisk(_Total)\\% Disk Time",
                                                "unit": "Percent",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\LogicalDisk(_Total)\\% Disk Read Time",
                                                "unit": "Percent",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\LogicalDisk(_Total)\\% Disk Write Time",
                                                "unit": "Percent",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\LogicalDisk(_Total)\\% Idle Time",
                                                "unit": "Percent",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\LogicalDisk(_Total)\\Disk Bytes/sec",
                                                "unit": "BytesPerSecond",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\LogicalDisk(_Total)\\Disk Read Bytes/sec",
                                                "unit": "BytesPerSecond",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\LogicalDisk(_Total)\\Disk Write Bytes/sec",
                                                "unit": "BytesPerSecond",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\LogicalDisk(_Total)\\Disk Transfers/sec",
                                                "unit": "BytesPerSecond",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\LogicalDisk(_Total)\\Disk Reads/sec",
                                                "unit": "BytesPerSecond",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\LogicalDisk(_Total)\\Disk Writes/sec",
                                                "unit": "BytesPerSecond",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\LogicalDisk(_Total)\\Avg. Disk sec/Transfer",
                                                "unit": "Count",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\LogicalDisk(_Total)\\Avg. Disk sec/Read",
                                                "unit": "Count",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\LogicalDisk(_Total)\\Avg. Disk sec/Write",
                                                "unit": "Count",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\LogicalDisk(_Total)\\Avg. Disk Queue Length",
                                                "unit": "Count",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\LogicalDisk(_Total)\\Avg. Disk Read Queue Length",
                                                "unit": "Count",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\LogicalDisk(_Total)\\Avg. Disk Write Queue Length",
                                                "unit": "Count",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\LogicalDisk(_Total)\\% Free Space",
                                                "unit": "Percent",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\LogicalDisk(_Total)\\Free Megabytes",
                                                "unit": "Count",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\Network Interface(*)\\Bytes Total/sec",
                                                "unit": "BytesPerSecond",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\Network Interface(*)\\Bytes Sent/sec",
                                                "unit": "BytesPerSecond",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\Network Interface(*)\\Bytes Received/sec",
                                                "unit": "BytesPerSecond",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\Network Interface(*)\\Packets/sec",
                                                "unit": "BytesPerSecond",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\Network Interface(*)\\Packets Sent/sec",
                                                "unit": "BytesPerSecond",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\Network Interface(*)\\Packets Received/sec",
                                                "unit": "BytesPerSecond",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\Network Interface(*)\\Packets Outbound Errors",
                                                "unit": "Count",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\Network Interface(*)\\Packets Received Errors",
                                                "unit": "Count",
                                                "sampleRate": "PT60S"
                                            }
                                        ]
                                    },
                                    "WindowsEventLog": {
                                        "scheduledTransferPeriod": "PT1M",
                                        "DataSource": [
                                            {
                                                "name": "Application!*[System[(Level = 1 or Level = 2 or Level = 3)]]"
                                            },
                                            {
                                                "name": "Security!*[System[band(Keywords,4503599627370496)]]"
                                            },
                                            {
                                                "name": "System!*[System[(Level = 1 or Level = 2 or Level = 3)]]"
                                            }
                                        ]
                                    }
                                }
                            }
                        },
                        "protectedSettings": {
                            "storageAccountName": "[parameters('diagnosticsStorageAccountName')]",
                            "storageAccountSasToken": "[parameters('diagnosticsStorageAccountSasToken')]",
                            "storageAccountEndPoint": "https://core.windows.net"
                        }
                    }
                },
                {
                    "type": "extensions",
                    "name": "[variables('networkWatcherExtensionName')]",
                    "apiVersion": "2017-03-30",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', concat(parameters('virtualMachineName'), copyindex(1)))]",
                        "[resourceId('Microsoft.Compute/virtualMachines/extensions', concat(parameters('virtualMachineName'), copyindex(1)), variables('customAddsExtensionName'))]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Azure.NetworkWatcher",
                        "type": "NetworkWatcherAgentWindows",
                        "typeHandlerVersion": "1.4",
                        "autoUpgradeMinorVersion": true
                    }
                },
                {
                    "type": "extensions",
                    "name": "[variables('windowsPasswordPoliciesExtensionName')]",
                    "apiVersion": "2017-03-30",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', concat(parameters('virtualMachineName'), copyindex(1)))]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Compute",
                        "type": "CustomScriptExtension",
                        "typeHandlerVersion": "1.8",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "fileUris": [
                                "[concat('https://', parameters('artifactsStorageAccountName'), '.blob.core.windows.net/scripts/Windows/enable-local-policy-settings.ps1')]"
                            ]
                        },
                        "protectedSettings": {
                            "storageAccountName": "[parameters('artifactsStorageAccountName')]",
                            "storageAccountKey": "[parameters('artifactsStorageAccountKey')]",
                            "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File ./Windows/enable-local-policy-settings.ps1 -MaxPwdAge ', variables('maxPasswordAge'), ' -MinPwdAge ', variables('minPasswordAge'), ' -MinPwdLength ', variables('minPasswordLength'), ' -PwdHistoryCount ', variables('pwdHistoryCount'))]"
                        }
                    }
                },
                {
                    "type": "extensions",
                    "name": "[variables('windowsDependencyExtensionName')]",
                    "apiVersion": "2018-06-01",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', concat(parameters('virtualMachineName'), copyindex(1)))]",
                        "[variables('windowsPasswordPoliciesExtensionName')]"
                    ],
                    "properties": {
                        "publisher": "[variables('windowsDependencyExtensionPublisher')]",
                        "type": "[variables('windowsDependencyExtensionType')]",
                        "typeHandlerVersion": "[variables('windowsDependencyExtensionHandlerVersion')]",
                        "autoUpgradeMinorVersion": true
                    }
                },
                {
                    "apiVersion": "2018-06-30-preview",
                    "type": "Microsoft.Compute/virtualMachines/providers/guestConfigurationAssignments",
                    "name": "[concat(parameters('virtualMachineName'), copyindex(1), '/Microsoft.GuestConfiguration/', variables('pwdMinLengthConfigName'))]",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', concat(parameters('virtualMachineName'), copyindex(1)))]",
                        "[variables('windowsDependencyExtensionName')]"
                    ],
                    "properties": {
                        "guestConfiguration": {
                            "name": "[variables('pwdMinLengthConfigName')]",
                            "version": "1.*"
                        }
                    }
                },
                {
                    "apiVersion": "2018-06-30-preview",
                    "type": "Microsoft.Compute/virtualMachines/providers/guestConfigurationAssignments",
                    "name": "[concat(parameters('virtualMachineName'), copyindex(1), '/Microsoft.GuestConfiguration/', variables('pwdMinAgeConfigName'))]",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', concat(parameters('virtualMachineName'), copyindex(1)))]",
                        "[variables('windowsDependencyExtensionName')]"
                    ],
                    "properties": {
                        "guestConfiguration": {
                            "name": "[variables('pwdMinAgeConfigName')]",
                            "version": "1.*"
                        }
                    }
                },
                {
                    "apiVersion": "2018-06-30-preview",
                    "type": "Microsoft.Compute/virtualMachines/providers/guestConfigurationAssignments",
                    "name": "[concat(parameters('virtualMachineName'), copyindex(1), '/Microsoft.GuestConfiguration/', variables('pwdNotLast24ConfigMName'))]",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', concat(parameters('virtualMachineName'), copyindex(1)))]",
                        "[variables('windowsDependencyExtensionName')]"
                    ],
                    "properties": {
                        "guestConfiguration": {
                            "name": "[variables('pwdNotLast24ConfigMName')]",
                            "version": "1.*"
                        }
                    }
                },
                {
                    "apiVersion": "2018-06-30-preview",
                    "type": "Microsoft.Compute/virtualMachines/providers/guestConfigurationAssignments",
                    "name": "[concat(parameters('virtualMachineName'), copyindex(1), '/Microsoft.GuestConfiguration/', variables('pwdWithoutReversibleEncryptionConfigName'))]",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', concat(parameters('virtualMachineName'), copyindex(1)))]",
                        "[variables('windowsDependencyExtensionName')]"
                    ],
                    "properties": {
                        "guestConfiguration": {
                            "name": "[variables('pwdWithoutReversibleEncryptionConfigName')]",
                            "version": "1.*"
                        }
                    }
                },
                {
                    "apiVersion": "2018-06-30-preview",
                    "type": "Microsoft.Compute/virtualMachines/providers/guestConfigurationAssignments",
                    "name": "[concat(parameters('virtualMachineName'), copyindex(1), '/Microsoft.GuestConfiguration/', variables('webServerWithTls1.1ConfigName'))]",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', concat(parameters('virtualMachineName'), copyindex(1)))]",
                        "[variables('windowsDependencyExtensionName')]"
                    ],
                    "properties": {
                        "guestConfiguration": {
                            "name": "[variables('webServerWithTls1.1ConfigName')]",
                            "version": "1.*"
                        }
                    }
                },
                {
                    "apiVersion": "2018-06-30-preview",
                    "type": "Microsoft.Compute/virtualMachines/providers/guestConfigurationAssignments",
                    "name": "[concat(parameters('virtualMachineName'), copyindex(1), '/Microsoft.GuestConfiguration/', variables('pwdMaxAgeConfigName'))]",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', concat(parameters('virtualMachineName'), copyindex(1)))]",
                        "[variables('windowsDependencyExtensionName')]"
                    ],
                    "properties": {
                        "guestConfiguration": {
                            "name": "[variables('pwdMaxAgeConfigName')]",
                            "version": "1.*"
                        }
                    }
                },
                {
                    "apiVersion": "2018-06-30-preview",
                    "type": "Microsoft.Compute/virtualMachines/providers/guestConfigurationAssignments",
                    "name": "[concat(parameters('virtualMachineName'), copyindex(1), '/Microsoft.GuestConfiguration/', variables('pwdComplexityConfigName'))]",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', concat(parameters('virtualMachineName'), copyindex(1)))]",
                        "[variables('windowsDependencyExtensionName')]"
                    ],
                    "properties": {
                        "guestConfiguration": {
                            "name": "[variables('pwdComplexityConfigName')]",
                            "version": "1.*"
                        }
                    }
                },
                {
                    "apiVersion": "2015-05-01-preview",
                    "name": "AzurePolicyforWindows",
                    "type": "extensions",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', concat(parameters('virtualMachineName'), copyindex(1)))]",
                        "[variables('windowsDependencyExtensionName')]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.GuestConfiguration",
                        "type": "ConfigurationforWindows",
                        "typeHandlerVersion": "1.1",
                        "autoUpgradeMinorVersion": true,
                        "settings": {},
                        "protectedSettings": {}
                    }
                },
                {
                    "type": "extensions",
                    "name": "[variables('azureDiskEncryptionExtensionName')]",
                    "apiVersion": "2017-03-30",
                    "location": "[resourceGroup().location]",
                    "condition": "[variables('enableDiskEncryption')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', concat(parameters('virtualMachineName'), copyindex(1)))]",
                        "[resourceId('Microsoft.Compute/virtualMachines/extensions', concat(parameters('virtualMachineName'), copyindex(1)), variables('customAddsExtensionName'))]",
                        "[resourceId('Microsoft.Compute/virtualMachines/extensions', concat(parameters('virtualMachineName'), copyindex(1)), variables('antimalwareExtensionName'))]",
                        "[resourceId('Microsoft.Compute/virtualMachines/extensions', concat(parameters('virtualMachineName'), copyindex(1)), variables('diagnosticsExtensionName'))]",
                        "[resourceId('Microsoft.Compute/virtualMachines/extensions', concat(parameters('virtualMachineName'), copyindex(1)), variables('networkWatcherExtensionName'))]",
                        "[resourceId('Microsoft.Compute/virtualMachines/extensions', concat(parameters('virtualMachineName'), copyindex(1)), 'AzurePolicyforWindows')]"
                    ],
                    "properties": {
                      "publisher": "Microsoft.Azure.Security",
                      "type": "AzureDiskEncryption",
                      "typeHandlerVersion": "2.2",
                      "autoUpgradeMinorVersion": true,
                      "forceUpdateTag": "1.0",
                      "settings": {
                        "EncryptionOperation": "[variables('encryptionOperation')]",
                        "KeyVaultURL": "[parameters('keyVaultURL')]",
                        "KeyVaultResourceId": "[parameters('keyVaultId')]",
                        "KeyEncryptionKeyURL": "[parameters('addsKeyEncryptionURL')]",
                        "KeyEncryptionAlgorithm": "[variables('keyEncryptionAlgorithm')]",
                        "VolumeType": "All",
                        "ResizeOSDisk": false
                      }
                    }
                }
            ]
        },
        {
            "name": "[concat('vm', copyindex(1), 'OSEncryptionNestedDeployment')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2016-09-01",
            "condition": "[variables('enableDiskEncryption')]",
            "dependsOn": [
                "vmLoop"
            ],
            "copy": {
                "name": "vmUpdateLoop",
                "count": "[parameters('virtualMachineCount')]"
            },
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "resources": [
                        {
                            "apiVersion": "2017-03-30",
                            "type": "Microsoft.Compute/virtualMachines",
                            "name": "[concat(parameters('virtualMachineName'), copyindex(1))]",
                            "condition": "[variables('enableDiskEncryption')]",
                            "location": "[resourceGroup().location]",
                            "properties": {
                                "storageProfile": {
                                    "osDisk": {
                                        "encryptionSettings": {
                                            "enabled": true,
                                            "diskEncryptionKey": {
                                                "sourceVault": {
                                                    "id": "[parameters('keyVaultId')]"
                                                },
                                                "secretUrl": "[if(equals(variables('enableDiskEncryption'), bool('false')), json('null'), reference(resourceId('Microsoft.Compute/virtualMachines/extensions',  concat(parameters('virtualMachineName'), copyindex(1)), variables('azureDiskEncryptionExtensionName')), '2018-10-01').instanceView.statuses[0].message)]"
                                            },
                                            "keyEncryptionKey": {
                                                "sourceVault": {
                                                    "id": "[parameters('keyVaultId')]"
                                                },
                                                "keyUrl": "[parameters('addsKeyEncryptionURL')]"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    ]
                },
                "parameters": {}
            }
        },
        {
            "name": "[concat('vm', copyindex(1), 'DSCInstallADDSNestedDeployment')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2016-09-01",
            "dependsOn": [
                "vmLoop"
            ],
            "copy": {
                "name": "vmInstallADDSLoop",
                "mode": "serial",
                "count": "[parameters('virtualMachineCount')]"
            },
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "resources": [
                        {
                            "apiVersion": "2017-03-30",
                            "type": "Microsoft.Compute/virtualMachines",
                            "name": "[concat(parameters('virtualMachineName'), copyindex(1))]",
                            "location": "[resourceGroup().location]",
                            "resources": [
                                {
                                    "type": "extensions",
                                    "name": "[variables('customAddsExtensionName')]",
                                    "apiVersion": "2017-03-30",
                                    "location": "[resourceGroup().location]",
                                    "dependsOn": [
                                        "[resourceId('Microsoft.Compute/virtualMachines', concat(parameters('virtualMachineName'), copyindex(1)))]"
                                    ],
                                    "properties": {
                                        "publisher": "Microsoft.Powershell",
                                        "type": "DSC",
                                        "typeHandlerVersion": "2.9",
                                        "autoUpgradeMinorVersion": true,
                                        "settings": {
                                            "configuration": {
                                                "url": "[if(equals(variables('enableDiskEncryption'), bool('false')), concat('https://', parameters('artifactsStorageAccountName'), '.blob.core.windows.net/scripts/Windows/adds_with_format.zip'), concat('https://', parameters('artifactsStorageAccountName'), '.blob.core.windows.net/scripts/Windows/adds_wait_for_bitlocker.zip'))]",
                                                "script": "azure.ps1",
                                                "function": "CreateDomainController"
                                            },
                                            "configurationArguments": {
                                                "DomainName": "[parameters('domainName')]",
                                                "PrimaryDcIpAddress": "[parameters('primaryDCIP')]",
                                                "SiteName": "[parameters('ADSitename')]",
                                                "DriveLetter": "[parameters('domaincontrollerDriveLetter')]",
                                                "DiskId": 2
                                            }
                                        },
                                        "protectedSettings": {
                                            "configurationUrlSasToken": "[variables('configurationUrlSasToken')]",
                                            "configurationArguments": {
                                                "AdminCreds": {
                                                    "Username": "[parameters('domainAdminUsername')]",
                                                    "Password": "[parameters('domainAdminPassword')]"
                                                },
                                                "SafeModeAdminCreds": {
                                                    "Username": "[parameters('domainAdminUsername')]",
                                                    "Password": "[parameters('domainAdminPassword')]"
                                                }
                                            }
                                        }
                                    }
                                },
                                {
                                    "type": "extensions",
                                    "name": "[variables('windowsPasswordPoliciesExtensionName')]",
                                    "apiVersion": "2017-03-30",
                                    "location": "[resourceGroup().location]",
                                    "dependsOn": [
                                        "[resourceId('Microsoft.Compute/virtualMachines', concat(parameters('virtualMachineName'), copyindex(1)))]",
                                        "[variables('customAddsExtensionName')]"
                                    ],
                                    "properties": {
                                        "publisher": "Microsoft.Compute",
                                        "type": "CustomScriptExtension",
                                        "typeHandlerVersion": "1.8",
                                        "autoUpgradeMinorVersion": true,
                                        "settings": {
                                            "fileUris": [
                                                "[concat('https://', parameters('artifactsStorageAccountName'), '.blob.core.windows.net/scripts/Windows/sleep.ps1')]"
                                            ]
                                        },
                                        "protectedSettings": {
                                            "storageAccountName": "[parameters('artifactsStorageAccountName')]",
                                            "storageAccountKey": "[parameters('artifactsStorageAccountKey')]",
                                            "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File ./Windows/sleep.ps1 -Sleep 180')]"
                                        }
                                    }
                                }
                            ]
                        }
                    ]
                },
                "parameters": {}
            }
        }
    ],
    "functions": [
        {
            "namespace": "vdc",
            "members": {
                "nextIP": {
                    "parameters": [
                        {
                            "name": "ip",
                            "type": "string"
                        },
                        {
                            "name": "operand",
                            "type": "int"
                        }
                    ],
                    "output": {
                        "type": "string",
                        "value": "[concat(split(parameters('ip'), '.')[0], '.' ,split(parameters('ip'), '.')[1], '.' ,split(parameters('ip'), '.')[2], '.', add(int(split(parameters('ip'), '.')[3]), parameters('operand')))]"
                    }
                },
                "splitIP": {
                    "parameters": [
                        {
                            "name": "initialIP",
                            "type": "string"
                        }
                    ],
                    "output": {
                        "type": "array",
                        "value": "[split(parameters('initialIP'), '.')]"
                    }
                }
            }
        }
    ],
    "outputs": {
        "aadsResourceGroup": {
            "type": "string",
            "value": "[resourceGroup().name]",
            "metadata": {
                "description": "The Resource Group that was deployed to."
            }
        },
        "dnsServers": {
            "type": "array",
            "value": "[variables('dnsServers').dnsServers]",
            "metadata": {
                "description": "List of ADDS IPs that will serve as DNS Server List on a Virtual Network"
            }
        }
    }
}