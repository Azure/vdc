{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "redisCacheName": {
      "type": "string",
      "metadata": {
        "description": "The name of the Azure Redis Cache to create."
      }
    },
    "redisCacheSKU": {
      "type": "string",
      "allowedValues": [
        "Basic",
        "Standard",
        "Premium"
      ],
      "metadata": {
        "description": "The type of Redis cache to deploy. Valid values: (Basic, Standard, Premium). - Basic, Standard, Premium"
      }
    },
    "redisCacheFamily": {
      "type": "string",
      "defaultValue": "P",
      "allowedValues": [
        "C",
        "P"
      ],
      "metadata": {
        "description": "The SKU family to use. Valid values: (C, P). (C = Basic/Standard, P = Premium). - C or P"
      }
    },
    "redisCacheCapacity": {
      "type": "int",
      "allowedValues": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "defaultValue": 1,
      "metadata": {
        "description": "The size of the Redis cache to deploy. Valid values: for C (Basic/Standard) family (0, 1, 2, 3, 4, 5, 6), for P (Premium) family (1, 2, 3, 4)."
      }
    },
    "enableNonSslPort": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "A boolean value that indicates whether to allow access via non-SSL ports."
      }
    },
    "omsWorkspaceResourceGroup": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Name of the Resource Group housing the OMS workspace."
      }
    },
    "omsWorkspaceName": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Name of the OMS workspace used for diagnostic log integration."
      }
    },
    "diagnosticStorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Storage Account for diagnostics."
      }
    },
    "diagnosticStorageAccountRG": {
      "type": "string",
      "metadata": {
        "description": "Storage Account for diagnostics."
      }
    },
    "logsRetentionInDays": {
      "type": "int",
      "defaultValue": 0,
      "minValue": 0,
      "maxValue": 365,
      "metadata": {
        "description": "Specifies the number of days that logs will be kept for; a value of 0 will retain data indefinitely."
      }
    },
    "vNetResourceGroup": {
      "type": "string",
      "metadata": {
        "description": "The resource group Name of the existing Virtual Network."
      }
    },
    "vnetResourceName": {
      "type": "string",
      "metadata": {
        "description": "The name of the existing Virtual Network."
      }
    },
    "subnetName": {
      "type": "string",
      "metadata": {
        "description": "The name of the existing subnet."
      }
    }
  },
  "variables": {
    "RedisCacheName": "[parameters('redisCacheName')]",
    "RedisCacheDiag": "[concat(parameters('redisCacheName'), '/Microsoft.Insights/service')]",
    "subnetId": "[resourceId(parameters('vNetResourceGroup'),'Microsoft.Network/virtualNetworks/subnets', parameters('vnetResourceName'),  parameters('subnetName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Cache/Redis",
      "apiVersion": "2018-03-01",
      "name": "[variables('RedisCacheName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "enableNonSslPort": "[parameters('enableNonSslPort')]",
        "subnetId": "[variables('subnetId')]",
        "sku": {
          "capacity": "[parameters('redisCacheCapacity')]",
          "family": "[parameters('redisCacheFamily')]",
          "name": "[parameters('redisCacheSKU')]"
        }
      },
      "resources": [
        {
          "type": "Microsoft.Cache/redis/providers/diagnosticsettings",
          "apiVersion": "2017-05-01-preview",
          "name": "[concat(variables('RedisCacheName'), '/Microsoft.Insights/service')]",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[concat('Microsoft.Cache/Redis/', variables('RedisCacheName'))]"
          ],
          "properties": {
            "storageAccountId": "[resourceId(parameters('diagnosticStorageAccountRG'),'Microsoft.Storage/storageAccounts', parameters('diagnosticStorageAccountName'))]",
            "workspaceId": "[resourceId(parameters('omsWorkspaceResourceGroup'), 'Microsoft.OperationalInsights/workspaces', parameters('omsWorkspaceName'))]",
            "logs": [],
            "metrics": [
              {
                "timeGrain": "AllMetrics",
                "enabled": true,
                "retentionPolicy": {
                  "enabled": true,
                  "days": "[parameters('LogsRetentionInDays')]"
                }
              }
            ]
          }
        }
      ]
    }
  ],
  "outputs": {
    "RedisCacheName": {
      "type": "string",
      "value": "[variables('RedisCacheName')]"
    },
    "RedisCacheDiag": {
      "type": "string",
      "value": "[variables('RedisCacheDiag')]"
    },
    "RedisCacheKey": {
      "type": "string",
      "value": "[listKeys(resourceId('Microsoft.Cache/Redis', variables('RedisCacheName')), '2018-03-01').primaryKey]"
    },
    "RedisCacheConnectionString": {
      "type": "string",
      "value": "[concat(variables('RedisCacheName'),'.redis.cache.windows.net:6380',',','password=',listKeys(resourceId('Microsoft.Cache/Redis', variables('RedisCacheName')), '2018-03-01').primaryKey,',','ssl=True',',','abortConnect=False')]"
    }
  }
}
