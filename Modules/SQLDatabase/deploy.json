{
    "$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Optional. Azure region where the database will be deployed."
            }
        },
        "databaseName": {
            "type": "string",
            "metadata": {
                "description": "Required. The name of the database."
            }
        },
        "skuName": {
            "type": "string",
            "defaultValue": "S0",
            "metadata": {
                "description": "Optional. The name of the SKU."
            }
        },
        "skuTier": {
            "type": "string",
            "defaultValue": "Standard",
            "metadata": {
                "description": "Optional. The tier of the SKU."
            }
        },
        "collation": {
            "type": "string",
            "defaultValue": "SQL_Latin1_General_CP1_CI_AS",
            "metadata": {
                "description": "Optional. The collation of the database."
            }
        },
        "serverName": {
            "type": "string",
            "metadata": {
                "description": "Required. The name of the SQL server on which the database will be created."
            }
        },
        "sampleName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Optional. Indicates the name of the sample schema to apply when creating the database."
            }
        },
        "zoneRedundant": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Optional. Whether or not this database is zone redundant, which means the replicas of this database will be spread across multiple availability zones."
            }
        },
        "licenseType": {
            "type": "string",
            "defaultValue": "LicenseIncluded",
            "metadata": {
                "description": "Optional. The license type to apply for this database. - LicenseIncluded or BasePrice"
            }
        },
        "readScale": {
            "type": "string",
            "defaultValue": "Disabled",
            "metadata": {
                "description": "Optional. If the database is a geo-secondary, readScale indicates whether read-only connections are allowed to this database or not. Enabled or Disabled"
            }
        },
        "readReplicaCount": {
            "type": "int",
            "defaultValue": 0,
            "metadata": {
                "description": "Optional. Number of replicas to be created."
            }
        },
        "minCapacity": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": ""
            }
        },
        "autoPauseDelay": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Optional. Defines the period of time the database must be inactive before it is automatically paused."
            }
        },
        "diagnosticLogsRetentionInDays": {
            "type": "int",
            "defaultValue": 365,
            "minValue": 0,
            "maxValue": 365,
            "metadata": {
                "description": "Optional. Specifies the number of days that logs will be kept for; a value of 0 will retain data indefinitely."
            }
        },
        "diagnosticStorageAccountId": {
            "type": "string",
            "metadata": {
                "description": "Required. Resource identifier of the Diagnostic Storage Account."
            }
        },
        "workspaceId": {
            "type": "string",
            "metadata": {
                "description": "Required. Resource identifier of Log Analytics."
            }
        }
    },
    "variables": {
        "databaseName": "[concat(parameters('serverName'), '/', parameters('databaseName'))]"
    },
    "resources": [
        {
            "apiVersion": "2017-03-01-preview",
            "type": "Microsoft.Sql/servers/databases",
            "location": "[parameters('location')]",
            "name": "[variables('databaseName')]",
            "properties": {
                "collation": "[parameters('collation')]",
                "sampleName": "[parameters('sampleName')]",
                "zoneRedundant": "[parameters('zoneRedundant')]",
                "licenseType": "[parameters('licenseType')]",
                "readScale": "[parameters('readScale')]",
                "readReplicaCount": "[parameters('readReplicaCount')]",
                "minCapacity": "[parameters('minCapacity')]",
                "autoPauseDelay": "[parameters('autoPauseDelay')]"
            },
            "sku": {
                "name": "[parameters('skuName')]",
                "tier": "[parameters('skuTier')]"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/providers/diagnosticSettings",
            "apiVersion": "2017-05-01-preview",
            "location": "[parameters('location')]",
            "name": "[concat(variables('databaseName'), '/Microsoft.Insights/service')]",
            "dependsOn": [
                "[concat(resourceId('Microsoft.Sql/servers', parameters('serverName')), '/databases/', parameters('databaseName'))]"
            ],
            "properties": {
                "storageAccountId": "[parameters('diagnosticStorageAccountId')]",
                "workspaceId": "[parameters('workspaceId')]",
                "metrics": [
                    {
                        "category": "AllMetrics",
                        "timeGrain": null,
                        "enabled": true,
                        "retentionPolicy": {
                            "enabled": true,
                            "days": "[parameters('diagnosticLogsRetentionInDays')]"
                        }
                    }
                ],
                "logs": [
                    {
                        "category": "SQLInsights",
                        "enabled": true,
                        "retentionPolicy": {
                            "enabled": true,
                            "days": "[parameters('diagnosticLogsRetentionInDays')]"
                        }
                    },
                    {
                        "category": "AutomaticTuning",
                        "enabled": true,
                        "retentionPolicy": {
                            "enabled": true,
                            "days": "[parameters('diagnosticLogsRetentionInDays')]"
                        }
                    },
                    {
                        "category": "QueryStoreRuntimeStatistics",
                        "enabled": true,
                        "retentionPolicy": {
                            "enabled": true,
                            "days": "[parameters('diagnosticLogsRetentionInDays')]"
                        }
                    },
                    {
                        "category": "QueryStoreWaitStatistics",
                        "enabled": true,
                        "retentionPolicy": {
                            "enabled": true,
                            "days": "[parameters('diagnosticLogsRetentionInDays')]"
                        }
                    },
                    {
                        "category": "Errors",
                        "enabled": true,
                        "retentionPolicy": {
                            "enabled": true,
                            "days": "[parameters('diagnosticLogsRetentionInDays')]"
                        }
                    },
                    {
                        "category": "Timeouts",
                        "enabled": true,
                        "retentionPolicy": {
                            "enabled": true,
                            "days": "[parameters('diagnosticLogsRetentionInDays')]"
                        }
                    },
                    {
                        "category": "Blocks",
                        "enabled": true,
                        "retentionPolicy": {
                            "enabled": true,
                            "days": "[parameters('diagnosticLogsRetentionInDays')]"
                        }
                    },
                    {
                        "category": "Deadlocks",
                        "enabled": true,
                        "retentionPolicy": {
                            "enabled": true,
                            "days": "[parameters('diagnosticLogsRetentionInDays')]"
                        }
                    }
                ]
            }
        }
    ],
    "outputs": {
        "databaseResourceGroup": {
            "type": "string",
            "value": "[resourceGroup().name]",
            "metadata": {
                "description": "The name of the Resource Group the SQL Database is created in."
            }
        },
        "databaseResourceId": {
            "type": "string",
            "value": "[concat(resourceId('Microsoft.Sql/servers', parameters('serverName')), '/databases/', parameters('databaseName'))]",
            "metadata": {
                "description": "The Resource Id of the SQL Database deployed."
            }
        },
        "databaseName": {
            "type": "string",
            "value": "[variables('databaseName')]",
            "metadata": {
                "description": "The Name of the SQL Database deployed."
            }
        }
    }
}